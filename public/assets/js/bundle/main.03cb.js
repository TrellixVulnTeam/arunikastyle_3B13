/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/axios/index.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(\"./node_modules/axios/lib/axios.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzP2JjM2EiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9heGlvcycpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/index.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(\"./node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(\"./node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(\"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(\"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(\"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(\"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(\"./node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/xhr.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(\"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(\"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(\"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(\"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(\"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(\"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(\"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(\"./node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(\"./node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports[\"default\"] = axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcz9jZWU0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xudmFyIEF4aW9zID0gcmVxdWlyZSgnLi9jb3JlL0F4aW9zJyk7XG52YXIgbWVyZ2VDb25maWcgPSByZXF1aXJlKCcuL2NvcmUvbWVyZ2VDb25maWcnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZGVmYXVsdENvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICogQHJldHVybiB7QXhpb3N9IEEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRDb25maWcpIHtcbiAgdmFyIGNvbnRleHQgPSBuZXcgQXhpb3MoZGVmYXVsdENvbmZpZyk7XG4gIHZhciBpbnN0YW5jZSA9IGJpbmQoQXhpb3MucHJvdG90eXBlLnJlcXVlc3QsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgYXhpb3MucHJvdG90eXBlIHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgQXhpb3MucHJvdG90eXBlLCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGNvbnRleHQgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBjb250ZXh0KTtcblxuICByZXR1cm4gaW5zdGFuY2U7XG59XG5cbi8vIENyZWF0ZSB0aGUgZGVmYXVsdCBpbnN0YW5jZSB0byBiZSBleHBvcnRlZFxudmFyIGF4aW9zID0gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdHMpO1xuXG4vLyBFeHBvc2UgQXhpb3MgY2xhc3MgdG8gYWxsb3cgY2xhc3MgaW5oZXJpdGFuY2VcbmF4aW9zLkF4aW9zID0gQXhpb3M7XG5cbi8vIEZhY3RvcnkgZm9yIGNyZWF0aW5nIG5ldyBpbnN0YW5jZXNcbmF4aW9zLmNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpbnN0YW5jZUNvbmZpZykge1xuICByZXR1cm4gY3JlYXRlSW5zdGFuY2UobWVyZ2VDb25maWcoYXhpb3MuZGVmYXVsdHMsIGluc3RhbmNlQ29uZmlnKSk7XG59O1xuXG4vLyBFeHBvc2UgQ2FuY2VsICYgQ2FuY2VsVG9rZW5cbmF4aW9zLkNhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbCcpO1xuYXhpb3MuQ2FuY2VsVG9rZW4gPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWxUb2tlbicpO1xuYXhpb3MuaXNDYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9pc0NhbmNlbCcpO1xuXG4vLyBFeHBvc2UgYWxsL3NwcmVhZFxuYXhpb3MuYWxsID0gZnVuY3Rpb24gYWxsKHByb21pc2VzKSB7XG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG59O1xuYXhpb3Muc3ByZWFkID0gcmVxdWlyZSgnLi9oZWxwZXJzL3NwcmVhZCcpO1xuXG4vLyBFeHBvc2UgaXNBeGlvc0Vycm9yXG5heGlvcy5pc0F4aW9zRXJyb3IgPSByZXF1aXJlKCcuL2hlbHBlcnMvaXNBeGlvc0Vycm9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsLmpzPzdhNzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEEgYENhbmNlbGAgaXMgYW4gb2JqZWN0IHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gb3BlcmF0aW9uIGlzIGNhbmNlbGVkLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtzdHJpbmc9fSBtZXNzYWdlIFRoZSBtZXNzYWdlLlxuICovXG5mdW5jdGlvbiBDYW5jZWwobWVzc2FnZSkge1xuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xufVxuXG5DYW5jZWwucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiAnQ2FuY2VsJyArICh0aGlzLm1lc3NhZ2UgPyAnOiAnICsgdGhpcy5tZXNzYWdlIDogJycpO1xufTtcblxuQ2FuY2VsLnByb3RvdHlwZS5fX0NBTkNFTF9fID0gdHJ1ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/Cancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(\"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanM/OGRmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CancelToken.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzPzJlNjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/isCancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(\"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(\"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(\"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(\"./node_modules/axios/lib/core/mergeConfig.js\");\nvar validator = __webpack_require__(\"./node_modules/axios/lib/helpers/validator.js\");\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzPzBhMDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xudmFyIHZhbGlkYXRvciA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvdmFsaWRhdG9yJyk7XG5cbnZhciB2YWxpZGF0b3JzID0gdmFsaWRhdG9yLnZhbGlkYXRvcnM7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBhcmd1bWVudHNbMF07XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcblxuICAvLyBTZXQgY29uZmlnLm1ldGhvZFxuICBpZiAoY29uZmlnLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodGhpcy5kZWZhdWx0cy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gdGhpcy5kZWZhdWx0cy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcubWV0aG9kID0gJ2dldCc7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbmFsID0gY29uZmlnLnRyYW5zaXRpb25hbDtcblxuICBpZiAodHJhbnNpdGlvbmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YWxpZGF0b3IuYXNzZXJ0T3B0aW9ucyh0cmFuc2l0aW9uYWwsIHtcbiAgICAgIHNpbGVudEpTT05QYXJzaW5nOiB2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4sICcxLjAuMCcpLFxuICAgICAgZm9yY2VkSlNPTlBhcnNpbmc6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbiwgJzEuMC4wJyksXG4gICAgICBjbGFyaWZ5VGltZW91dEVycm9yOiB2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4sICcxLjAuMCcpXG4gICAgfSwgZmFsc2UpO1xuICB9XG5cbiAgLy8gZmlsdGVyIG91dCBza2lwcGVkIGludGVyY2VwdG9yc1xuICB2YXIgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4gPSBbXTtcbiAgdmFyIHN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycyA9IHRydWU7XG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbiB1bnNoaWZ0UmVxdWVzdEludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGlmICh0eXBlb2YgaW50ZXJjZXB0b3IucnVuV2hlbiA9PT0gJ2Z1bmN0aW9uJyAmJiBpbnRlcmNlcHRvci5ydW5XaGVuKGNvbmZpZykgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzID0gc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzICYmIGludGVyY2VwdG9yLnN5bmNocm9ub3VzO1xuXG4gICAgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdmFyIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbiA9IFtdO1xuICB0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uIHB1c2hSZXNwb25zZUludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB2YXIgcHJvbWlzZTtcblxuICBpZiAoIXN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycykge1xuICAgIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG5cbiAgICBBcnJheS5wcm90b3R5cGUudW5zaGlmdC5hcHBseShjaGFpbiwgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4pO1xuICAgIGNoYWluID0gY2hhaW4uY29uY2F0KHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbik7XG5cbiAgICBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG4gICAgd2hpbGUgKGNoYWluLmxlbmd0aCkge1xuICAgICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfVxuXG5cbiAgdmFyIG5ld0NvbmZpZyA9IGNvbmZpZztcbiAgd2hpbGUgKHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLmxlbmd0aCkge1xuICAgIHZhciBvbkZ1bGZpbGxlZCA9IHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCk7XG4gICAgdmFyIG9uUmVqZWN0ZWQgPSByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpO1xuICAgIHRyeSB7XG4gICAgICBuZXdDb25maWcgPSBvbkZ1bGZpbGxlZChuZXdDb25maWcpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBvblJlamVjdGVkKGVycm9yKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHRyeSB7XG4gICAgcHJvbWlzZSA9IGRpc3BhdGNoUmVxdWVzdChuZXdDb25maWcpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gIH1cblxuICB3aGlsZSAocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLmxlbmd0aCkge1xuICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4ocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCksIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogKGNvbmZpZyB8fCB7fSkuZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/Axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzP2Y2YjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIEludGVyY2VwdG9yTWFuYWdlcigpIHtcbiAgdGhpcy5oYW5kbGVycyA9IFtdO1xufVxuXG4vKipcbiAqIEFkZCBhIG5ldyBpbnRlcmNlcHRvciB0byB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdWxmaWxsZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgdGhlbmAgZm9yIGEgYFByb21pc2VgXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3RlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGByZWplY3RgIGZvciBhIGBQcm9taXNlYFxuICpcbiAqIEByZXR1cm4ge051bWJlcn0gQW4gSUQgdXNlZCB0byByZW1vdmUgaW50ZXJjZXB0b3IgbGF0ZXJcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS51c2UgPSBmdW5jdGlvbiB1c2UoZnVsZmlsbGVkLCByZWplY3RlZCwgb3B0aW9ucykge1xuICB0aGlzLmhhbmRsZXJzLnB1c2goe1xuICAgIGZ1bGZpbGxlZDogZnVsZmlsbGVkLFxuICAgIHJlamVjdGVkOiByZWplY3RlZCxcbiAgICBzeW5jaHJvbm91czogb3B0aW9ucyA/IG9wdGlvbnMuc3luY2hyb25vdXMgOiBmYWxzZSxcbiAgICBydW5XaGVuOiBvcHRpb25zID8gb3B0aW9ucy5ydW5XaGVuIDogbnVsbFxuICB9KTtcbiAgcmV0dXJuIHRoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMTtcbn07XG5cbi8qKlxuICogUmVtb3ZlIGFuIGludGVyY2VwdG9yIGZyb20gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGlkIFRoZSBJRCB0aGF0IHdhcyByZXR1cm5lZCBieSBgdXNlYFxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmVqZWN0ID0gZnVuY3Rpb24gZWplY3QoaWQpIHtcbiAgaWYgKHRoaXMuaGFuZGxlcnNbaWRdKSB7XG4gICAgdGhpcy5oYW5kbGVyc1tpZF0gPSBudWxsO1xuICB9XG59O1xuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbGwgdGhlIHJlZ2lzdGVyZWQgaW50ZXJjZXB0b3JzXG4gKlxuICogVGhpcyBtZXRob2QgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3Igc2tpcHBpbmcgb3ZlciBhbnlcbiAqIGludGVyY2VwdG9ycyB0aGF0IG1heSBoYXZlIGJlY29tZSBgbnVsbGAgY2FsbGluZyBgZWplY3RgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIGludGVyY2VwdG9yXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgdXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiBmb3JFYWNoSGFuZGxlcihoKSB7XG4gICAgaWYgKGggIT09IG51bGwpIHtcbiAgICAgIGZuKGgpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEludGVyY2VwdG9yTWFuYWdlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/InterceptorManager.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(\"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(\"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzPzgzYjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/buildFullPath.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(\"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9jcmVhdGVFcnJvci5qcz8yZDgzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vZW5oYW5jZUVycm9yJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2UsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgdmFyIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICByZXR1cm4gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/createError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(\"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(\"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(\"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanM/NTI3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgIGNvbmZpZyxcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgY29uZmlnLFxuICAgICAgcmVzcG9uc2UuZGF0YSxcbiAgICAgIHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/dispatchRequest.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzPzM4N2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVwZGF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgY29uZmlnLCBlcnJvciBjb2RlLCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyb3IgVGhlIGVycm9yIHRvIHVwZGF0ZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIGVycm9yLmNvbmZpZyA9IGNvbmZpZztcbiAgaWYgKGNvZGUpIHtcbiAgICBlcnJvci5jb2RlID0gY29kZTtcbiAgfVxuXG4gIGVycm9yLnJlcXVlc3QgPSByZXF1ZXN0O1xuICBlcnJvci5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICBlcnJvci5pc0F4aW9zRXJyb3IgPSB0cnVlO1xuXG4gIGVycm9yLnRvSlNPTiA9IGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIGNvZGU6IHRoaXMuY29kZVxuICAgIH07XG4gIH07XG4gIHJldHVybiBlcnJvcjtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/enhanceError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcz80YTdiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICB2YXIgdmFsdWVGcm9tQ29uZmlnMktleXMgPSBbJ3VybCcsICdtZXRob2QnLCAnZGF0YSddO1xuICB2YXIgbWVyZ2VEZWVwUHJvcGVydGllc0tleXMgPSBbJ2hlYWRlcnMnLCAnYXV0aCcsICdwcm94eScsICdwYXJhbXMnXTtcbiAgdmFyIGRlZmF1bHRUb0NvbmZpZzJLZXlzID0gW1xuICAgICdiYXNlVVJMJywgJ3RyYW5zZm9ybVJlcXVlc3QnLCAndHJhbnNmb3JtUmVzcG9uc2UnLCAncGFyYW1zU2VyaWFsaXplcicsXG4gICAgJ3RpbWVvdXQnLCAndGltZW91dE1lc3NhZ2UnLCAnd2l0aENyZWRlbnRpYWxzJywgJ2FkYXB0ZXInLCAncmVzcG9uc2VUeXBlJywgJ3hzcmZDb29raWVOYW1lJyxcbiAgICAneHNyZkhlYWRlck5hbWUnLCAnb25VcGxvYWRQcm9ncmVzcycsICdvbkRvd25sb2FkUHJvZ3Jlc3MnLCAnZGVjb21wcmVzcycsXG4gICAgJ21heENvbnRlbnRMZW5ndGgnLCAnbWF4Qm9keUxlbmd0aCcsICdtYXhSZWRpcmVjdHMnLCAndHJhbnNwb3J0JywgJ2h0dHBBZ2VudCcsXG4gICAgJ2h0dHBzQWdlbnQnLCAnY2FuY2VsVG9rZW4nLCAnc29ja2V0UGF0aCcsICdyZXNwb25zZUVuY29kaW5nJ1xuICBdO1xuICB2YXIgZGlyZWN0TWVyZ2VLZXlzID0gWyd2YWxpZGF0ZVN0YXR1cyddO1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiB1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgZnVuY3Rpb24gbWVyZ2VEZWVwUHJvcGVydGllcyhwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgdXRpbHMuZm9yRWFjaCh2YWx1ZUZyb21Db25maWcyS2V5cywgZnVuY3Rpb24gdmFsdWVGcm9tQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gobWVyZ2VEZWVwUHJvcGVydGllc0tleXMsIG1lcmdlRGVlcFByb3BlcnRpZXMpO1xuXG4gIHV0aWxzLmZvckVhY2goZGVmYXVsdFRvQ29uZmlnMktleXMsIGZ1bmN0aW9uIGRlZmF1bHRUb0NvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKGRpcmVjdE1lcmdlS2V5cywgZnVuY3Rpb24gbWVyZ2UocHJvcCkge1xuICAgIGlmIChwcm9wIGluIGNvbmZpZzIpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGF4aW9zS2V5cyA9IHZhbHVlRnJvbUNvbmZpZzJLZXlzXG4gICAgLmNvbmNhdChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cylcbiAgICAuY29uY2F0KGRlZmF1bHRUb0NvbmZpZzJLZXlzKVxuICAgIC5jb25jYXQoZGlyZWN0TWVyZ2VLZXlzKTtcblxuICB2YXIgb3RoZXJLZXlzID0gT2JqZWN0XG4gICAgLmtleXMoY29uZmlnMSlcbiAgICAuY29uY2F0KE9iamVjdC5rZXlzKGNvbmZpZzIpKVxuICAgIC5maWx0ZXIoZnVuY3Rpb24gZmlsdGVyQXhpb3NLZXlzKGtleSkge1xuICAgICAgcmV0dXJuIGF4aW9zS2V5cy5pbmRleE9mKGtleSkgPT09IC0xO1xuICAgIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gob3RoZXJLZXlzLCBtZXJnZURlZXBQcm9wZXJ0aWVzKTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/mergeConfig.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar createError = __webpack_require__(\"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanM/NDY3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4vY3JlYXRlRXJyb3InKTtcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICB2YXIgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/settle.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\nvar defaults = __webpack_require__(\"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcz9jNDAxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi8uLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IGRhdGEgVGhlIGRhdGEgdG8gYmUgdHJhbnNmb3JtZWRcbiAqIEBwYXJhbSB7QXJyYXl9IGhlYWRlcnMgVGhlIGhlYWRlcnMgZm9yIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdHJhbnNmb3JtRGF0YShkYXRhLCBoZWFkZXJzLCBmbnMpIHtcbiAgdmFyIGNvbnRleHQgPSB0aGlzIHx8IGRlZmF1bHRzO1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbi5jYWxsKGNvbnRleHQsIGRhdGEsIGhlYWRlcnMpO1xuICB9KTtcblxuICByZXR1cm4gZGF0YTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/transformData.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(\"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\nvar enhanceError = __webpack_require__(\"./node_modules/axios/lib/core/enhanceError.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(\"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(\"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy5qcz8yNDQ0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIG5vcm1hbGl6ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vY29yZS9lbmhhbmNlRXJyb3InKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnlTYWZlbHkocmF3VmFsdWUsIHBhcnNlciwgZW5jb2Rlcikge1xuICBpZiAodXRpbHMuaXNTdHJpbmcocmF3VmFsdWUpKSB7XG4gICAgdHJ5IHtcbiAgICAgIChwYXJzZXIgfHwgSlNPTi5wYXJzZSkocmF3VmFsdWUpO1xuICAgICAgcmV0dXJuIHV0aWxzLnRyaW0ocmF3VmFsdWUpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmIChlLm5hbWUgIT09ICdTeW50YXhFcnJvcicpIHtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gKGVuY29kZXIgfHwgSlNPTi5zdHJpbmdpZnkpKHJhd1ZhbHVlKTtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuXG4gIHRyYW5zaXRpb25hbDoge1xuICAgIHNpbGVudEpTT05QYXJzaW5nOiB0cnVlLFxuICAgIGZvcmNlZEpTT05QYXJzaW5nOiB0cnVlLFxuICAgIGNsYXJpZnlUaW1lb3V0RXJyb3I6IGZhbHNlXG4gIH0sXG5cbiAgYWRhcHRlcjogZ2V0RGVmYXVsdEFkYXB0ZXIoKSxcblxuICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVxdWVzdChkYXRhLCBoZWFkZXJzKSB7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQWNjZXB0Jyk7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQ29udGVudC1UeXBlJyk7XG5cbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSB8fCAoaGVhZGVycyAmJiBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9PT0gJ2FwcGxpY2F0aW9uL2pzb24nKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICByZXR1cm4gc3RyaW5naWZ5U2FmZWx5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgdmFyIHRyYW5zaXRpb25hbCA9IHRoaXMudHJhbnNpdGlvbmFsO1xuICAgIHZhciBzaWxlbnRKU09OUGFyc2luZyA9IHRyYW5zaXRpb25hbCAmJiB0cmFuc2l0aW9uYWwuc2lsZW50SlNPTlBhcnNpbmc7XG4gICAgdmFyIGZvcmNlZEpTT05QYXJzaW5nID0gdHJhbnNpdGlvbmFsICYmIHRyYW5zaXRpb25hbC5mb3JjZWRKU09OUGFyc2luZztcbiAgICB2YXIgc3RyaWN0SlNPTlBhcnNpbmcgPSAhc2lsZW50SlNPTlBhcnNpbmcgJiYgdGhpcy5yZXNwb25zZVR5cGUgPT09ICdqc29uJztcblxuICAgIGlmIChzdHJpY3RKU09OUGFyc2luZyB8fCAoZm9yY2VkSlNPTlBhcnNpbmcgJiYgdXRpbHMuaXNTdHJpbmcoZGF0YSkgJiYgZGF0YS5sZW5ndGgpKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHN0cmljdEpTT05QYXJzaW5nKSB7XG4gICAgICAgICAgaWYgKGUubmFtZSA9PT0gJ1N5bnRheEVycm9yJykge1xuICAgICAgICAgICAgdGhyb3cgZW5oYW5jZUVycm9yKGUsIHRoaXMsICdFX0pTT05fUEFSU0UnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICAvKipcbiAgICogQSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byBhYm9ydCBhIHJlcXVlc3QuIElmIHNldCB0byAwIChkZWZhdWx0KSBhXG4gICAqIHRpbWVvdXQgaXMgbm90IGNyZWF0ZWQuXG4gICAqL1xuICB0aW1lb3V0OiAwLFxuXG4gIHhzcmZDb29raWVOYW1lOiAnWFNSRi1UT0tFTicsXG4gIHhzcmZIZWFkZXJOYW1lOiAnWC1YU1JGLVRPS0VOJyxcblxuICBtYXhDb250ZW50TGVuZ3RoOiAtMSxcbiAgbWF4Qm9keUxlbmd0aDogLTEsXG5cbiAgdmFsaWRhdGVTdGF0dXM6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHN0YXR1cykge1xuICAgIHJldHVybiBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMDtcbiAgfVxufTtcblxuZGVmYXVsdHMuaGVhZGVycyA9IHtcbiAgY29tbW9uOiB7XG4gICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gIH1cbn07XG5cbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0ge307XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0gdXRpbHMubWVyZ2UoREVGQVVMVF9DT05URU5UX1RZUEUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzPzFkMmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/bind.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzPzMwYjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/buildURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanM/ZTY4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/combineURLs.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb29raWVzLmpzPzdhYWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgc3VwcG9ydCBkb2N1bWVudC5jb29raWVcbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKG5hbWUsIHZhbHVlLCBleHBpcmVzLCBwYXRoLCBkb21haW4sIHNlY3VyZSkge1xuICAgICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgICBjb29raWUucHVzaChuYW1lICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSk7XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNOdW1iZXIoZXhwaXJlcykpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcocGF0aCkpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcoZG9tYWluKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2VjdXJlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llLmpvaW4oJzsgJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZChuYW1lKSB7XG4gICAgICAgICAgdmFyIG1hdGNoID0gZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoJyhefDtcXFxccyopKCcgKyBuYW1lICsgJyk9KFteO10qKScpKTtcbiAgICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKG5hbWUpIHtcbiAgICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQoKSB7IHJldHVybiBudWxsOyB9LFxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/cookies.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzP2Q5MjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGRcXCtcXC1cXC5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAbsoluteURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcz81ZjAyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHBheWxvYWQgaXMgYW4gZXJyb3IgdGhyb3duIGJ5IEF4aW9zXG4gKlxuICogQHBhcmFtIHsqfSBwYXlsb2FkIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3MsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQXhpb3NFcnJvcihwYXlsb2FkKSB7XG4gIHJldHVybiAodHlwZW9mIHBheWxvYWQgPT09ICdvYmplY3QnKSAmJiAocGF5bG9hZC5pc0F4aW9zRXJyb3IgPT09IHRydWUpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAxiosError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcz8zOTM0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4gIC8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICB2YXIgdXJsUGFyc2luZ05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICB2YXIgb3JpZ2luVVJMO1xuXG4gICAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICAgIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7XG4gICAgICAgIHZhciBocmVmID0gdXJsO1xuXG4gICAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcbiAgICAgICAgICBocmVmID0gdXJsUGFyc2luZ05vZGUuaHJlZjtcbiAgICAgICAgfVxuXG4gICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuXG4gICAgICAgIC8vIHVybFBhcnNpbmdOb2RlIHByb3ZpZGVzIHRoZSBVcmxVdGlscyBpbnRlcmZhY2UgLSBodHRwOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jdXJsdXRpbHNcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBocmVmOiB1cmxQYXJzaW5nTm9kZS5ocmVmLFxuICAgICAgICAgIHByb3RvY29sOiB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbCA/IHVybFBhcnNpbmdOb2RlLnByb3RvY29sLnJlcGxhY2UoLzokLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgICBzZWFyY2g6IHVybFBhcnNpbmdOb2RlLnNlYXJjaCA/IHVybFBhcnNpbmdOb2RlLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpIDogJycsXG4gICAgICAgICAgaGFzaDogdXJsUGFyc2luZ05vZGUuaGFzaCA/IHVybFBhcnNpbmdOb2RlLmhhc2gucmVwbGFjZSgvXiMvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgICAgcG9ydDogdXJsUGFyc2luZ05vZGUucG9ydCxcbiAgICAgICAgICBwYXRobmFtZTogKHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nKSA/XG4gICAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZSA6XG4gICAgICAgICAgICAnLycgKyB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBvcmlnaW5VUkwgPSByZXNvbHZlVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcblxuICAgICAgLyoqXG4gICAgKiBEZXRlcm1pbmUgaWYgYSBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgY3VycmVudCBsb2NhdGlvblxuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0VVJMIFRoZSBVUkwgdG8gdGVzdFxuICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4sIG90aGVyd2lzZSBmYWxzZVxuICAgICovXG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgICAgdmFyIHBhcnNlZCA9ICh1dGlscy5pc1N0cmluZyhyZXF1ZXN0VVJMKSkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDtcbiAgICAgICAgcmV0dXJuIChwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJlxuICAgICAgICAgICAgcGFyc2VkLmhvc3QgPT09IG9yaWdpblVSTC5ob3N0KTtcbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52cyAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isURLSameOrigin.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanM/YzhhZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCBub3JtYWxpemVkTmFtZSkge1xuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMsIGZ1bmN0aW9uIHByb2Nlc3NIZWFkZXIodmFsdWUsIG5hbWUpIHtcbiAgICBpZiAobmFtZSAhPT0gbm9ybWFsaXplZE5hbWUgJiYgbmFtZS50b1VwcGVyQ2FzZSgpID09PSBub3JtYWxpemVkTmFtZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICBoZWFkZXJzW25vcm1hbGl6ZWROYW1lXSA9IHZhbHVlO1xuICAgICAgZGVsZXRlIGhlYWRlcnNbbmFtZV07XG4gICAgfVxuICB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/normalizeHeaderName.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(\"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcz9jMzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vLyBIZWFkZXJzIHdob3NlIGR1cGxpY2F0ZXMgYXJlIGlnbm9yZWQgYnkgbm9kZVxuLy8gYy5mLiBodHRwczovL25vZGVqcy5vcmcvYXBpL2h0dHAuaHRtbCNodHRwX21lc3NhZ2VfaGVhZGVyc1xudmFyIGlnbm9yZUR1cGxpY2F0ZU9mID0gW1xuICAnYWdlJywgJ2F1dGhvcml6YXRpb24nLCAnY29udGVudC1sZW5ndGgnLCAnY29udGVudC10eXBlJywgJ2V0YWcnLFxuICAnZXhwaXJlcycsICdmcm9tJywgJ2hvc3QnLCAnaWYtbW9kaWZpZWQtc2luY2UnLCAnaWYtdW5tb2RpZmllZC1zaW5jZScsXG4gICdsYXN0LW1vZGlmaWVkJywgJ2xvY2F0aW9uJywgJ21heC1mb3J3YXJkcycsICdwcm94eS1hdXRob3JpemF0aW9uJyxcbiAgJ3JlZmVyZXInLCAncmV0cnktYWZ0ZXInLCAndXNlci1hZ2VudCdcbl07XG5cbi8qKlxuICogUGFyc2UgaGVhZGVycyBpbnRvIGFuIG9iamVjdFxuICpcbiAqIGBgYFxuICogRGF0ZTogV2VkLCAyNyBBdWcgMjAxNCAwODo1ODo0OSBHTVRcbiAqIENvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuICogQ29ubmVjdGlvbjoga2VlcC1hbGl2ZVxuICogVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWRcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBoZWFkZXJzIEhlYWRlcnMgbmVlZGluZyB0byBiZSBwYXJzZWRcbiAqIEByZXR1cm5zIHtPYmplY3R9IEhlYWRlcnMgcGFyc2VkIGludG8gYW4gb2JqZWN0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2VIZWFkZXJzKGhlYWRlcnMpIHtcbiAgdmFyIHBhcnNlZCA9IHt9O1xuICB2YXIga2V5O1xuICB2YXIgdmFsO1xuICB2YXIgaTtcblxuICBpZiAoIWhlYWRlcnMpIHsgcmV0dXJuIHBhcnNlZDsgfVxuXG4gIHV0aWxzLmZvckVhY2goaGVhZGVycy5zcGxpdCgnXFxuJyksIGZ1bmN0aW9uIHBhcnNlcihsaW5lKSB7XG4gICAgaSA9IGxpbmUuaW5kZXhPZignOicpO1xuICAgIGtleSA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoMCwgaSkpLnRvTG93ZXJDYXNlKCk7XG4gICAgdmFsID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cihpICsgMSkpO1xuXG4gICAgaWYgKGtleSkge1xuICAgICAgaWYgKHBhcnNlZFtrZXldICYmIGlnbm9yZUR1cGxpY2F0ZU9mLmluZGV4T2Yoa2V5KSA+PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICBwYXJzZWRba2V5XSA9IChwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldIDogW10pLmNvbmNhdChbdmFsXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJzZWRba2V5XSA9IHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gKyAnLCAnICsgdmFsIDogdmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseHeaders.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzPzBkZjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFN5bnRhY3RpYyBzdWdhciBmb3IgaW52b2tpbmcgYSBmdW5jdGlvbiBhbmQgZXhwYW5kaW5nIGFuIGFycmF5IGZvciBhcmd1bWVudHMuXG4gKlxuICogQ29tbW9uIHVzZSBjYXNlIHdvdWxkIGJlIHRvIHVzZSBgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5YC5cbiAqXG4gKiAgYGBganNcbiAqICBmdW5jdGlvbiBmKHgsIHksIHopIHt9XG4gKiAgdmFyIGFyZ3MgPSBbMSwgMiwgM107XG4gKiAgZi5hcHBseShudWxsLCBhcmdzKTtcbiAqICBgYGBcbiAqXG4gKiBXaXRoIGBzcHJlYWRgIHRoaXMgZXhhbXBsZSBjYW4gYmUgcmUtd3JpdHRlbi5cbiAqXG4gKiAgYGBganNcbiAqICBzcHJlYWQoZnVuY3Rpb24oeCwgeSwgeikge30pKFsxLCAyLCAzXSk7XG4gKiAgYGBgXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzcHJlYWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoYXJyKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFycik7XG4gIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/spread.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar pkg = __webpack_require__(\"./node_modules/axios/package.json\");\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzPzg0OGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcGtnID0gcmVxdWlyZSgnLi8uLi8uLi9wYWNrYWdlLmpzb24nKTtcblxudmFyIHZhbGlkYXRvcnMgPSB7fTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblsnb2JqZWN0JywgJ2Jvb2xlYW4nLCAnbnVtYmVyJywgJ2Z1bmN0aW9uJywgJ3N0cmluZycsICdzeW1ib2wnXS5mb3JFYWNoKGZ1bmN0aW9uKHR5cGUsIGkpIHtcbiAgdmFsaWRhdG9yc1t0eXBlXSA9IGZ1bmN0aW9uIHZhbGlkYXRvcih0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgPT09IHR5cGUgfHwgJ2EnICsgKGkgPCAxID8gJ24gJyA6ICcgJykgKyB0eXBlO1xuICB9O1xufSk7XG5cbnZhciBkZXByZWNhdGVkV2FybmluZ3MgPSB7fTtcbnZhciBjdXJyZW50VmVyQXJyID0gcGtnLnZlcnNpb24uc3BsaXQoJy4nKTtcblxuLyoqXG4gKiBDb21wYXJlIHBhY2thZ2UgdmVyc2lvbnNcbiAqIEBwYXJhbSB7c3RyaW5nfSB2ZXJzaW9uXG4gKiBAcGFyYW0ge3N0cmluZz99IHRoYW5WZXJzaW9uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaXNPbGRlclZlcnNpb24odmVyc2lvbiwgdGhhblZlcnNpb24pIHtcbiAgdmFyIHBrZ1ZlcnNpb25BcnIgPSB0aGFuVmVyc2lvbiA/IHRoYW5WZXJzaW9uLnNwbGl0KCcuJykgOiBjdXJyZW50VmVyQXJyO1xuICB2YXIgZGVzdFZlciA9IHZlcnNpb24uc3BsaXQoJy4nKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAzOyBpKyspIHtcbiAgICBpZiAocGtnVmVyc2lvbkFycltpXSA+IGRlc3RWZXJbaV0pIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSBpZiAocGtnVmVyc2lvbkFycltpXSA8IGRlc3RWZXJbaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIFRyYW5zaXRpb25hbCBvcHRpb24gdmFsaWRhdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufGJvb2xlYW4/fSB2YWxpZGF0b3JcbiAqIEBwYXJhbSB7c3RyaW5nP30gdmVyc2lvblxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcbiAqIEByZXR1cm5zIHtmdW5jdGlvbn1cbiAqL1xudmFsaWRhdG9ycy50cmFuc2l0aW9uYWwgPSBmdW5jdGlvbiB0cmFuc2l0aW9uYWwodmFsaWRhdG9yLCB2ZXJzaW9uLCBtZXNzYWdlKSB7XG4gIHZhciBpc0RlcHJlY2F0ZWQgPSB2ZXJzaW9uICYmIGlzT2xkZXJWZXJzaW9uKHZlcnNpb24pO1xuXG4gIGZ1bmN0aW9uIGZvcm1hdE1lc3NhZ2Uob3B0LCBkZXNjKSB7XG4gICAgcmV0dXJuICdbQXhpb3MgdicgKyBwa2cudmVyc2lvbiArICddIFRyYW5zaXRpb25hbCBvcHRpb24gXFwnJyArIG9wdCArICdcXCcnICsgZGVzYyArIChtZXNzYWdlID8gJy4gJyArIG1lc3NhZ2UgOiAnJyk7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUsIG9wdCwgb3B0cykge1xuICAgIGlmICh2YWxpZGF0b3IgPT09IGZhbHNlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0TWVzc2FnZShvcHQsICcgaGFzIGJlZW4gcmVtb3ZlZCBpbiAnICsgdmVyc2lvbikpO1xuICAgIH1cblxuICAgIGlmIChpc0RlcHJlY2F0ZWQgJiYgIWRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdKSB7XG4gICAgICBkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSA9IHRydWU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBmb3JtYXRNZXNzYWdlKFxuICAgICAgICAgIG9wdCxcbiAgICAgICAgICAnIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdicgKyB2ZXJzaW9uICsgJyBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZWFyIGZ1dHVyZSdcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsaWRhdG9yID8gdmFsaWRhdG9yKHZhbHVlLCBvcHQsIG9wdHMpIDogdHJ1ZTtcbiAgfTtcbn07XG5cbi8qKlxuICogQXNzZXJ0IG9iamVjdCdzIHByb3BlcnRpZXMgdHlwZVxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7b2JqZWN0fSBzY2hlbWFcbiAqIEBwYXJhbSB7Ym9vbGVhbj99IGFsbG93VW5rbm93blxuICovXG5cbmZ1bmN0aW9uIGFzc2VydE9wdGlvbnMob3B0aW9ucywgc2NoZW1hLCBhbGxvd1Vua25vd24pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QnKTtcbiAgfVxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICB2YXIgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tID4gMCkge1xuICAgIHZhciBvcHQgPSBrZXlzW2ldO1xuICAgIHZhciB2YWxpZGF0b3IgPSBzY2hlbWFbb3B0XTtcbiAgICBpZiAodmFsaWRhdG9yKSB7XG4gICAgICB2YXIgdmFsdWUgPSBvcHRpb25zW29wdF07XG4gICAgICB2YXIgcmVzdWx0ID0gdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWxpZGF0b3IodmFsdWUsIG9wdCwgb3B0aW9ucyk7XG4gICAgICBpZiAocmVzdWx0ICE9PSB0cnVlKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiAnICsgb3B0ICsgJyBtdXN0IGJlICcgKyByZXN1bHQpO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbGxvd1Vua25vd24gIT09IHRydWUpIHtcbiAgICAgIHRocm93IEVycm9yKCdVbmtub3duIG9wdGlvbiAnICsgb3B0KTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzT2xkZXJWZXJzaW9uOiBpc09sZGVyVmVyc2lvbixcbiAgYXNzZXJ0T3B0aW9uczogYXNzZXJ0T3B0aW9ucyxcbiAgdmFsaWRhdG9yczogdmFsaWRhdG9yc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/validator.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(\"./node_modules/axios/lib/helpers/bind.js\");\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanM/YzUzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcblxuLy8gdXRpbHMgaXMgYSBsaWJyYXJ5IG9mIGdlbmVyaWMgaGVscGVyIGZ1bmN0aW9ucyBub24tc3BlY2lmaWMgdG8gYXhpb3NcblxudmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyB1bmRlZmluZWRcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgdmFsdWUgaXMgdW5kZWZpbmVkLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVbmRlZmluZWQodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCdWZmZXIodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgIWlzVW5kZWZpbmVkKHZhbCkgJiYgdmFsLmNvbnN0cnVjdG9yICE9PSBudWxsICYmICFpc1VuZGVmaW5lZCh2YWwuY29uc3RydWN0b3IpXG4gICAgJiYgdHlwZW9mIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIodmFsKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlcih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZvcm1EYXRhXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gRm9ybURhdGEsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Zvcm1EYXRhKHZhbCkge1xuICByZXR1cm4gKHR5cGVvZiBGb3JtRGF0YSAhPT0gJ3VuZGVmaW5lZCcpICYmICh2YWwgaW5zdGFuY2VvZiBGb3JtRGF0YSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSB2aWV3IG9uIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSB2aWV3IG9uIGFuIEFycmF5QnVmZmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlclZpZXcodmFsKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmICgodHlwZW9mIEFycmF5QnVmZmVyICE9PSAndW5kZWZpbmVkJykgJiYgKEFycmF5QnVmZmVyLmlzVmlldykpIHtcbiAgICByZXN1bHQgPSBBcnJheUJ1ZmZlci5pc1ZpZXcodmFsKTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSAodmFsKSAmJiAodmFsLmJ1ZmZlcikgJiYgKHZhbC5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcik7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmluZ1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyaW5nLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJpbmcodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnc3RyaW5nJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIE51bWJlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgTnVtYmVyLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNOdW1iZXIodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhbiBPYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbCkge1xuICBpZiAodG9TdHJpbmcuY2FsbCh2YWwpICE9PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsKTtcbiAgcmV0dXJuIHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5wcm90b3R5cGU7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBEYXRlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGaWxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGaWxlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaWxlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGaWxlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCbG9iLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCbG9iKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRnVuY3Rpb24sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJlYW0sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmVhbSh2YWwpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgaXNGdW5jdGlvbih2YWwucGlwZSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsKSB7XG4gIHJldHVybiB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyAmJiB2YWwgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXM7XG59XG5cbi8qKlxuICogVHJpbSBleGNlc3Mgd2hpdGVzcGFjZSBvZmYgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgU3RyaW5nIHRvIHRyaW1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBTdHJpbmcgZnJlZWQgb2YgZXhjZXNzIHdoaXRlc3BhY2VcbiAqL1xuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci50cmltID8gc3RyLnRyaW0oKSA6IHN0ci5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJyk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICogbmF0aXZlc2NyaXB0XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ05hdGl2ZVNjcmlwdCcgb3IgJ05TJ1xuICovXG5mdW5jdGlvbiBpc1N0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIChuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnTmF0aXZlU2NyaXB0JyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnTlMnKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gKFxuICAgIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG4gICAgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJ1xuICApO1xufVxuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbiBBcnJheSBvciBhbiBPYmplY3QgaW52b2tpbmcgYSBmdW5jdGlvbiBmb3IgZWFjaCBpdGVtLlxuICpcbiAqIElmIGBvYmpgIGlzIGFuIEFycmF5IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwgaW5kZXgsIGFuZCBjb21wbGV0ZSBhcnJheSBmb3IgZWFjaCBpdGVtLlxuICpcbiAqIElmICdvYmonIGlzIGFuIE9iamVjdCBjYWxsYmFjayB3aWxsIGJlIGNhbGxlZCBwYXNzaW5nXG4gKiB0aGUgdmFsdWUsIGtleSwgYW5kIGNvbXBsZXRlIG9iamVjdCBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheX0gb2JqIFRoZSBvYmplY3QgdG8gaXRlcmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGNhbGxiYWNrIHRvIGludm9rZSBmb3IgZWFjaCBpdGVtXG4gKi9cbmZ1bmN0aW9uIGZvckVhY2gob2JqLCBmbikge1xuICAvLyBEb24ndCBib3RoZXIgaWYgbm8gdmFsdWUgcHJvdmlkZWRcbiAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEZvcmNlIGFuIGFycmF5IGlmIG5vdCBhbHJlYWR5IHNvbWV0aGluZyBpdGVyYWJsZVxuICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgICBvYmogPSBbb2JqXTtcbiAgfVxuXG4gIGlmIChpc0FycmF5KG9iaikpIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgYXJyYXkgdmFsdWVzXG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBvYmoubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBmbi5jYWxsKG51bGwsIG9ialtpXSwgaSwgb2JqKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIG9iamVjdCBrZXlzXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgZm4uY2FsbChudWxsLCBvYmpba2V5XSwga2V5LCBvYmopO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEFjY2VwdHMgdmFyYXJncyBleHBlY3RpbmcgZWFjaCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3QsIHRoZW5cbiAqIGltbXV0YWJseSBtZXJnZXMgdGhlIHByb3BlcnRpZXMgb2YgZWFjaCBvYmplY3QgYW5kIHJldHVybnMgcmVzdWx0LlxuICpcbiAqIFdoZW4gbXVsdGlwbGUgb2JqZWN0cyBjb250YWluIHRoZSBzYW1lIGtleSB0aGUgbGF0ZXIgb2JqZWN0IGluXG4gKiB0aGUgYXJndW1lbnRzIGxpc3Qgd2lsbCB0YWtlIHByZWNlZGVuY2UuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGBqc1xuICogdmFyIHJlc3VsdCA9IG1lcmdlKHtmb286IDEyM30sIHtmb286IDQ1Nn0pO1xuICogY29uc29sZS5sb2cocmVzdWx0LmZvbyk7IC8vIG91dHB1dHMgNDU2XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqMSBPYmplY3QgdG8gbWVyZ2VcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJlc3VsdCBvZiBhbGwgbWVyZ2UgcHJvcGVydGllc1xuICovXG5mdW5jdGlvbiBtZXJnZSgvKiBvYmoxLCBvYmoyLCBvYmozLCAuLi4gKi8pIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuICBmdW5jdGlvbiBhc3NpZ25WYWx1ZSh2YWwsIGtleSkge1xuICAgIGlmIChpc1BsYWluT2JqZWN0KHJlc3VsdFtrZXldKSAmJiBpc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2Uoe30sIHZhbCk7XG4gICAgfSBlbHNlIGlmIChpc0FycmF5KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsLnNsaWNlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBFeHRlbmRzIG9iamVjdCBhIGJ5IG11dGFibHkgYWRkaW5nIHRvIGl0IHRoZSBwcm9wZXJ0aWVzIG9mIG9iamVjdCBiLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhIFRoZSBvYmplY3QgdG8gYmUgZXh0ZW5kZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBiIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb21cbiAqIEBwYXJhbSB7T2JqZWN0fSB0aGlzQXJnIFRoZSBvYmplY3QgdG8gYmluZCBmdW5jdGlvbiB0b1xuICogQHJldHVybiB7T2JqZWN0fSBUaGUgcmVzdWx0aW5nIHZhbHVlIG9mIG9iamVjdCBhXG4gKi9cbmZ1bmN0aW9uIGV4dGVuZChhLCBiLCB0aGlzQXJnKSB7XG4gIGZvckVhY2goYiwgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAodGhpc0FyZyAmJiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhW2tleV0gPSBiaW5kKHZhbCwgdGhpc0FyZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFba2V5XSA9IHZhbDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gYTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgYnl0ZSBvcmRlciBtYXJrZXIuIFRoaXMgY2F0Y2hlcyBFRiBCQiBCRiAodGhlIFVURi04IEJPTSlcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCB3aXRoIEJPTVxuICogQHJldHVybiB7c3RyaW5nfSBjb250ZW50IHZhbHVlIHdpdGhvdXQgQk9NXG4gKi9cbmZ1bmN0aW9uIHN0cmlwQk9NKGNvbnRlbnQpIHtcbiAgaWYgKGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gMHhGRUZGKSB7XG4gICAgY29udGVudCA9IGNvbnRlbnQuc2xpY2UoMSk7XG4gIH1cbiAgcmV0dXJuIGNvbnRlbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0FycmF5OiBpc0FycmF5LFxuICBpc0FycmF5QnVmZmVyOiBpc0FycmF5QnVmZmVyLFxuICBpc0J1ZmZlcjogaXNCdWZmZXIsXG4gIGlzRm9ybURhdGE6IGlzRm9ybURhdGEsXG4gIGlzQXJyYXlCdWZmZXJWaWV3OiBpc0FycmF5QnVmZmVyVmlldyxcbiAgaXNTdHJpbmc6IGlzU3RyaW5nLFxuICBpc051bWJlcjogaXNOdW1iZXIsXG4gIGlzT2JqZWN0OiBpc09iamVjdCxcbiAgaXNQbGFpbk9iamVjdDogaXNQbGFpbk9iamVjdCxcbiAgaXNVbmRlZmluZWQ6IGlzVW5kZWZpbmVkLFxuICBpc0RhdGU6IGlzRGF0ZSxcbiAgaXNGaWxlOiBpc0ZpbGUsXG4gIGlzQmxvYjogaXNCbG9iLFxuICBpc0Z1bmN0aW9uOiBpc0Z1bmN0aW9uLFxuICBpc1N0cmVhbTogaXNTdHJlYW0sXG4gIGlzVVJMU2VhcmNoUGFyYW1zOiBpc1VSTFNlYXJjaFBhcmFtcyxcbiAgaXNTdGFuZGFyZEJyb3dzZXJFbnY6IGlzU3RhbmRhcmRCcm93c2VyRW52LFxuICBmb3JFYWNoOiBmb3JFYWNoLFxuICBtZXJnZTogbWVyZ2UsXG4gIGV4dGVuZDogZXh0ZW5kLFxuICB0cmltOiB0cmltLFxuICBzdHJpcEJPTTogc3RyaXBCT01cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/utils.js\n");

/***/ }),

/***/ "./resources/js/CommonMethods.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": () => (/* binding */ CommonMethods)\n/* harmony export */ });\nclass CommonMethods {\n  constructor() {}\n\n  static setCookie(key, value, days) {\n    let d = new Date();\n    d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);\n    let expires = \"expires=\" + d.toUTCString();\n    let domain = \"domain=.\" + \"MISSING_ENV_VAR\".DOMAIN;\n    document.cookie = key + \"=\" + value + \";\" + expires + \";\" + domain + \";path=/\";\n  }\n\n  static getCookie(key) {\n    let name = key + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let cookies = decodedCookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      let c = cookies[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return false;\n  }\n\n  static removeCookie(key) {\n    let domain = \"domain=.\" + \"MISSING_ENV_VAR\".DOMAIN;\n    document.cookie = key + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\" + domain + \";path=/\";\n  }\n\n  static formatPrice(value) {\n    value = Math.round(value);\n    let val = (value / 1).toFixed(2).replace('.', ',');\n    return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  }\n\n  static toUpperCase(str) {\n    return str.toUpperCase();\n  }\n\n  static isDomainValid(sld, tld) {\n    let tldMin3Char = ['.web.id', '.co.id', '.sch.id', '.or.id', '.ac.id', '.biz.id', '.my.id'];\n    let tldMin5Char = ['.id'];\n\n    if (tldMin3Char.includes(tld)) {\n      if (sld.length < 3) {\n        return {\n          valid: false,\n          message: \"Jumlah karakter untuk domain \" + tld + \" minimal 3 karakter.\"\n        };\n      }\n    } else if (tldMin5Char.includes(tld)) {\n      if (sld.length < 5) {\n        return {\n          valid: false,\n          message: \"Jumlah karakter untuk domain \" + tld + \" minimal 5 karakter.\"\n        };\n      }\n    }\n\n    return {\n      valid: true,\n      message: 'Domain is valid'\n    };\n  }\n\n  static inArray(needle, haystack) {\n    let length = haystack.length;\n\n    for (let i = 0; i < length; i++) {\n      if (haystack[i] == needle) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  static checkUrlPath(path) {\n    let urlPath, urlString;\n    urlPath = window.location.pathname.split('/');\n    return urlString = urlPath.includes(path);\n  }\n\n  static discountPrice(reg, years, first) {\n    let customDiscountPrice;\n    customDiscountPrice = reg * years - (reg - first);\n    return customDiscountPrice;\n  }\n\n  static formatDomain(domain, sparator) {\n    return domain.replace(/\\./g, sparator);\n  }\n\n  static isSldValid(sld) {\n    let re = /[-a-zA-Z0-9_.+]+@[a-zA-Z0-9-]{2,}/;\n    return !re.test(sld);\n  }\n\n  static loadPixel(data, cartItems, callback) {\n    let pixel = this.getCookie('PIXEL_AFF');\n\n    if (!pixel) {\n      callback();\n      return;\n    }\n\n    pixel = JSON.parse(pixel);\n\n    if (pixel.client_id == \"MISSING_ENV_VAR\".ACCESSTRADE_CLIENT_ID) {\n      this.accessTradeConversion(pixel, data.invoice_id, cartItems, callback);\n    } else {\n      this.involveAsiaConversion(pixel, data, cartItems, callback);\n    }\n\n    this.removeCookie('PIXEL_AFF');\n  }\n\n  static involveAsiaConversion(pixel, data, cartItems, callback) {\n    let item;\n    let total = 0;\n\n    for (item of cartItems) {\n      if ('hosting' == item.type) {\n        total = item.total;\n        break;\n      }\n    }\n\n    if (total === 0) {\n      callback();\n      return;\n    }\n\n    let pixelUrl = pixel.url.replace('__invoice_number__', data.invoice_number).replace('__invoice_id__', data.invoice_id).replace('__total__', total);\n    this.addHtmlTag('img', pixelUrl, callback);\n  }\n\n  static accessTradeConversion(pixel, transactionId, cartItems, callback) {\n    let item;\n    let products = [];\n\n    for (item of cartItems) {\n      if ('hosting' == item.type) {\n        products.push({\n          id: item.product_id,\n          category_id: item.type,\n          price: item.total,\n          quantity: item.quantity\n        });\n        break;\n      }\n    }\n\n    if (!products.length) {\n      callback();\n      return;\n    }\n\n    window.__atw = window.__atw || [];\n\n    __atw.push({\n      mcn: pixel.campaign_id,\n      param: {\n        result_id: pixel.result_id,\n        identifier: transactionId,\n        products: products\n      }\n    });\n\n    this.addHtmlTag('script', pixel.url + timestamp, callback);\n  }\n\n  static addHtmlTag(tagName, url, onLoadCallback = null) {\n    let tag = document.createElement(tagName);\n    tag.src = url;\n\n    if (onLoadCallback != null) {\n      tag.addEventListener('load', onLoadCallback);\n    }\n\n    let target = document.getElementsByTagName('script')[0];\n    target.parentNode.insertBefore(tag, target);\n  }\n\n  static tiktokAddToCart(cart) {\n    if (typeof window.ttq === 'undefined' || !this.getCookie('ttclid')) {\n      return false;\n    }\n\n    let items = [];\n    cart.items.forEach(item => {\n      let itemData = {\n        content_category: item.type,\n        content_id: item.id,\n        content_name: item.title,\n        content_type: 'product',\n        price: item.total,\n        quantity: item.quantity\n      };\n      items.push(itemData);\n    });\n    ttq.track('AddToCart', {\n      contents: items,\n      value: cart.total,\n      currency: cart.currency.code\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/CommonMethods.js\n");

/***/ }),

/***/ "./resources/js/main.js":
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.esm.js\nvar vue_esm = __webpack_require__(\"./node_modules/vue/dist/vue.esm.js\");\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar node_modules_axios = __webpack_require__(\"./node_modules/axios/index.js\");\nvar axios_default = /*#__PURE__*/__webpack_require__.n(node_modules_axios);\n// EXTERNAL MODULE: ./node_modules/vue-select/dist/vue-select.js\nvar vue_select = __webpack_require__(\"./node_modules/vue-select/dist/vue-select.js\");\nvar vue_select_default = /*#__PURE__*/__webpack_require__.n(vue_select);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/FooBar.vue?vue&type=template&id=04c8d0b3&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"example\"},[_c('h1',[_vm._v(\"Hello World\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/FooBar.vue?vue&type=template&id=04c8d0b3&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/FooBar.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const FooBarvue_type_script_lang_js_ = ({\n  name: \"FooBar\"\n});\n;// CONCATENATED MODULE: ./resources/js/components/FooBar.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_FooBarvue_type_script_lang_js_ = (FooBarvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(\"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(\"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(\"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(\"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(\"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(\"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/FooBar.vue?vue&type=style&index=0&id=04c8d0b3&scoped=true&lang=css&\nvar FooBarvue_type_style_index_0_id_04c8d0b3_scoped_true_lang_css_ = __webpack_require__(\"./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/FooBar.vue?vue&type=style&index=0&id=04c8d0b3&scoped=true&lang=css&\");\n;// CONCATENATED MODULE: ./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/FooBar.vue?vue&type=style&index=0&id=04c8d0b3&scoped=true&lang=css&\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, \"head\");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(FooBarvue_type_style_index_0_id_04c8d0b3_scoped_true_lang_css_/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const components_FooBarvue_type_style_index_0_id_04c8d0b3_scoped_true_lang_css_ = (FooBarvue_type_style_index_0_id_04c8d0b3_scoped_true_lang_css_/* default */.Z && FooBarvue_type_style_index_0_id_04c8d0b3_scoped_true_lang_css_/* default.locals */.Z.locals ? FooBarvue_type_style_index_0_id_04c8d0b3_scoped_true_lang_css_/* default.locals */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./resources/js/components/FooBar.vue?vue&type=style&index=0&id=04c8d0b3&scoped=true&lang=css&\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n;// CONCATENATED MODULE: ./resources/js/components/FooBar.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar component = normalizeComponent(\n  components_FooBarvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"04c8d0b3\",\n  null\n  \n)\n\n/* harmony default export */ const FooBar = (component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SectionSummary.vue?vue&type=template&id=041dac71&scoped=true&\nvar SectionSummaryvue_type_template_id_041dac71_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"right-side-cart-wrapper\"}},[_c('div',{staticClass:\"section-summary\",attrs:{\"id\":\"right-side-cart\"}},[_c('div',{staticClass:\"card card-padding\",class:{ 'with-coupon': _vm.orderflow_step == 2, 'without-coupon': _vm.orderflow_step != 2 },attrs:{\"id\":\"row-one\"}},[_c('h3',{staticClass:\"nunito-bold font-size-16 color-4d5872\"},[_vm._v(\"Detail Order\")]),_vm._v(\" \"),_c('ul',{staticClass:\"summary\",class:{ 'height-two': _vm.orderflow_step == 2, 'height-one': _vm.orderflow_step != 2 }},[_vm._l((_vm.cart.items),function(item){return _c('li',{staticClass:\"item\"},[_c('div',{staticClass:\"item-row\"},[_c('div',{staticClass:\"col-xs-8 no-padding\"},[_c('p',{staticClass:\"nunito-regular font-size-12 color-4d5872\"},[_vm._v(_vm._s(_vm.toUpperCase(item.type)))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-xs-4 no-padding\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"item-row\"},[(item.type == 'domain')?_c('p',{staticClass:\"nunito-bold font-size-12 color-4d5872\"},[_vm._v(\"\\n                            \"+_vm._s(_vm.toUpperCase(item[item.action + '_sld']))+_vm._s(_vm.toUpperCase(item[item.action + '_tld']))+\"\\n                        \")]):_c('p',{staticClass:\"nunito-bold font-size-12 color-4d5872\"},[_vm._v(_vm._s(item.title))]),_vm._v(\" \"),_c('p',{staticClass:\"nunito-bold font-size-12 color-4d5872 text-right\"},[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice(item.total)))])])])}),_vm._v(\" \"),_c('li',{staticClass:\"item\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"item-row clear-fix\"},[_c('div',{staticClass:\"col-xs-4 no-padding\"},[_c('p',{staticClass:\"nunito-bold font-size-12 color-4d5872\"},[_vm._v(_vm._s(_vm.taxName))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-xs-8 no-padding\"},[_c('p',{staticClass:\"nunito-bold font-size-12 color-4d5872 text-right\"},[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice(_vm.cart.total * _vm.taxRate)))])])])])],2),_vm._v(\" \"),_c('div',{staticClass:\"cart-total clear-fix\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"col-xs-8 no-padding\"},[_c('p',{staticClass:\"nunito-bold font-size-12 color-4d5872 text-right\"},[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice(_vm.cart.total + (_vm.cart.total * _vm.taxRate))))])])])]),_vm._v(\" \"),_c('div',{class:{ 'with-coupon': _vm.orderflow_step == 2, 'without-coupon': _vm.orderflow_step != 2 },staticStyle:{\"margin-top\":\"22px\"},attrs:{\"id\":\"row-two\"}},[(_vm.orderflow_step == 2)?_c('div',{staticClass:\"card card-padding\",staticStyle:{\"margin-bottom\":\"22px\"}},[_c('h3',{staticClass:\"nunito-bold font-size-16 color-4d5872\",staticStyle:{\"margin-bottom\":\"14px\"}},[_vm._v(\"Kode Kupon\")]),_vm._v(\" \"),_c('div',{staticClass:\"coupon-code-wrapper\"},[_c('div',{staticClass:\"col-xs-8\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.coupon_code),expression:\"coupon_code\"}],attrs:{\"type\":\"text\",\"id\":\"coupon-code\",\"name\":\"coupon_code\",\"placeholder\":\"Kode Kupon Anda\"},domProps:{\"value\":(_vm.coupon_code)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.coupon_code=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-xs-4\"},[_c('a',{staticClass:\"button-apply-coupon\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.usePromoCode}},[_vm._v(\"Apply\")])])]),_vm._v(\" \"),(_vm.show_coupon_status)?_c('div',{staticClass:\"text-center\"},[(_vm.coupon_status.result)?_c('p',{staticClass:\"nunito-light font-size-12\",staticStyle:{\"color\":\"#00b553\"}},[_vm._v(\"Kode Coupon berhasil diaplikasikan!\")]):_c('p',{staticClass:\"nunito-light font-size-12\",staticStyle:{\"color\":\"#ff0000\"}},[_vm._v(_vm._s(_vm.coupon_status.message))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('div',{staticStyle:{\"height\":\"48px\"},attrs:{\"id\":\"checkout-button-wrapper\"}},[_c('div',{attrs:{\"id\":\"checkout-button\"}},[(_vm.cart.items.length)?_c('a',{staticClass:\"button-default button-block button-blue nunito-bold font-size-16\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.checkoutNow}},[_vm._v(\"Checkout Sekarang\")]):_vm._e()])])])])])}\nvar SectionSummaryvue_type_template_id_041dac71_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"item-row\"},[_c('p',{staticClass:\"nunito-regular font-size-12 color-4d5872\"},[_vm._v(\"Pajak & Biaya Tambahan\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-xs-4 no-padding\"},[_c('p',{staticClass:\"nunito-bold font-size-12 color-4d5872\"},[_vm._v(\"TOTAL\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/SectionSummary.vue?vue&type=template&id=041dac71&scoped=true&\n\n// EXTERNAL MODULE: ./resources/js/CommonMethods.js\nvar js_CommonMethods = __webpack_require__(\"./resources/js/CommonMethods.js\");\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SectionSummary.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const SectionSummaryvue_type_script_lang_js_ = ({\n  name: \"SectionSummary\",\n  props: ['cart', 'orderflow_step', 'client'],\n  data: function () {\n    return {\n      show_coupon_status: false,\n      coupon_status: {\n        result: false,\n        message: ''\n      },\n      coupon_code: false,\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n  computed: {\n    promocode() {\n      return this.cart.promocode;\n    }\n\n  },\n  watch: {\n    promocode: function () {\n      if (!this.coupon_code) {\n        this.coupon_code = this.cart.promocode;\n      }\n    }\n  },\n  methods: {\n    checkoutNow() {\n      if (this.orderflow_step == 1 && screen.width <= 1049 || this.orderflow_step == 2 && this.client) {\n        let button = document.getElementById(\"checkout-button\");\n\n        if (button.classList.contains('sticky-cart')) {\n          window.scrollTo(0, document.body.scrollHeight);\n        } else {\n          let isLoginByRegister = js_CommonMethods/* default.getCookie */.Z.getCookie('BOXCCBR');\n\n          if (isLoginByRegister === 'true') {\n            this.$emit('checkout-now', false);\n          } else {\n            this.$emit('checkout-now', true);\n          }\n        }\n      } else if (this.orderflow_step == 2 && !this.client) {\n        let element = document.getElementById(\"client-information\");\n        element.scrollIntoView();\n      } else {\n        let isLoginByRegister = js_CommonMethods/* default.getCookie */.Z.getCookie('BOXCCBR');\n\n        if (isLoginByRegister === 'true') {\n          this.$emit('checkout-now', false);\n        } else {\n          this.$emit('checkout-now', true);\n        }\n      }\n    },\n\n    usePromoCode() {\n      bus.$emit('show-spinner', true);\n      let email = '';\n      let password = '';\n\n      if (this.client) {\n        email = this.client.email;\n        password = this.client.password;\n      }\n\n      axios.post('/api/guest/use_promo_code', {\n        promo_code: this.coupon_code,\n        email: email,\n        password: password\n      }).then(res => {\n        let result = res.data.result;\n        let error = res.data.error;\n\n        if (error != null) {\n          this.coupon_status.result = false;\n          this.coupon_status.message = error.message;\n        } else {\n          this.coupon_status.result = result.result;\n          this.coupon_status.message = result.message;\n        }\n\n        this.show_coupon_status = true;\n\n        if (result != null && result.result) {\n          if (result.is_affiliate) {\n            js_CommonMethods/* default.setCookie */.Z.setCookie('coupon_code', this.coupon_code, 30);\n            js_CommonMethods/* default.setCookie */.Z.setCookie('coupon_affiliate', true, 30);\n            js_CommonMethods/* default.removeCookie */.Z.removeCookie('inv_id');\n            js_CommonMethods/* default.removeCookie */.Z.removeCookie('hasoffers_session');\n            js_CommonMethods/* default.removeCookie */.Z.removeCookie('hasoffers_offer_id');\n            js_CommonMethods/* default.removeCookie */.Z.removeCookie('hasoffers_account');\n            js_CommonMethods/* default.removeCookie */.Z.removeCookie('PIXEL_AFF');\n            let url = CommonVar.bb_url + \"/set-promo-code-session?referral_id=\" + result.referral_id + \"&aff_coupon=\" + this.coupon_code;\n            let iframe = document.createElement(\"iframe\");\n            iframe.setAttribute(\"src\", url);\n            iframe.setAttribute(\"id\", \"set-promo-code-session\");\n            iframe.style.display = \"none\";\n            document.body.appendChild(iframe);\n          }\n\n          bus.$emit('refresh-cart');\n        } else {\n          bus.$emit('show-spinner', false);\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    removePromoCode() {\n      bus.$emit('show-spinner', true);\n      axios.post('/api/guest/remove_promo_code').then(res => {\n        let result = res.data.result;\n        let error = res.data.error;\n\n        if (error != null) {\n          this.coupon_status.result = false;\n          this.coupon_status.message = error.message;\n        } else {\n          this.coupon_status.result = result.result;\n          this.coupon_status.message = result.message;\n        }\n\n        this.show_coupon_status = true;\n\n        if (result != null && result.result) {\n          bus.$emit('refresh-cart');\n        } else {\n          bus.$emit('show-spinner', false);\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    getCouponCodeFromCookie() {\n      this.coupon_code = js_CommonMethods/* default.getCookie */.Z.getCookie('coupon_code');\n\n      if (this.coupon_code.length) {\n        this.coupon_status.result = true;\n        this.coupon_status.message = 'Kode Coupon berhasil diaplikasikan';\n        this.show_coupon_status = true;\n      }\n    },\n\n    removeFromCart(item) {\n      bus.$emit('show-spinner', true);\n      axios.post('/api/guest/remove_from_cart', {\n        id: item.id\n      }).then(res => {\n        bus.$emit('refresh-cart');\n        /* It will uncheck additional feature checkbox, the listener is on AdditionalFeature.vue */\n\n        bus.$emit('remove-item', item);\n        let action;\n        let tld;\n\n        if (item.type == 'domain') {\n          action = item.action;\n          tld = item[action + '_tld'];\n        } else {\n          action = item.domain.action;\n          tld = item.domain[action + '_tld'];\n        }\n\n        Gtm.gtmRemoveFromCart(item.type, item.title, tld);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    toUpperCase(str) {\n      return str.toUpperCase();\n    },\n\n    onScrollListener() {\n      let cartWrapper = document.getElementById(\"right-side-cart-wrapper\");\n      let cartElement = document.getElementById(\"right-side-cart\");\n      let button = document.getElementById(\"checkout-button\");\n\n      if (this.cart.items.length) {\n        if (screen.width > 1049) {\n          /*For Desktop*/\n          if (Math.floor(window.scrollY) - 50 > cartWrapper.offsetTop) {\n            this.adjustResize();\n            cartElement.classList.add('sticky-cart');\n          } else {\n            cartElement.classList.remove('sticky-cart');\n          }\n        } else {\n          /*For Mobile*/\n          let deltaScroll = document.documentElement.scrollHeight - (window.scrollY + window.innerHeight);\n\n          if (deltaScroll >= 100) {\n            this.adjustResize();\n            button.classList.add('sticky-cart');\n          } else {\n            button.classList.remove('sticky-cart');\n          }\n        }\n      } else {\n        button.classList.remove('sticky-cart');\n        cartElement.classList.remove('sticky-cart');\n      }\n    },\n\n    adjustResize() {\n      let cartWrapper = document.getElementById(\"right-side-cart-wrapper\");\n      let cartElement = document.getElementById(\"right-side-cart\");\n      let buttonWrapper = document.getElementById(\"checkout-button-wrapper\");\n      let button = document.getElementById(\"checkout-button\");\n\n      if (screen.width > 1049) {\n        /*For Desktop*/\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n        button.style.width = buttonWrapper.offsetWidth + \"px\";\n        button.classList.remove('sticky-cart');\n      } else {\n        /*For Mobile*/\n        cartElement.classList.remove('sticky-cart');\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n        button.style.width = buttonWrapper.offsetWidth + \"px\";\n      }\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    }\n\n  },\n  mounted: function (params) {\n    this.$on('remove-promo-code', () => {\n      this.removePromoCode();\n    });\n  },\n\n  created() {\n    this.getTaxRate();\n    this.getCouponCodeFromCookie();\n    window.addEventListener('scroll', () => {\n      this.onScrollListener();\n    });\n    window.addEventListener('resize', () => {\n      this.adjustResize();\n    });\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/SectionSummary.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_SectionSummaryvue_type_script_lang_js_ = (SectionSummaryvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/SectionSummary.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SectionSummary_component = normalizeComponent(\n  components_SectionSummaryvue_type_script_lang_js_,\n  SectionSummaryvue_type_template_id_041dac71_scoped_true_render,\n  SectionSummaryvue_type_template_id_041dac71_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"041dac71\",\n  null\n  \n)\n\n/* harmony default export */ const SectionSummary = (SectionSummary_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/HostingPlan.vue?vue&type=template&id=27bb839a&scoped=true&\nvar HostingPlanvue_type_template_id_27bb839a_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-hosting\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"section-body\"},[_c('div',{staticClass:\"product-plan\"},[_c('p',{staticClass:\"nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"Paket Hosting Anda\")]),_vm._v(\" \"),_c('div',{staticClass:\"custom-select\"},[_c('div',{ref:\"select-plan\",staticClass:\"selected-item\",class:{'show-option':_vm.show_hosting_plan_select_option},on:{\"click\":function($event){return _vm.showHideHostingPlanSelectOption()}}},[_c('p',[_c('b',[_vm._v(\"Paket Hosting \"+_vm._s(_vm.hosting.selected.plan.title))]),_vm._v(\" \"),(_vm.hosting.selected.product_id == 24)?_c('span',[_c('b',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\")]):_c('span',[_c('b',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain\")])])]),_vm._v(\" \"),(_vm.show_hosting_plan_select_option)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-plan'], handler: 'onClose'}),expression:\"{exclude: ['select-plan'], handler: 'onClose'}\"}],staticClass:\"select-option\"},_vm._l((_vm.hosting.plans),function(plan){return _c('li',{on:{\"click\":function($event){return _vm.chooseHostingPlan(plan)}}},[_c('b',[_vm._v(\"Paket Hosting \"+_vm._s(plan.title))]),_vm._v(\" \"),(plan.id == 24)?_c('span',[_c('b',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\")]):_c('span',[_c('b',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain\")])])}),0):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"mar_top2\"}),_vm._v(\" \"),_c('p',{staticClass:\"nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"Pilih Durasi Paket Anda\")]),_vm._v(\" \"),_c('div',[_c('ul',{staticClass:\"hosting-duration\"},_vm._l((_vm.hosting.plan_period),function(periodPrice,x){return (periodPrice.enabled == 1 && x != '1M')?_c('li',{class:{'selected':_vm.hosting.selected.period == x},on:{\"click\":function($event){return _vm.chooseHostingPeriod(x)}}},[(periodPrice.discount_enabled == 1)?_c('div',{staticClass:\"ribbon\"},[_c('p',{staticClass:\"nunito-bold font-size-21\"},[_vm._v(\"Diskon \"+_vm._s(Math.ceil((1 - (periodPrice.discount_price / periodPrice.price)) * 100))+\"%\")]),_vm._v(\" \"),_c('p',{staticClass:\"nunito-regular font-size-18\"},[_c('s',[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice(periodPrice.price)))])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"text-center\"},[_c('h3',{staticClass:\"nunito-bold font-size-21\"},[_vm._v(_vm._s(_vm.period[x].text))]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"nunito-bold font-size-18\"},[_vm._v(\"\\n                                Rp. \"+_vm._s(_vm.formatPrice(periodPrice.discount_price))+\"\\n                            \")]):_c('p',{staticClass:\"nunito-bold font-size-18\"},[_vm._v(\"\\n                                Rp. \"+_vm._s(_vm.formatPrice(periodPrice.price))+\"\\n                            \")]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"nunito-regular font-size-13\"},[_vm._v(\"\\n                                Rp \"+_vm._s(_vm.formatPrice(periodPrice.discount_price / _vm.period[x].num_of_month))+\"/bln\\n                            \")]):_c('p',{staticClass:\"nunito-regular font-size-14\"},[_vm._v(\"\\n                                Rp \"+_vm._s(_vm.formatPrice(periodPrice.price / _vm.period[x].num_of_month))+\"/bln\\n                            \")])])]):_vm._e()}),0)]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),(_vm.flow === 'hosting')?_c('div',{staticClass:\"note\"},[(_vm.hosting.selected.product_id == 24 || _vm.hosting.selected.product_id == 25 && _vm.hosting.selected.period == '6M')?_c('p',{staticClass:\"nunito-bold font-size-20 color-fbbd0e\"},[_c('span',{staticClass:\"fa fa-exclamation-triangle\",staticStyle:{\"margin-right\":\"10px\"}}),_vm._v(\"\\n                    Perhatian!\\n                \")]):_c('p',{staticClass:\"nunito-bold font-size-20 color-fbbd0e\"},[_c('span',{staticClass:\"fa fa-exclamation-triangle\",staticStyle:{\"margin-right\":\"10px\"}}),_vm._v(\"\\n                    Selamat!\\n                \")]),_vm._v(\" \"),(_vm.hosting.selected.product_id == 24)?_c('p',{staticClass:\"nunito-regular font-size-16 color-4d5872\"},[_c('b',[_vm._v(\"Paket Bayi belum termasuk domain gratis.\")]),_vm._v(\" Gunakan Paket \"),_c('b',[_vm._v(\"Pelajar\")]),_vm._v(\", \"),_c('b',[_vm._v(\"Personal\")]),_vm._v(\", atau \"),_c('b',[_vm._v(\"Bisnis\")]),_vm._v(\" dengan masa berlangganan\\n                    \"),_c('b',[_vm._v(\"minimal 12 bulan\")]),_vm._v(\" untuk mendapatkan \"),_c('b',[_vm._v(\"domain gratis\")]),_vm._v(\" sekarang.\\n                \")]):_vm._e(),_vm._v(\" \"),(_vm.hosting.selected.product_id == 25 && _vm.hosting.selected.period == '6M')?_c('p',{staticClass:\"nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"\\n                    Anda \"),_c('b',[_vm._v(\"belum mendapatkan\")]),_vm._v(\" domain gratis. Dapatkan \"),_c('b',[_vm._v(\"domain gratis\")]),_vm._v(\" hanya dengan berlangganan paket hosting selama \"),_c('b',[_vm._v(\"minimal 12 bulan\")]),_vm._v(\".\\n                \")]):_vm._e(),_vm._v(\" \"),(_vm.hosting.selected.product_id > 25 || _vm.hosting.selected.product_id == 25 && _vm.hosting.selected.period != '6M')?_c('p',{staticClass:\"nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"\\n                    Selamat, Anda berhak mendapatkan \"),_c('b',[_vm._v(\"domain gratis\")]),_vm._v(\". Silakan pilih sendiri \"),_c('b',[_vm._v(\"domain gratis\")]),_vm._v(\" yang Anda inginkan.\\n                \")]):_vm._e()]):_vm._e()])])])}\nvar HostingPlanvue_type_template_id_27bb839a_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\"},[_vm._v(\"WEB HOSTING\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/HostingPlan.vue?vue&type=template&id=27bb839a&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/HostingPlan.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const HostingPlanvue_type_script_lang_js_ = ({\n  name: \"HostingPlan\",\n  props: ['hosting', 'flow'],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_hosting_plan_select_option: false\n    };\n  },\n  methods: {\n    showHideHostingPlanSelectOption() {\n      this.show_hosting_plan_select_option = !this.show_hosting_plan_select_option;\n    },\n\n    chooseHostingPlan(plan) {\n      this.hosting.plan_period = plan.pricing.recurrent;\n      this.hosting.selected.product_id = plan.id;\n      this.hosting.selected.plan = plan;\n      this.hosting.selected.period = '1Y';\n      this.showHideHostingPlanSelectOption();\n      this.$emit('update-hosting-plan', this.hosting);\n    },\n\n    chooseHostingPeriod(period) {\n      this.hosting.selected.period = period;\n      this.$emit('update-hosting-plan', this.hosting);\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    onClose() {\n      this.show_hosting_plan_select_option = false;\n    },\n\n    setHostingPlanByPath() {\n      let path = window.location.pathname;\n      path = path.split(\"/\");\n\n      if (path.length == 3) {\n        let productId = path[2];\n        this.hosting.plans.forEach(plan => {\n          if (plan.id == productId) {\n            this.chooseHostingPlan(plan);\n            this.show_hosting_plan_select_option = false;\n            return;\n          }\n        });\n        const urlParams = new URLSearchParams(window.location.search);\n        let period = urlParams.get('period') ? urlParams.get('period') : \"1Y\";\n        this.chooseHostingPeriod(period);\n      }\n    }\n\n  },\n  mounted: function () {\n    this.setHostingPlanByPath();\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/HostingPlan.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_HostingPlanvue_type_script_lang_js_ = (HostingPlanvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/HostingPlan.vue\n\n\n\n\n\n/* normalize component */\n;\nvar HostingPlan_component = normalizeComponent(\n  components_HostingPlanvue_type_script_lang_js_,\n  HostingPlanvue_type_template_id_27bb839a_scoped_true_render,\n  HostingPlanvue_type_template_id_27bb839a_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"27bb839a\",\n  null\n  \n)\n\n/* harmony default export */ const HostingPlan = (HostingPlan_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/PaymentMethod.vue?vue&type=template&id=42bd1b4c&scoped=true&\nvar PaymentMethodvue_type_template_id_42bd1b4c_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-payment-method\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"section-body\"},[_c('div',{staticClass:\"card\"},[_vm._m(1),_vm._v(\" \"),(_vm.show_payment_methods)?_c('ul',{staticClass:\"payment-method\"},_vm._l((_vm.payment_methods),function(pm){return (!(pm.id == 12 && (_vm.cart.total + (_vm.cart.total * 0.1)) > 500000) && pm.id != 1)?_c('li',[_c('div',{staticClass:\"pretty-radio\",on:{\"click\":function($event){return _vm.choosePaymentMethod(pm.id)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gateway_id),expression:\"gateway_id\"}],attrs:{\"type\":\"radio\",\"name\":\"payment_method\"},domProps:{\"value\":pm.id,\"checked\":_vm._q(_vm.gateway_id,pm.id)},on:{\"change\":function($event){_vm.gateway_id=pm.id}}}),_vm._v(\" \"),_c('p',{staticClass:\"radio-icon radio-title\"},[_c('b',[_vm._v(_vm._s(pm.title))])]),_vm._v(\" \"),_c('div',{staticClass:\"gateway-icon\"},[_c('img',{staticClass:\"img-responsive\",attrs:{\"src\":'/assets/images/payment-gateway/' + pm.code + '.svg'}})])])]):_vm._e()}),0):_vm._e(),_vm._v(\" \"),(_vm.show_payment_methods)?_c('div',{staticClass:\"payment-method-title\"},[_c('h4',[_vm._v(\"TRANSFER MANUAL\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Harus melakukan konfirmasi secara MANUAL jika sistem gagal menemukan pembayaran yang Anda lakukan.\")])]):_vm._e(),_vm._v(\" \"),(_vm.show_payment_methods)?_c('ul',{staticClass:\"payment-method\"},_vm._l((_vm.payment_methods),function(pm){return (pm.id == 1)?_c('li',[_c('div',{staticClass:\"pretty-radio\",on:{\"click\":function($event){return _vm.choosePaymentMethod(pm.id)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.gateway_id),expression:\"gateway_id\"}],attrs:{\"type\":\"radio\",\"name\":\"payment_method\"},domProps:{\"value\":pm.id,\"checked\":_vm._q(_vm.gateway_id,pm.id)},on:{\"change\":function($event){_vm.gateway_id=pm.id}}}),_vm._v(\" \"),_c('p',{staticClass:\"radio-icon radio-title\"},[_c('b',[_vm._v(_vm._s(pm.title))])]),_vm._v(\" \"),_c('div',{staticClass:\"gateway-icon\"},[_c('img',{staticClass:\"img-responsive\",attrs:{\"src\":'/assets/images/payment-gateway/' + pm.code + '.svg'}})])])]):_vm._e()}),0):_vm._e()])])])}\nvar PaymentMethodvue_type_template_id_42bd1b4c_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\"},[_vm._v(\"METODE PEMBAYARAN\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"payment-method-title\"},[_c('h4',[_vm._v(\"PEMBAYARAN OTOMATIS (RECOMMENDED)\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Sistem akan secara langsung mengaktifkan order Anda setelah pembayaran selesai dilakukan tanpa konfirmasi secara MANUAL.\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/PaymentMethod.vue?vue&type=template&id=42bd1b4c&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/PaymentMethod.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PaymentMethodvue_type_script_lang_js_ = ({\n  name: \"PaymentMethod\",\n  props: ['cart', 'client'],\n\n  data() {\n    return {\n      payment_methods: [],\n      gateway_id: 19,\n      use_balance: false,\n      client_balance: 0,\n      show_payment_methods: true\n    };\n  },\n\n  methods: {\n    getPaymentMethods() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/guest/get_payment_methods').then(res => {\n        this.payment_methods = res.data.result;\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    choosePaymentMethod(id) {\n      this.gateway_id = id;\n      this.$emit('choose-payment-method', id);\n    },\n\n    useBalance() {\n      this.use_balance = !this.use_balance;\n\n      if (this.use_balance && this.client_balance >= this.cart.total * 1.1) {\n        this.show_payment_methods = false;\n        this.choosePaymentMethod(10);\n      } else {\n        this.show_payment_methods = true;\n        this.choosePaymentMethod(19);\n      }\n\n      this.$emit('use-balance', this.use_balance);\n    },\n\n    getClientBalance() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/guest/get_client_balance').then(res => {\n        this.client_balance = res.data.result;\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    }\n\n  },\n  mounted: function () {\n    this.getPaymentMethods();\n    this.getClientBalance();\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/PaymentMethod.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_PaymentMethodvue_type_script_lang_js_ = (PaymentMethodvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/PaymentMethod.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PaymentMethod_component = normalizeComponent(\n  components_PaymentMethodvue_type_script_lang_js_,\n  PaymentMethodvue_type_template_id_42bd1b4c_scoped_true_render,\n  PaymentMethodvue_type_template_id_42bd1b4c_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"42bd1b4c\",\n  null\n  \n)\n\n/* harmony default export */ const PaymentMethod = (PaymentMethod_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ClientInformation.vue?vue&type=template&id=217bd7e3&scoped=true&\nvar ClientInformationvue_type_template_id_217bd7e3_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-client-information\",attrs:{\"id\":\"client-information\"}},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"section-body\"},[_c('div',{staticClass:\"card card-padding\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"login-register\"},[_c('div',{staticClass:\"tabs\"},[_c('div',{staticClass:\"tab-nav\"},[_c('a',{staticClass:\"button-default tab-nav-left\",class:_vm.loginTabActive,attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.selectTab(1)}}},[_vm._v(\"Masuk\")]),_vm._v(\" \"),_c('a',{staticClass:\"button-default tab-nav-right\",class:_vm.registerTabActive,attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.selectTab(2)}}},[_vm._v(\"Daftar\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"tab-content\"},[(_vm.tab.login)?_c('div',{staticClass:\"content login\"},[_c('div',{staticClass:\"step1\"},[_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-12 no-padding\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"login-email\"}},[_vm._v(\"Email :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login.email),expression:\"login.email\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"login-email\",\"placeholder\":\"Email Anda\"},domProps:{\"value\":(_vm.login.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, \"email\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-12 no-padding\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"login-password\"}},[_vm._v(\"Password :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login.password),expression:\"login.password\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"password\",\"id\":\"login-password\",\"placeholder\":\"*****\"},domProps:{\"value\":(_vm.login.password)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.loginAndCheckout.apply(null, arguments)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, \"password\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.login.message)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.login.message)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item text-center\"},[_c('a',{staticClass:\"button-default\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.loginAndCheckout()}}},[_vm._v(\"Login & Checkout\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"step2\",staticStyle:{\"display\":\"none\"}},[_vm._m(2),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-6 col-md-offset-3\"},[_c('label',{attrs:{\"for\":\"auth-code\"}},[_vm._v(\"Authentication Code\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login['2fa_code']),expression:\"login['2fa_code']\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"auth-code\",\"autofocus\":\"\"},domProps:{\"value\":(_vm.login['2fa_code'])},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.loginAndCheckout.apply(null, arguments)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, '2fa_code', $event.target.value)}}}),_vm._v(\" \"),(_vm.error_message.login.message)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.login.message)+\"!\")]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"item text-center\"},[_c('a',{staticClass:\"btn btn-success\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.loginAndCheckout()}}},[_vm._v(\"Verify\")])])])]):_vm._e(),_vm._v(\" \"),(_vm.tab.register)?_c('div',{staticClass:\"content register\"},[_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-6 email-wrapper\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"email\"}},[_vm._v(\"Email :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.email),expression:\"register.email\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"email\",\"placeholder\":\"Email\"},domProps:{\"value\":(_vm.register.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"email\", $event.target.value)}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 password-wrapper\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"reg_password\"}},[_vm._v(\"Password :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.password),expression:\"register.password\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"password\",\"id\":\"reg_password\",\"placeholder\":\"*****\"},domProps:{\"value\":(_vm.register.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"password\", $event.target.value)}}}),_vm._v(\" \"),(_vm.show_check_password)?_c('div',{staticClass:\"check-password\"},[_vm._m(3),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.min_char),expression:\"check_password.min_char\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"min-char\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.min_char)?_vm._i(_vm.check_password.min_char,null)>-1:(_vm.check_password.min_char)},on:{\"change\":function($event){var $$a=_vm.check_password.min_char,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"min_char\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"min_char\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"min_char\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Minimal 7 Karakter\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.no_space),expression:\"check_password.no_space\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"no-space\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.no_space)?_vm._i(_vm.check_password.no_space,null)>-1:(_vm.check_password.no_space)},on:{\"change\":function($event){var $$a=_vm.check_password.no_space,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"no_space\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"no_space\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"no_space\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Tidak menggunakan spasi\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.lowercase),expression:\"check_password.lowercase\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"lowercase\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.lowercase)?_vm._i(_vm.check_password.lowercase,null)>-1:(_vm.check_password.lowercase)},on:{\"change\":function($event){var $$a=_vm.check_password.lowercase,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"lowercase\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"lowercase\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"lowercase\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Lowercase\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.uppercase),expression:\"check_password.uppercase\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"uppercase\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.uppercase)?_vm._i(_vm.check_password.uppercase,null)>-1:(_vm.check_password.uppercase)},on:{\"change\":function($event){var $$a=_vm.check_password.uppercase,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"uppercase\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"uppercase\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"uppercase\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Uppercase\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.number),expression:\"check_password.number\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"number\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.number)?_vm._i(_vm.check_password.number,null)>-1:(_vm.check_password.number)},on:{\"change\":function($event){var $$a=_vm.check_password.number,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"number\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"number\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"number\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Angka\")])])]):_vm._e()])]),_vm._v(\" \"),(_vm.error_message.register.email)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.email.error))]):_vm._e(),_vm._v(\" \"),(_vm.error_message.register.password)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.password.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-12 no-padding\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"name\"}},[_vm._v(\"Nama Lengkap :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.name),expression:\"register.name\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"name\",\"placeholder\":\"Nama Anda\"},domProps:{\"value\":(_vm.register.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"name\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.name)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.name.error)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-12 no-padding\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"company_name\"}},[_vm._v(\"Nama Perusahaan :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.company),expression:\"register.company\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"company_name\",\"placeholder\":\"Nama Perusahaan\"},domProps:{\"value\":(_vm.register.company)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"company\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-12 no-padding\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"address-1\"}},[_vm._v(\"Alamat :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.address_1),expression:\"register.address_1\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"address-1\",\"placeholder\":\"Masukkan Jalan atau Gang, RT atau RW\"},domProps:{\"value\":(_vm.register.address_1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"address_1\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.address_1)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.address_1.error)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-12 no-padding\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.address_2),expression:\"register.address_2\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"address-2\",\"placeholder\":\"Masukkan Kelurahan atau Desa Anda\"},domProps:{\"value\":(_vm.register.address_2)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"address_2\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.address_2)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.address_2.error)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-12 no-padding\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"city\"}},[_vm._v(\"Kota :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.city),expression:\"register.city\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"city\",\"placeholder\":\"Masukkan Kota Anda\"},domProps:{\"value\":(_vm.register.city)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"city\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.city)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.city.error)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-6 postcode-wrapper\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"postal_code\"}},[_vm._v(\"Kode Pos :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.postcode),expression:\"register.postcode\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"postal_code\",\"placeholder\":\"Kode Pos\"},domProps:{\"value\":(_vm.register.postcode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"postcode\", $event.target.value)}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 phone-wrapper\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"phone\"}},[_vm._v(\"No. Telepon :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.phone),expression:\"register.phone\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"phone\",\"placeholder\":\"No. Telepon\"},domProps:{\"value\":(_vm.register.phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"phone\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.postcode)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.postcode.error)+\"!\")]):_vm._e(),_vm._v(\" \"),(_vm.error_message.register.phone)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.phone.error)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row text-center\"},[_c('a',{staticClass:\"button-default\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.registerAndCheckout()}}},[_vm._v(\"Daftar & Checkout\")])])]):_vm._e()])])])])])}\nvar ClientInformationvue_type_template_id_217bd7e3_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\"},[_vm._v(\"INFORMASI ANDA\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"note\"},[_c('p',{staticClass:\"nunito-bold font-size-20 color-fbbd0e\"},[_c('span',{staticClass:\"fa fa-exclamation-triangle\",staticStyle:{\"margin-right\":\"10px\"}}),_vm._v(\"\\n                    Perhatian!\\n                \")]),_vm._v(\" \"),_c('p',{staticClass:\"nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"\\n                    Anda \"),_c('b',[_vm._v(\"belum Login/Registrasi.\")]),_vm._v(\"\\n                    Silakan lakukan login/registrasi terlebih dahulu untuk melanjutkan pembayaran Anda.\\n                \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"item text-center\"},[_c('h4',[_vm._v(\"Two Factor Authentication\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h5',[_c('strong',[_vm._v(\"Password Harus Berisikan\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/ClientInformation.vue?vue&type=template&id=217bd7e3&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ClientInformation.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const ClientInformationvue_type_script_lang_js_ = ({\n  name: \"ClientInformation\",\n  data: function () {\n    return {\n      tab: {\n        register: true,\n        login: false\n      },\n      client: false,\n      login: {\n        id: '',\n        email: '',\n        password: '',\n        '2fa_code': '',\n        step: 1\n      },\n      register: {\n        id: '',\n        type: 'individual',\n        email: '',\n        password: '',\n        name: '',\n        company: '',\n        address_1: '',\n        address_2: '',\n        city: '',\n        postcode: '',\n        phone: ''\n      },\n      show_check_password: false,\n      check_password: {\n        min_char: false,\n        no_space: false,\n        lowercase: false,\n        uppercase: false,\n        number: false\n      },\n      error_message: {\n        login: {},\n        register: {}\n      }\n    };\n  },\n  methods: {\n    selectTab(index) {\n      if (index === 1) {\n        this.tab.login = true;\n        this.tab.register = false;\n      } else {\n        this.tab.register = true;\n        this.tab.login = false;\n      }\n    },\n\n    initPasswordCheckerBoard() {\n      reg_password.addEventListener('focus', () => {\n        this.show_check_password = true;\n      });\n      reg_password.addEventListener('focusout', () => {\n        this.show_check_password = false;\n      });\n      reg_password.addEventListener(\"keyup\", () => {\n        /*Min Char*/\n        if (this.register.password.length > 6) {\n          this.check_password.min_char = true;\n        } else {\n          this.check_password.min_char = false;\n        }\n        /*Check if ther is a space*/\n\n\n        let space = this.register.password.match(/\\s+/g);\n\n        if (Array.isArray(space) && space.length > 0) {\n          this.check_password.no_space = false;\n        } else {\n          this.check_password.no_space = true;\n        }\n        /*Check if has lowercase*/\n\n\n        let lowercase = this.register.password.match(/[a-z]/g);\n\n        if (Array.isArray(lowercase) && lowercase.length > 0) {\n          this.check_password.lowercase = true;\n        } else {\n          this.check_password.lowercase = false;\n        }\n        /*Check if has uppercase*/\n\n\n        let uppercase = this.register.password.match(/[A-Z]/g);\n\n        if (Array.isArray(uppercase) && uppercase.length > 0) {\n          this.check_password.uppercase = true;\n        } else {\n          this.check_password.uppercase = false;\n        }\n        /*Check if has number*/\n\n\n        let number = this.register.password.match(/[0-9]/g);\n\n        if (Array.isArray(number) && number.length > 0) {\n          this.check_password.number = true;\n        } else {\n          this.check_password.number = false;\n        }\n      });\n    },\n\n    loginAndCheckout() {\n      if (!this.login.email || !this.login.password) {\n        return false;\n      }\n\n      bus.$emit('show-spinner', true);\n      this.loginClient(this.login).then(result => {\n        let data = result.data;\n\n        if (data.result) {\n          if (data.result.must_reset_password) {\n            window.location.href = CommonVar.bb_url + '/reset-password?email=' + data.result.email;\n          } else if (data.result.use_2fa) {\n            this.login.step = 2;\n            $('.step1').hide();\n            $('.step2').show();\n            bus.$emit('show-spinner', false);\n            return false;\n          }\n\n          this.login.id = data.result.id;\n          this.client = this.login;\n          this.$emit('set-client', this.client);\n          js_CommonMethods/* default.setCookie */.Z.setCookie('BOXCCBR', false, 30);\n          this.checkoutNow();\n          this.hideLoginButton();\n        } else {\n          this.error_message.login = data.error;\n          bus.$emit('show-spinner', false);\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    registerAndCheckout() {\n      bus.$emit('show-spinner', true);\n\n      if (this.register.company) {\n        this.register.type = 'company';\n      }\n\n      axios.post('/api/guest/front_register', this.register).then(res => {\n        let result = res.data.result;\n\n        if (result.errors) {\n          this.error_message.register = result.errors;\n          bus.$emit('show-spinner', false);\n        } else if (result) {\n          this.register.id = result.client_id;\n          this.client = this.register;\n          this.$emit('set-client', this.client);\n          js_CommonMethods/* default.setCookie */.Z.setCookie('BOXCCBR', true, 30);\n          this.loginClient(this.register).then(result => {\n            if (result.data.result.id) {\n              this.checkoutNow();\n              this.hideLoginButton();\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    loginClient(params) {\n      return axios.post('/api/guest/front_login', params, {\n        headers: {\n          \"BB-Signature\": bb.signature(params, timeStamp),\n          \"Timestamp\": timeStamp\n        }\n      }).then(result => {\n        return result;\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    hideLoginButton() {\n      let clientNotLogin = document.getElementsByClassName('client-not-login');\n      let clientLogin = document.getElementsByClassName('client-login');\n      Array.from(clientNotLogin).forEach(function (element) {\n        element.style.display = \"none\";\n      });\n      Array.from(clientLogin).forEach(function (element) {\n        element.classList.remove('hide');\n        element.style.display = \"inline-block\";\n      });\n    },\n\n    checkoutNow() {\n      if (screen.width <= 1049) {\n        window.scrollTo(0, document.body.scrollHeight);\n        bus.$emit('show-spinner', false);\n      } else {\n        let isLoginByRegister = js_CommonMethods/* default.getCookie */.Z.getCookie('BOXCCBR');\n\n        if (isLoginByRegister) {\n          bus.$emit('checkout-now', false);\n        } else {\n          bus.$emit('checkout-now', true);\n        }\n      }\n    }\n\n  },\n  computed: {\n    registerTabActive: function () {\n      return {\n        'button-light-grey item-down': this.tab.register === false,\n        'button-blue-bordered-shadowed item-up': this.tab.register\n      };\n    },\n    loginTabActive: function () {\n      return {\n        'button-light-grey item-down': this.tab.login === false,\n        'button-blue-bordered-shadowed item-up': this.tab.login\n      };\n    }\n  },\n  mounted: function () {\n    bus.$on('init-password-checker', () => {\n      this.initPasswordCheckerBoard();\n    });\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/ClientInformation.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_ClientInformationvue_type_script_lang_js_ = (ClientInformationvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/ClientInformation.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ClientInformation_component = normalizeComponent(\n  components_ClientInformationvue_type_script_lang_js_,\n  ClientInformationvue_type_template_id_217bd7e3_scoped_true_render,\n  ClientInformationvue_type_template_id_217bd7e3_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"217bd7e3\",\n  null\n  \n)\n\n/* harmony default export */ const ClientInformation = (ClientInformation_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SectionCart.vue?vue&type=template&id=550fccd5&scoped=true&\nvar SectionCartvue_type_template_id_550fccd5_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-cart\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"section-body\"},[_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"order-review\"},[_c('p',{staticClass:\"nunito-bold color-4d5872 font-size-21\"},[_vm._v(\"Review Order Anda\")]),_vm._v(\" \"),_c('ul',{staticClass:\"cart\"},_vm._l((_vm.cart.items),function(item){return _c('li',{staticClass:\"cart-item\"},[_c('p',{staticClass:\"nunito-bold font-size-16 color-4d5872\"},[_vm._v(_vm._s(_vm.toUpperCase(item.type)))]),_vm._v(\" \"),(item.type == 'domain' && item.total != 0)?_c('p',{staticClass:\"nunito-regular font-size-14 color-4d5872\"},[_vm._v(\"\\n                            \"+_vm._s(_vm.toUpperCase(item[item.action + '_sld']))+\" \"+_vm._s(_vm.toUpperCase(item[item.action + '_tld']))+\"\\n                        \")]):_vm._e(),_vm._v(\" \"),(item.type != 'domain')?_c('p',{staticClass:\"nunito-regular font-size-14 color-4d5872\"},[_vm._v(_vm._s(item.title))]):_vm._e(),_vm._v(\" \"),(item.type == 'domain')?_c('div',{staticClass:\"col-md-6 no-padding\"},[(item.total == 0)?_c('p',{staticClass:\"nunito-regular font-size-14 color-4d5872\"},[_vm._v(\"Domain gratis dengan nama \"+_vm._s(item[item.action + '_sld'] + item[item.action + '_tld']))]):_c('p',{staticClass:\"nunito-regular font-size-14 color-4d5872\"},[_vm._v(\"\\n                                \"+_vm._s(_vm.period[item.period].text)+\" Rp. \"+_vm._s(_vm.formatPrice(item.total))+\" (Rp. \"+_vm._s(_vm.formatPrice(item.total / _vm.period[item.period].num_of_month))+\"/bln)\\n                            \")])]):_c('div',{staticClass:\"col-md-6 no-padding\"},[_c('p',{staticClass:\"nunito-regular font-size-14 color-4d5872\"},[_vm._v(\"\\n                                \"+_vm._s(_vm.period[item.period].text)+\" Rp. \"+_vm._s(_vm.formatPrice(item.total))+\" (Rp. \"+_vm._s(_vm.formatPrice(item.total / _vm.period[item.period].num_of_month))+\"/bln)\\n                            \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 no-padding text-right\"},[_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\"},[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice(item.total)))])])])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"sub-total-and-tax\"},[_c('div',{staticClass:\"col-md-6 no-padding text-left\"},[_c('p',{staticClass:\"nunito-bold font-size-21 color-4d5872\"},[_vm._v(\"Sub Total\")]),_vm._v(\" \"),_c('p',{staticClass:\"nunito-bold font-size-21 color-4d5872\",staticStyle:{\"margin-top\":\"28px\"}},[_vm._v(_vm._s(_vm.taxName))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 no-padding text-right\"},[_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\"},[_vm._v(_vm._s(_vm.formatPrice(_vm.cart.total)))]),_vm._v(\" \"),_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\",staticStyle:{\"margin-top\":\"28px\"}},[_vm._v(_vm._s(_vm.formatPrice(_vm.cart.total * _vm.taxRate)))])])]),_vm._v(\" \"),_c('div',{staticClass:\"total\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 no-padding text-right\"},[_c('p',{staticClass:\"nunito-bold font-size-24 color-007aff\"},[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice(_vm.cart.total + (_vm.cart.total * _vm.taxRate))))])])])])])])}\nvar SectionCartvue_type_template_id_550fccd5_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\"},[_vm._v(\"CART\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-6 no-padding text-left\"},[_c('p',{staticClass:\"nunito-bold font-size-21 color-4d5872\"},[_vm._v(\"Total\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/SectionCart.vue?vue&type=template&id=550fccd5&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SectionCart.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const SectionCartvue_type_script_lang_js_ = ({\n  name: \"SectionCart\",\n  props: ['cart'],\n\n  data() {\n    return {\n      period: CommonVar.period,\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n\n  methods: {\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    toUpperCase(str) {\n      return str.toUpperCase();\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    }\n\n  },\n\n  created() {\n    this.getTaxRate();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/SectionCart.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_SectionCartvue_type_script_lang_js_ = (SectionCartvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/SectionCart.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SectionCart_component = normalizeComponent(\n  components_SectionCartvue_type_script_lang_js_,\n  SectionCartvue_type_template_id_550fccd5_scoped_true_render,\n  SectionCartvue_type_template_id_550fccd5_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"550fccd5\",\n  null\n  \n)\n\n/* harmony default export */ const SectionCart = (SectionCart_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AdditionalFeature.vue?vue&type=template&id=09ce0421&scoped=true&\nvar AdditionalFeaturevue_type_template_id_09ce0421_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-additional-feature\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"section-body\"},[_c('div',{staticClass:\"product-plan\"},[_c('div',{staticClass:\"auto-install-wp addon\"},[_c('div',{staticClass:\"pretty-checkbox\",on:{\"click\":_vm.autoInstallWebsite}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.auto_install_wp.selected),expression:\"additional_feature.auto_install_wp.selected\"}],attrs:{\"type\":\"checkbox\",\"name\":\"auto_install_wp\",\"value\":\"1\"},domProps:{\"checked\":Array.isArray(_vm.additional_feature.auto_install_wp.selected)?_vm._i(_vm.additional_feature.auto_install_wp.selected,\"1\")>-1:(_vm.additional_feature.auto_install_wp.selected)},on:{\"change\":function($event){var $$a=_vm.additional_feature.auto_install_wp.selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"1\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.additional_feature.auto_install_wp, \"selected\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.additional_feature.auto_install_wp, \"selected\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.additional_feature.auto_install_wp, \"selected\", $$c)}}}}),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-icon checkbox-title\"},[_vm._v(\"Gratis Auto Install Website Wordpress\")]),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-description nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"\\n                        Kami akan menginstalkan website wordpress dengan theme premium dan plugin SEO secara gratis!\\n                    \")])]),_vm._v(\" \"),(_vm.additional_feature.auto_install_wp.selected)?_c('div',{staticClass:\"install-wp-accelerator  pretty-checkbox\",on:{\"click\":_vm.installWpAccelerator}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.install_wp_accelerator.selected),expression:\"additional_feature.install_wp_accelerator.selected\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.additional_feature.install_wp_accelerator.selected)?_vm._i(_vm.additional_feature.install_wp_accelerator.selected,null)>-1:(_vm.additional_feature.install_wp_accelerator.selected)},on:{\"change\":function($event){var $$a=_vm.additional_feature.install_wp_accelerator.selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.additional_feature.install_wp_accelerator, \"selected\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.additional_feature.install_wp_accelerator, \"selected\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.additional_feature.install_wp_accelerator, \"selected\", $$c)}}}}),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-icon checkbox-title\"},[_vm._v(\"Wordpress Accelerator (LiteSpeed Cache)\")]),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-description nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"\\n                        Tambahkan plugin cache terbaik untuk mempercepat WordPress Anda yang hanya berjalan pada web server LiteSpeed Enterprise di Niagahoster\\n                    \")])]):_vm._e()]),_vm._v(\" \"),(_vm.show_weebly)?_c('div',{staticClass:\"website-builder addon\"},[_c('div',{staticClass:\"pretty-checkbox\",on:{\"click\":_vm.addWeeblyToCart}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.weebly.selected),expression:\"additional_feature.weebly.selected\"}],attrs:{\"type\":\"checkbox\",\"name\":\"weebly\",\"value\":\"1\"},domProps:{\"checked\":Array.isArray(_vm.additional_feature.weebly.selected)?_vm._i(_vm.additional_feature.weebly.selected,\"1\")>-1:(_vm.additional_feature.weebly.selected)},on:{\"change\":function($event){var $$a=_vm.additional_feature.weebly.selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"1\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.additional_feature.weebly, \"selected\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.additional_feature.weebly, \"selected\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.additional_feature.weebly, \"selected\", $$c)}}}}),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-icon checkbox-title\"},[_vm._v(\"Rekomendasi Website Builder\")]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"mar_top1\"}),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-description nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"\\n                        Dengan integrasi aplikasi weebly, ciptakan halaman website pribadi dengan nama domain milik Anda\\n                    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"custom-select\"},[_c('div',{ref:\"select-weebly\",staticClass:\"selected-item\",class:{'show-option':_vm.show_weebly_plan_select_option},on:{\"click\":function($event){return _vm.showHideWeeblyPlanSelectOption()}}},[_c('p',[_c('b',[_vm._v(\"\\n                                \"+_vm._s(_vm.additional_feature.weebly.plan.title)+\" - \"+_vm._s(_vm.formatPrice(_vm.additional_feature.weebly.plan.price))+\" /\\n                                \"+_vm._s(_vm.period[_vm.additional_feature.weebly.plan.period].unit)+\"\\n                            \")])])]),_vm._v(\" \"),(_vm.show_weebly_plan_select_option)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-weebly'], handler: 'showHideWeeblyPlanSelectOption'}),expression:\"{exclude: ['select-weebly'], handler: 'showHideWeeblyPlanSelectOption'}\"}],staticClass:\"select-option\"},_vm._l((_vm.weebly_plans_parsed),function(weebly){return _c('li',{on:{\"click\":function($event){return _vm.chooseWeeblyPlan(weebly)}}},[_c('b',[_vm._v(_vm._s(weebly.title)+\" - \"+_vm._s(_vm.formatPrice(weebly.price))+\" / \"+_vm._s(_vm.period[weebly.period].unit))])])}),0):_vm._e()])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"ssl addon\"},[_c('div',{staticClass:\"pretty-checkbox\",on:{\"click\":_vm.addRemoveSSLToCart}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.ssl.selected),expression:\"additional_feature.ssl.selected\"}],attrs:{\"type\":\"checkbox\",\"name\":\"ssl\",\"value\":\"1\"},domProps:{\"checked\":Array.isArray(_vm.additional_feature.ssl.selected)?_vm._i(_vm.additional_feature.ssl.selected,\"1\")>-1:(_vm.additional_feature.ssl.selected)},on:{\"change\":function($event){var $$a=_vm.additional_feature.ssl.selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"1\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.additional_feature.ssl, \"selected\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.additional_feature.ssl, \"selected\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.additional_feature.ssl, \"selected\", $$c)}}}}),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-icon checkbox-title\"},[_vm._v(\"Rekomendasi Keamanan\")]),_vm._v(\" \"),_vm._m(2)]),_vm._v(\" \"),_c('div',{staticClass:\"ssl-package\",staticStyle:{\"margin-top\":\"20px\"}},[_c('div',{staticClass:\"pretty-select\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.ssl.product_id),expression:\"additional_feature.ssl.product_id\"}],attrs:{\"name\":\"ssl_package\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.additional_feature.ssl, \"product_id\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.ssl_plans),function(ssl){return _c('option',{domProps:{\"value\":ssl.id}},[_vm._v(_vm._s(ssl.title))])}),0),_vm._v(\" \"),_c('span',{staticClass:\"arrow fa fa-chevron-down\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"privacy-protection addon\",class:{'no-click':!_vm.inArray(_vm.domain.tld, _vm.additional_feature.domainprivacy.valid_domain)}},[_c('div',{staticClass:\"pretty-checkbox\",on:{\"click\":_vm.addRemovePrivacyProtectionToCart}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.domainprivacy.selected),expression:\"additional_feature.domainprivacy.selected\"}],attrs:{\"type\":\"checkbox\",\"name\":\"privacy_protection\",\"value\":\"1\"},domProps:{\"checked\":Array.isArray(_vm.additional_feature.domainprivacy.selected)?_vm._i(_vm.additional_feature.domainprivacy.selected,\"1\")>-1:(_vm.additional_feature.domainprivacy.selected)},on:{\"change\":function($event){var $$a=_vm.additional_feature.domainprivacy.selected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"1\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.additional_feature.domainprivacy, \"selected\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.additional_feature.domainprivacy, \"selected\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.additional_feature.domainprivacy, \"selected\", $$c)}}}}),_vm._v(\" \"),_c('p',{staticClass:\"checkbox-icon checkbox-title\"},[_vm._v(\"Rekomendasi Privasi\")]),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(4)])])])])])}\nvar AdditionalFeaturevue_type_template_id_09ce0421_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_c('h3',{staticClass:\"nunito-bold font-size-24 color-4d5872\"},[_vm._v(\"FITUR PENDUKUNG\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"checkbox-description nunito-regular font-size-16 color-4d5872\"},[_c('b',[_vm._v(\"Weebly Cepat, Mudah, dan Tanpa Repot!\")]),_vm._v(\" \"),_c('br')])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"checkbox-description nunito-regular font-size-16 color-4d5872\"},[_c('b',[_vm._v(\"SSL Certificate: Hanya Rp 125rb/domain per tahun\")]),_c('br'),_vm._v(\"\\n                        Tingkatkan Kepercayaan Website bisnis dan toko online Anda dengan koneksi aman HTTPS\\n                    \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"checkbox-description nunito-regular font-size-16 color-4d5872\"},[_c('b',[_vm._v(\"WHOIS Protection: Hanya Rp 45rb/domain per tahun\")]),_c('br'),_vm._v(\"\\n                        Lindungi informasi pribadi Anda agar tidak jatuh ke tangan yang salah\\n                    \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"checkbox-description nunito-regular font-size-16 color-4d5872\"},[_vm._v(\"\\n                        - Sembunyikan nama, email, alamat, dan telepon dari informasi WHOIS  domain Anda\"),_c('br'),_vm._v(\"\\n                        - Cegah pembajakan dan spam ke domain Anda\"),_c('br')])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/AdditionalFeature.vue?vue&type=template&id=09ce0421&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AdditionalFeature.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const AdditionalFeaturevue_type_script_lang_js_ = ({\n  name: \"AdditionalFeature\",\n  props: ['weebly_plans_parsed', 'ssl_plans', 'domain'],\n\n  data() {\n    return {\n      period: CommonVar.period,\n      show_weebly_plan_select_option: false,\n      show_weebly: false,\n      additional_feature: {\n        auto_install_wp: {\n          selected: false,\n          product_id: 69,\n          period: '1Y',\n          cart_product_id: ''\n        },\n        install_wp_accelerator: {\n          selected: false\n        },\n        weebly: {\n          selected: false,\n          product_id: 29,\n          period: '1Y',\n          plan: {},\n          cart_product_id: ''\n        },\n        ssl: {\n          selected: false,\n          product_id: 76,\n          period: \"1Y\",\n          cart_product_id: ''\n        },\n        domainprivacy: {\n          selected: false,\n          product_id: 33,\n          period: \"1Y\",\n          cart_product_id: '',\n          valid_domain: ['.com', '.net', '.org', '.info']\n        }\n      }\n    };\n  },\n\n  methods: {\n    showHideWeeblyPlanSelectOption() {\n      this.show_weebly_plan_select_option = !this.show_weebly_plan_select_option;\n    },\n\n    chooseWeeblyPlan(plan) {\n      this.additional_feature.weebly.product_id = plan.id;\n      this.additional_feature.weebly.period = plan.period;\n      this.additional_feature.weebly.plan = plan;\n      this.showHideWeeblyPlanSelectOption();\n    },\n\n    /* ADD ADDITIONAL FEATURE TO CART */\n    autoInstallWebsite() {\n      bus.$emit('show-spinner', true);\n      this.additional_feature.auto_install_wp.selected = !this.additional_feature.auto_install_wp.selected;\n      axios.post('/api/guest/add_remove_auto_install_website', {\n        is_add: this.additional_feature.auto_install_wp.selected\n      }).then(res => {\n        bus.$emit('refresh-cart');\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    installWpAccelerator() {\n      bus.$emit('show-spinner', true);\n      this.additional_feature.install_wp_accelerator.selected = !this.additional_feature.install_wp_accelerator.selected;\n      axios.post('/api/guest/add_remove_install_wp_accelerator', {\n        is_add: this.additional_feature.install_wp_accelerator.selected\n      }).then(res => {\n        bus.$emit('refresh-cart');\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    addWeeblyToCart() {\n      this.additional_feature.weebly.selected = !this.additional_feature.weebly.selected;\n\n      if (this.additional_feature.weebly.selected) {\n        this.addAdditionalFeatureToCart('weebly', this.additional_feature.weebly.product_id, this.additional_feature.weebly.period);\n      } else {\n        this.removeFromCart(this.additional_feature.weebly.cart_product_id, 'weebly');\n      }\n    },\n\n    addRemoveSSLToCart() {\n      this.additional_feature.ssl.selected = !this.additional_feature.ssl.selected;\n\n      if (this.additional_feature.ssl.selected) {\n        this.addAdditionalFeatureToCart('ssl', this.additional_feature.ssl.product_id, this.additional_feature.ssl.period);\n      } else {\n        this.removeFromCart(this.additional_feature.ssl.cart_product_id, 'ssl');\n      }\n    },\n\n    addRemovePrivacyProtectionToCart() {\n      this.additional_feature.domainprivacy.selected = !this.additional_feature.domainprivacy.selected;\n\n      if (this.additional_feature.domainprivacy.selected) {\n        this.addAdditionalFeatureToCart('domainprivacy', this.additional_feature.domainprivacy.product_id, this.additional_feature.domainprivacy.period);\n      } else {\n        this.removeFromCart(this.additional_feature.domainprivacy.cart_product_id, 'domainprivacy');\n      }\n    },\n\n    addAdditionalFeatureToCart(type, product_id, period) {\n      bus.$emit('show-spinner', true);\n      axios.post('/api/guest/add_additional_feature_to_cart', {\n        type: type,\n        product_id: product_id,\n        period: period\n      }).then(res => {\n        let result = res.data.result;\n        this.additional_feature[result.type].cart_product_id = result.id;\n        bus.$emit('refresh-cart');\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    removeFromCart(cart_product_id, type) {\n      bus.$emit('show-spinner', true);\n      axios.post('/api/guest/remove_from_cart', {\n        id: cart_product_id\n      }).then(res => {\n        bus.$emit('refresh-cart');\n\n        if (type && this.additional_feature[type] && this.additional_feature[type].cart_product_id === cart_product_id) {\n          this.additional_feature[type].selected = false;\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    inArray(needle, haystack) {\n      let length = haystack.length;\n\n      for (let i = 0; i < length; i++) {\n        if (haystack[i] == needle) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n  },\n\n  created() {\n    this.additional_feature.weebly.plan = this.weebly_plans_parsed[0];\n  },\n\n  mounted: function () {\n    setTimeout(() => {\n      bus.$on('remove-item', item => {\n        if (item.type && this.additional_feature[item.type] && this.additional_feature[item.type].cart_product_id === item.id) {\n          this.additional_feature[item.type].selected = false;\n        }\n      });\n    }, 100);\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/AdditionalFeature.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_AdditionalFeaturevue_type_script_lang_js_ = (AdditionalFeaturevue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/AdditionalFeature.vue\n\n\n\n\n\n/* normalize component */\n;\nvar AdditionalFeature_component = normalizeComponent(\n  components_AdditionalFeaturevue_type_script_lang_js_,\n  AdditionalFeaturevue_type_template_id_09ce0421_scoped_true_render,\n  AdditionalFeaturevue_type_template_id_09ce0421_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"09ce0421\",\n  null\n  \n)\n\n/* harmony default export */ const AdditionalFeature = (AdditionalFeature_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowDomain/OrderFlowDomainVerisign.vue?vue&type=template&id=8f6b84fa&\nvar OrderFlowDomainVerisignvue_type_template_id_8f6b84fa_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"orderflow-wrapper\"},[(_vm.show_spinner)?_c('div',{staticClass:\"spinner\"},[_c('img',{attrs:{\"src\":_vm.asset_url + '/spinner.gif',\"alt\":\"spinner\"}})]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"mar_top3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"section-domain\"},[_c('div',{staticClass:\"section-body\"},[_c('div',{staticClass:\"product-plan\"},[_c('div',{staticClass:\"col-md-3 col-sm-12 text-center\"},[_c('img',{staticClass:\"img-responsive\",attrs:{\"src\":_vm.asset_url + '/orderflow/web-hosting.png'}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5 col-sm-12\"},[_c('span',{staticClass:\"nunito-regular color-4d5872 font-size-18\"},[_vm._v(\"\\n                                Selamat, domain :\\n                            \")]),_vm._v(\" \"),_c('div',{staticClass:\"mar_top2\"}),_vm._v(\" \"),_c('h3',{staticClass:\"nunito-bold color-4d5872 font-size-24\"},[_c('b',[_vm._v(_vm._s(_vm._f(\"title\")(_vm.sld + _vm.tld)))]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.domain_config.domain),expression:\"domain_config.domain\"}],attrs:{\"type\":\"hidden\"},domProps:{\"value\":(_vm.domain_config.domain)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.domain_config, \"domain\", $event.target.value)}}})]),_vm._v(\" \"),_c('div',{staticClass:\"mar_top2\"}),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"mar_top2\"}),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('span',{staticClass:\"nunito-regular font-size-18\"},[_vm._v(\"Durasi : \")]),_vm._v(\" \"),(_vm.orderflow_step != 2)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.domain_config.period),expression:\"domain_config.period\"}],staticClass:\"select-period nunito-bold font-size-18 color-4d5872\",attrs:{\"id\":\"domain_period\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.domain_config, \"period\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.chooseDomainPeriod]}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"1 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"2 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"3 Tahun\")])]):_vm._e(),_vm._v(\" \"),(_vm.orderflow_step == 2)?_c('span',{staticClass:\"nunito-bold font-size-18 color-4d5872\"},[_vm._v(_vm._s(_vm.domain_config.period)+\" Tahun\")]):_vm._e(),_vm._v(\" \"),_c('span',{staticClass:\"nunito-bold font-size-18 color-4d5872\"},[_vm._v(\"Rp \"+_vm._s(_vm.formatPrice(_vm.domain.price)))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4 col-sm-12\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"mar_top3\"}),_vm._v(\" \"),_c('div',{staticClass:\"row nunito-regular color-4d5872 font-size-16\"},[_c('div',{staticClass:\"col-md-5 col-xs-5\"},[_vm._v(\"Subtotal : \")]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7 col-xs-7 text-right\"},[_c('b',[_vm._v(\"Rp \"+_vm._s(_vm.formatPrice(_vm.domain.price)))])])]),_vm._v(\" \"),_c('div',{staticClass:\"mar_top1\"}),_vm._v(\" \"),_c('div',{staticClass:\"row nunito-regular color-4d5872 font-size-16\"},[_c('div',{staticClass:\"col-md-5 col-xs-5\"},[_vm._v(\"PPN (10%) : \")]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7 col-xs-7 text-right\"},[_c('b',[_vm._v(\"Rp \"+_vm._s(_vm.formatPrice(_vm.domain.price * 0.1)))])])]),_vm._v(\" \"),_c('div',{staticClass:\"mar_top2\"}),_vm._v(\" \"),_c('div',{staticClass:\"row nunito-bold color-4d5872 font-size-18\"},[_vm._m(2),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7 col-xs-7 color-4d5872 text-right\"},[_c('b',{staticClass:\"niaga-azure\"},[_vm._v(\"Rp \"+_vm._s(_vm.formatPrice(_vm.domain.price * 1.1)))])])])])])])]),_vm._v(\" \"),(_vm.orderflow_step == 1 && ! _vm.client)?_c('client-information-verisign',{ref:\"foo\",on:{\"set-client\":function($event){_vm.client = $event},\"add-domain-to-cart\":_vm.addDomainToCart,\"set-orderflow-step\":function($event){_vm.orderflow_step = $event}}}):_vm._e(),_vm._v(\" \"),(_vm.orderflow_step == 2)?_c('payment-method',{attrs:{\"cart\":_vm.cart},on:{\"choose-payment-method\":function($event){_vm.gateway_id = $event}}}):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"col-md-offset-9 col-md-3\"},[(_vm.orderflow_step == 2 && _vm.client && _vm.cart.items.length)?_c('a',{staticClass:\"button-default button-block button-white-blue nunito-bold font-size-16\",staticStyle:{\"margin-top\":\"32px\"},attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.checkoutNow()}}},[_vm._v(\"Checkout Sekarang\")]):_vm._e()])],1)])])}\nvar OrderFlowDomainVerisignvue_type_template_id_8f6b84fa_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"nunito-regular color-4d5872 font-size-16\"},[_vm._v(\"\\n                                telah Anda pesan. Silahkan \"),_c('b',[_vm._v(\"pilih durasi\")]),_vm._v(\" serta lakukan\"),_c('br'),_vm._v(\" \"),_c('b',[_vm._v(\"login/registrasi\")]),_vm._v(\" untuk menyelesaikan pemesan Anda.\\n                            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"nunito-regular color-4d5872 font-size-18\"},[_c('b',[_vm._v(\"Review Domain : \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-5 col-xs-5\"},[_c('b',[_vm._v(\"TOTAL\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/OrderFlowDomainVerisign.vue?vue&type=template&id=8f6b84fa&\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowDomain/ClientInformationVerisign.vue?vue&type=template&id=08e3dd30&\nvar ClientInformationVerisignvue_type_template_id_08e3dd30_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-client\"},[_c('div',{staticClass:\"separate-section\"}),_vm._v(\" \"),_c('div',{staticClass:\"section-body\"},[_c('div',{staticClass:\"card card-padding\"},[_c('div',{staticClass:\"login-register\"},[_c('div',{staticClass:\"tabs\"},[_c('div',{staticClass:\"tab-nav\"},[_c('a',{staticClass:\"button-default tab-nav-left\",class:_vm.loginTabActive,attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.selectTab(1)}}},[_vm._v(\"Masuk\")]),_vm._v(\" \"),_c('a',{staticClass:\"button-default tab-nav-right\",class:_vm.registerTabActive,attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.selectTab(2)}}},[_vm._v(\"Daftar\")])]),_vm._v(\" \"),_c('div',{staticClass:\"tab-content\"},[(_vm.tab.register)?_c('div',{staticClass:\"content register text-left\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"form-register\"},[_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-11\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"email\"}},[_vm._v(\"Nama :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.name),expression:\"register.name\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"name\",\"placeholder\":\"Nama Anda\"},domProps:{\"value\":(_vm.register.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"name\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.name)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.name.error)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-11\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"email\"}},[_vm._v(\"Email :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.email),expression:\"register.email\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"email\",\"placeholder\":\"Email Anda\"},domProps:{\"value\":(_vm.register.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"email\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-11\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"password\"}},[_vm._v(\"Password :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.password),expression:\"register.password\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"password\",\"id\":\"reg_password\",\"placeholder\":\"*****\"},domProps:{\"value\":(_vm.register.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"password\", $event.target.value)}}}),_vm._v(\" \"),(_vm.show_check_password)?_c('div',{staticClass:\"check-password\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.min_char),expression:\"check_password.min_char\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"min-char\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.min_char)?_vm._i(_vm.check_password.min_char,null)>-1:(_vm.check_password.min_char)},on:{\"change\":function($event){var $$a=_vm.check_password.min_char,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"min_char\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"min_char\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"min_char\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Minimal 7 Karakter\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.no_space),expression:\"check_password.no_space\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"no-space\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.no_space)?_vm._i(_vm.check_password.no_space,null)>-1:(_vm.check_password.no_space)},on:{\"change\":function($event){var $$a=_vm.check_password.no_space,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"no_space\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"no_space\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"no_space\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Tidak menggunakan spasi\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.lowercase),expression:\"check_password.lowercase\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"lowercase\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.lowercase)?_vm._i(_vm.check_password.lowercase,null)>-1:(_vm.check_password.lowercase)},on:{\"change\":function($event){var $$a=_vm.check_password.lowercase,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"lowercase\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"lowercase\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"lowercase\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Lowercase\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.uppercase),expression:\"check_password.uppercase\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"uppercase\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.uppercase)?_vm._i(_vm.check_password.uppercase,null)>-1:(_vm.check_password.uppercase)},on:{\"change\":function($event){var $$a=_vm.check_password.uppercase,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"uppercase\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"uppercase\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"uppercase\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Uppercase\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.number),expression:\"check_password.number\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"number\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.number)?_vm._i(_vm.check_password.number,null)>-1:(_vm.check_password.number)},on:{\"change\":function($event){var $$a=_vm.check_password.number,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"number\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"number\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"number\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Angka\")])])]):_vm._e()])]),_vm._v(\" \"),(_vm.error_message.register.email)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.email.error)+\"!\")]):_vm._e(),_vm._v(\" \"),(_vm.error_message.register.password)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.password.error)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-11\"},[_c('div',{staticClass:\"pretty-checkbox\",on:{\"click\":function($event){return _vm.agreeTos()}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.agree_tos),expression:\"register.agree_tos\"}],attrs:{\"type\":\"checkbox\",\"name\":\"agree_tos\",\"value\":\"1\"},domProps:{\"checked\":Array.isArray(_vm.register.agree_tos)?_vm._i(_vm.register.agree_tos,\"1\")>-1:(_vm.register.agree_tos)},on:{\"change\":function($event){var $$a=_vm.register.agree_tos,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"1\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.register, \"agree_tos\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.register, \"agree_tos\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.register, \"agree_tos\", $$c)}}}}),_vm._v(\" \"),_c('span',{staticClass:\"checkbox-icon checkbox-title font-size-16\"}),_vm._v(\" \"),_c('a',{staticClass:\"nunito-regular font-size-16 color-4d5872 tos-link\",attrs:{\"href\":\"/syarat-dan-ketentuan\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"I Agree with the Terms and Privacy Policies\")])])])]),_vm._v(\" \"),(_vm.error_message.register.message)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.message)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row box-submit\"},[_c('div',{staticClass:\"col-md-11\"},[_c('a',{staticClass:\"button-default button-white-blue btn-hover-blue\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.registerAndCheckout()}}},[_vm._v(\"Daftar & Checkout\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"mar_top1\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-11\"},[_c('div',{staticClass:\"col-md-6\"},[_c('a',{staticClass:\"button-default button-facebook\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.loginFacebook()}}},[_vm._v(\"Facebook\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('a',{staticClass:\"button-default button-google\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.loginGoogle()}}},[_vm._v(\"Google\")])])])])])])]):_vm._e(),_vm._v(\" \"),(_vm.tab.login)?_c('div',{staticClass:\"content login\"},[_c('div',{staticClass:\"item row text-left\"},[_c('div',{staticClass:\"col-md-6\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"email\"}},[_vm._v(\"Email :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login.email),expression:\"login.email\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"text\",\"id\":\"email\",\"placeholder\":\"Email Anda\"},domProps:{\"value\":(_vm.login.email)},on:{\"set-email\":function($event){_vm.login.email = $event},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, \"email\", $event.target.value)}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('label',{staticClass:\"nunito-regular font-size-16 color-4d5872\",attrs:{\"for\":\"email\"}},[_vm._v(\"Password :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login.password),expression:\"login.password\"}],staticClass:\"pretty-input\",attrs:{\"type\":\"password\",\"id\":\"password\",\"placeholder\":\"*****\"},domProps:{\"value\":(_vm.login.password)},on:{\"set-password\":function($event){_vm.login.password = $event},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, \"password\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"item row text-left\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"pretty-checkbox\",on:{\"click\":function($event){return _vm.agreeTos()}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.agree_tos),expression:\"register.agree_tos\"}],attrs:{\"type\":\"checkbox\",\"name\":\"agree_tos\",\"value\":\"1\"},domProps:{\"checked\":Array.isArray(_vm.register.agree_tos)?_vm._i(_vm.register.agree_tos,\"1\")>-1:(_vm.register.agree_tos)},on:{\"change\":function($event){var $$a=_vm.register.agree_tos,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"1\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.register, \"agree_tos\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.register, \"agree_tos\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.register, \"agree_tos\", $$c)}}}}),_vm._v(\" \"),_c('span',{staticClass:\"checkbox-icon checkbox-title font-size-16\"}),_vm._v(\" \"),_c('a',{staticClass:\"nunito-regular font-size-16 color-4d5872 tos-link\",attrs:{\"href\":\"/syarat-dan-ketentuan\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"I Agree with the Terms and Privacy Policies\")])])])]),_vm._v(\" \"),(_vm.error_message.login.message)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"10px 0\"}},[_vm._v(_vm._s(_vm.error_message.login.message)+\"!\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row box-submit\"},[_c('div',{staticClass:\"col-md-12\"},[_c('a',{staticClass:\"button-default button-white-blue btn-hover-blue\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.loginAndAddCart()},\"login-and-add-cart\":_vm.loginAndAddCart}},[_vm._v(\"Masuk & Checkout\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"mar_top3\"})]):_vm._e()])])])])])])}\nvar ClientInformationVerisignvue_type_template_id_08e3dd30_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h5',[_c('strong',[_vm._v(\"Password Harus Berisikan\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-11\"},[_c('span',{staticClass:\"nunito-bold font-size-18\"},[_vm._v(\"Sign up with Social Network :\")])])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/ClientInformationVerisign.vue?vue&type=template&id=08e3dd30&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowDomain/ClientInformationVerisign.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const ClientInformationVerisignvue_type_script_lang_js_ = ({\n  name: \"ClientInformationVerisign\",\n  data: function () {\n    return {\n      tab: {\n        register: true,\n        login: false\n      },\n      client: false,\n      login: {\n        email: '',\n        password: '',\n        agree_tos: false\n      },\n      register: {\n        type: 'individual',\n        email: '',\n        password: '',\n        name: '',\n        agree_tos: false\n      },\n      show_check_password: false,\n      check_password: {\n        min_char: false,\n        no_space: false,\n        lowercase: false,\n        uppercase: false,\n        number: false\n      },\n      error_message: {\n        login: {},\n        register: {}\n      }\n    };\n  },\n  methods: {\n    selectTab(index) {\n      if (index === 1) {\n        this.tab.login = true;\n        this.tab.register = false;\n      } else {\n        this.tab.register = true;\n        this.tab.login = false;\n      }\n    },\n\n    agreeTos() {\n      this.register.agree_tos = !this.register.agree_tos;\n      this.login.agree_tos = !this.login.agree_tos;\n    },\n\n    initPasswordCheckerBoard() {\n      reg_password.addEventListener('focus', () => {\n        this.show_check_password = true;\n      });\n      reg_password.addEventListener('focusout', () => {\n        this.show_check_password = false;\n      });\n      reg_password.addEventListener(\"keyup\", () => {\n        /*Min Char*/\n        if (this.register.password.length > 6) {\n          this.check_password.min_char = true;\n        } else {\n          this.check_password.min_char = false;\n        }\n        /*Check if ther is a space*/\n\n\n        let space = this.register.password.match(/\\s+/g);\n\n        if (Array.isArray(space) && space.length > 0) {\n          this.check_password.no_space = false;\n        } else {\n          this.check_password.no_space = true;\n        }\n        /*Check if has lowercase*/\n\n\n        let lowercase = this.register.password.match(/[a-z]/g);\n\n        if (Array.isArray(lowercase) && lowercase.length > 0) {\n          this.check_password.lowercase = true;\n        } else {\n          this.check_password.lowercase = false;\n        }\n        /*Check if has uppercase*/\n\n\n        let uppercase = this.register.password.match(/[A-Z]/g);\n\n        if (Array.isArray(uppercase) && uppercase.length > 0) {\n          this.check_password.uppercase = true;\n        } else {\n          this.check_password.uppercase = false;\n        }\n        /*Check if has number*/\n\n\n        let number = this.register.password.match(/[0-9]/g);\n\n        if (Array.isArray(number) && number.length > 0) {\n          this.check_password.number = true;\n        } else {\n          this.check_password.number = false;\n        }\n      });\n    },\n\n    loginAndAddCart() {\n      bus.$emit('show-spinner', true);\n\n      if (!this.login.email || !this.login.password) {\n        return false;\n      }\n\n      if (!this.login.agree_tos) {\n        this.error_message.login = {\n          message: 'Silakan menyetujui syarat dan ketentuan yang berlaku'\n        };\n        bus.$emit('show-spinner', false);\n        return;\n      }\n\n      let timeStamp = new Date().getTime();\n      axios.post('/api/guest/front_login', this.login, {\n        headers: {\n          \"BB-Signature\": bb.signature(this.login, timeStamp),\n          \"Timestamp\": timeStamp\n        }\n      }).then(res => {\n        let data = res.data;\n\n        if (data.result) {\n          if (data.result.must_reset_password) {\n            window.location.href = CommonVar.bb_url + '/reset-password?email=' + data.result.email;\n          }\n\n          this.client = this.login;\n          this.$emit('set-client', this.client);\n          bus.$emit('show-spinner', false);\n          this.$emit('add-domain-to-cart');\n          this.$emit('set-orderflow-step', 2);\n        } else {\n          this.error_message.login = data.error;\n          bus.$emit('show-spinner', false);\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    registerAndCheckout() {\n      bus.$emit('show-spinner', true);\n\n      if (!this.register.agree_tos) {\n        this.error_message.register = {\n          message: 'Silakan menyetujui syarat dan ketentuan yang berlaku'\n        };\n        bus.$emit('show-spinner', false);\n        return;\n      }\n\n      axios.post('/api/guest/front_register', this.register).then(res => {\n        let result = res.data.result;\n\n        if (result.errors) {\n          this.error_message.register = result.errors;\n          bus.$emit('show-spinner', false);\n        } else if (result) {\n          this.client = this.register;\n          bus.$emit('show-spinner', false);\n          this.loginClient(this.register).then(result => {\n            let data = result.data;\n\n            if (data.result) {\n              this.$emit('set-client', data.result);\n              this.$emit('add-domain-to-cart');\n              this.$emit('set-orderflow-step', 2);\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    loginClient(params) {\n      let timeStamp = new Date().getTime();\n      return axios.post('/api/guest/front_login', params, {\n        headers: {\n          \"BB-Signature\": bb.signature(params, timeStamp),\n          \"Timestamp\": timeStamp\n        }\n      }).then(result => {\n        return result;\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    loginFacebook() {\n      window.open(\"/login/facebook?ref=register\", \"Ratting\", \"width=800,height=500,0,status=0,\");\n    },\n\n    loginGoogle() {\n      window.open(\"/login/google\", \"Ratting\", \"width=800,height=500,0,status=0,\");\n    },\n\n    setCookie(key, value, days) {\n      let d = new Date();\n      d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);\n      let expires = \"expires=\" + d.toUTCString();\n      document.cookie = key + \"=\" + value + \";\" + expires + \";path=/\";\n    }\n\n  },\n  computed: {\n    registerTabActive: function () {\n      return {\n        'button-white-blue item-down': this.tab.register === false,\n        'button-white item-up': this.tab.register\n      };\n    },\n    loginTabActive: function () {\n      return {\n        'button-white-blue item-down': this.tab.login === false,\n        'button-white item-up': this.tab.login\n      };\n    }\n  },\n  mounted: function () {\n    this.initPasswordCheckerBoard();\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/ClientInformationVerisign.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowDomain_ClientInformationVerisignvue_type_script_lang_js_ = (ClientInformationVerisignvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/ClientInformationVerisign.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ClientInformationVerisign_component = normalizeComponent(\n  OrderFlowDomain_ClientInformationVerisignvue_type_script_lang_js_,\n  ClientInformationVerisignvue_type_template_id_08e3dd30_render,\n  ClientInformationVerisignvue_type_template_id_08e3dd30_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ClientInformationVerisign = (ClientInformationVerisign_component.exports);\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/method.js\n/* harmony default export */ const method = ({\n  getCart() {\n    this.show_spinner = true;\n    axios.get('/api/guest/get_cart').then(res => {\n      this.cart = res.data.cart;\n\n      if (!this.cart.items.length && (this.orderflow_step !== 1 || this.orderflow_step === 1)) {\n        location.reload(true);\n      }\n\n      this.show_spinner = false;\n    }).catch(err => {\n      console.log(err);\n      this.show_spinner = false;\n    });\n  },\n\n  addToCart(item) {\n    this.show_spinner = true;\n    axios.post('/api/guest/add_to_cart', {\n      item: item\n    }).then(res => {\n      this.getCart();\n    }).catch(err => {\n      console.log(err);\n      this.show_spinner = false;\n    });\n  },\n\n  addDomainToCart() {\n    let action = this.domain_config.action;\n    let item = {\n      register_years: this.domain_config.period,\n      id: this.domain_config.product_id,\n      action: action,\n      [action + \"_sld\"]: this.sld,\n      [action + \"_tld\"]: this.tld,\n      \"data-title\": this.sld + this.tld,\n      siapngedotcom: true\n    };\n    this.addToCart(item);\n  },\n\n  checkoutNow() {\n    if (this.orderflow_step < 2) {\n      this.orderflow_step += 1;\n\n      if (this.orderflow_step === 1 && !this.client) {\n        setTimeout(() => {\n          bus.$emit('init-password-checker');\n        }, 100);\n      }\n\n      return false;\n    }\n\n    if (this.orderflow_step === 2) {\n      this.show_spinner = true;\n      axios.post('/api/guest/front_checkout', {\n        gateway_id: this.gateway_id,\n        order_flow: 'orderdomain',\n        client_data: this.client\n      }).then(res => {\n        let result = res.data.result;\n        console.log(result);\n        this.checkoutPayment(result);\n      }).catch(err => {\n        console.log(err);\n        this.show_spinner = false;\n      });\n    }\n  },\n\n  checkoutPayment(params) {\n    this.show_spinner = true;\n    axios.post('/api/guest/checkout_payment', {\n      hash: params.invoice_hash,\n      gateway_id: params.gateway_id,\n      auto_redirect: true\n    }).then(res => {\n      let result = res.data.result;\n      this.removeCookie('BOXAFF');\n      this.removeCookie('coupon_code');\n      this.removeCookie('PIXEL_AFF');\n\n      if (params.gateway_id === 1) {\n        let redirectUrl = CommonVar.bb_url + '/orderhost/terimakasih/' + params.gateway_name + '/' + params.invoice_number;\n        window.location.href = redirectUrl;\n        return;\n      }\n\n      if (!result.iframe && result.type === 'html') {\n        /*this.gateway_html = result.result;*/\n        document.getElementById(\"payment-gateway-html\").innerHTML = result.result;\n        document.forms['payment_form'].submit();\n      }\n\n      this.show_spinner = false;\n    }).catch(err => {\n      console.log(err);\n      this.show_spinner = false;\n    });\n  },\n\n  getComPricing() {\n    this.show_spinner = true;\n    axios.post('/api/guest/domain_pricing', {\n      data: {\n        tld: this.tld\n      }\n    }).then(res => {\n      this.domain.first_year_registration = res.data.result.first_year_registration;\n      this.domain.price_registration = res.data.result.price_registration;\n      this.domain.price_renew = res.data.result.price_renew;\n      this.setDomainPrice();\n      this.show_spinner = false;\n    }).catch(err => {\n      console.log(err);\n      this.show_spinner = false;\n    });\n  },\n\n  formatPrice(value) {\n    value = Math.round(value);\n    let val = (value / 1).toFixed(2).replace('.', ',');\n    return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  },\n\n  chooseDomainPeriod() {\n    if (this.domain_config.period > 1) {\n      this.domain.price = this.domain.price_registration * this.domain_config.period - (this.domain.price_registration - this.domain.first_year_registration);\n      this.domain_config.period;\n    } else {\n      this.setDomainPrice();\n    }\n  },\n\n  setDomainPrice: function () {\n    if (this.domain.first_year_registration < 1) {\n      this.domain.price = this.domain.price_registration;\n    }\n\n    if (this.domain.first_year_registration < this.domain.price_registration) {\n      this.domain.price = this.domain.first_year_registration;\n    } else {\n      this.domain.price = this.domain.price_registration;\n    }\n  },\n\n  getCookie(key) {\n    let name = key + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let cookies = decodedCookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      let c = cookies[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return false;\n  },\n\n  removeCookie(key) {\n    document.cookie = key + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n  }\n\n});\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowDomain/OrderFlowDomainVerisign.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nvue_esm/* default.use */.Z.use(ClientInformationVerisign);\n/* harmony default export */ const OrderFlowDomainVerisignvue_type_script_lang_js_ = ({\n  data() {\n    return {\n      domain: {\n        price: 125000,\n        first_year_registration: 125000,\n        price_registration: 125000,\n        price_renew: 125000\n      },\n      client: false,\n      check_password: {\n        min_char: false,\n        no_space: false,\n        lowercase: false,\n        uppercase: false,\n        number: false\n      },\n      domain_config: {\n        action: 'register',\n        domain: '',\n        register_sld: '',\n        register_tld: '.com',\n        owndomain_sld: '',\n        owndomain_tld: '.com',\n        register_years: 1,\n        product_id: 1,\n        period: '1'\n      },\n      cart: {\n        items: []\n      },\n      gateway_id: 1,\n      orderflow_step: 1,\n      show_spinner: false\n    };\n  },\n\n  props: ['asset_url', 'sld', 'tld'],\n  methods: { ...method\n  },\n  mounted: function () {\n    this.getComPricing();\n    window.addEventListener('message', msg => {\n      if (msg.data.task == 'login') {\n        this.client = true;\n        this.addDomainToCart();\n        this.orderflow_step = 2;\n      }\n    });\n    this.$on('show-spinner', status => {\n      this.show_spinner = status;\n    });\n  },\n  components: {\n    ClientInformationVerisign: ClientInformationVerisign\n  }\n});\n\nwindow.CallParent = () => {\n  location.reload();\n};\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/OrderFlowDomainVerisign.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowDomain_OrderFlowDomainVerisignvue_type_script_lang_js_ = (OrderFlowDomainVerisignvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/OrderFlowDomainVerisign.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderFlowDomainVerisign_component = normalizeComponent(\n  OrderFlowDomain_OrderFlowDomainVerisignvue_type_script_lang_js_,\n  OrderFlowDomainVerisignvue_type_template_id_8f6b84fa_render,\n  OrderFlowDomainVerisignvue_type_template_id_8f6b84fa_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const OrderFlowDomainVerisign = (OrderFlowDomainVerisign_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/CustomNotification.vue?vue&type=template&id=dbf5f200&scoped=true&\nvar CustomNotificationvue_type_template_id_dbf5f200_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"custom-notif\"},[_c('a',{staticClass:\"close-btn\",attrs:{\"href\":\"javascript:void(false)\"},on:{\"click\":_vm.closeNotification}},[_vm._v(\"X\")]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.notification_message))])])}\nvar CustomNotificationvue_type_template_id_dbf5f200_scoped_true_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/CustomNotification.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const CustomNotificationvue_type_script_lang_js_ = ({\n  name: \"CustomNotification\",\n  props: ['notification_message'],\n\n  data() {\n    return {};\n  },\n\n  methods: {\n    closeNotification() {\n      this.$emit('close-custom-notification');\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/CustomNotification.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_CustomNotificationvue_type_script_lang_js_ = (CustomNotificationvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/CustomNotification.vue?vue&type=style&index=0&id=dbf5f200&scoped=true&lang=css&\nvar CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_ = __webpack_require__(\"./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/CustomNotification.vue?vue&type=style&index=0&id=dbf5f200&scoped=true&lang=css&\");\n;// CONCATENATED MODULE: ./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/CustomNotification.vue?vue&type=style&index=0&id=dbf5f200&scoped=true&lang=css&\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_options = {};\n\nCustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_options.styleTagTransform = (styleTagTransform_default());\nCustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nCustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_options.domAPI = (styleDomAPI_default());\nCustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_options.insertStyleElement = (insertStyleElement_default());\n\nvar CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_update = injectStylesIntoStyleTag_default()(CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_/* default */.Z, CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_options);\n\n\n\n\n       /* harmony default export */ const components_CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_ = (CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_/* default */.Z && CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_/* default.locals */.Z.locals ? CustomNotificationvue_type_style_index_0_id_dbf5f200_scoped_true_lang_css_/* default.locals */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./resources/js/components/CustomNotification.vue?vue&type=style&index=0&id=dbf5f200&scoped=true&lang=css&\n\n;// CONCATENATED MODULE: ./resources/js/components/CustomNotification.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar CustomNotification_component = normalizeComponent(\n  components_CustomNotificationvue_type_script_lang_js_,\n  CustomNotificationvue_type_template_id_dbf5f200_scoped_true_render,\n  CustomNotificationvue_type_template_id_dbf5f200_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"dbf5f200\",\n  null\n  \n)\n\n/* harmony default export */ const CustomNotification = (CustomNotification_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/HostingPlan.vue?vue&type=template&id=f908267a&scoped=true&\nvar HostingPlanvue_type_template_id_f908267a_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hosting-package\"},[_c('p',{staticClass:\"hosting-package__title\"},[_vm._v(\"Paket Hosting\")]),_vm._v(\" \"),_c('div',{staticClass:\"hosting-select\",class:{'select--disabled': _vm.tmp_cart.items.length}},[_c('div',{ref:\"select-plan\",staticClass:\"hosting-select__item\",class:{'hosting-select--show-option':_vm.show_hosting_plan_select_option},on:{\"click\":function($event){return _vm.showHideHostingPlanSelectOption()}}},[(_vm.flow === 'mailhosting')?_c('p',[_c('strong',[_vm._v(\"Paket \"+_vm._s(_vm.hosting.selected.plan.title))]),_vm._v(\" \"),_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" \"+_vm._s(_vm.getMailHostingSubtitle(_vm.hosting.selected.product_id)))])]):(_vm.is_wordpress_hosting)?_c('p',[_c('strong',[_vm._v(\"WP \"+_vm._s(_vm.hosting.selected.plan.title))]),_vm._v(\" \"),(_vm.hosting.selected.product_id == 24)?_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\")]):_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain\")])]):_c('p',[(_vm.isEasyWordpress())?_c('strong',[_vm._v(\"Paket \"+_vm._s(_vm.hosting.selected.plan.title))]):_c('strong',[_vm._v(\"Paket Hosting \"+_vm._s(_vm.hosting.selected.plan.title))]),_vm._v(\" \"),(_vm.hosting.selected.product_id == 24)?_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\")]):_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain\")])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_hosting_plan_select_option)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-plan'], handler: 'onClose'}),expression:\"{exclude: ['select-plan'], handler: 'onClose'}\"}],staticClass:\"hosting-select__option\"},[(_vm.flow === 'mailhosting')?_c('div',_vm._l((_vm.hosting.plans),function(plan){return _c('li',{key:plan.id,on:{\"click\":function($event){return _vm.chooseHostingPlan(plan)}}},[_c('strong',[_vm._v(\"Paket \"+_vm._s(plan.title))]),_vm._v(\" \"),_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" \"+_vm._s(_vm.getMailHostingSubtitle(plan.id)))])])}),0):(_vm.is_wordpress_hosting)?_c('div',_vm._l((_vm.hosting.plans),function(plan){return _c('li',{key:plan.id,on:{\"click\":function($event){return _vm.chooseHostingPlan(plan)}}},[_c('strong',[_vm._v(\"WP \"+_vm._s(plan.title))]),_vm._v(\" \"),(plan.id == 24)?_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\")]):_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain\")])])}),0):_c('div',_vm._l((_vm.hosting.plans),function(plan){return _c('li',{key:plan.id,on:{\"click\":function($event){return _vm.chooseHostingPlan(plan)}}},[(_vm.isEasyWordpress())?_c('strong',[_vm._v(\"Paket \"+_vm._s(plan.title))]):_c('strong',[_vm._v(\"Paket Hosting \"+_vm._s(plan.title))]),_vm._v(\" \"),(plan.id == 24)?_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\")]):_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain\")])])}),0)]):_vm._e()])],1),_vm._v(\" \"),(_vm.isEasyWordpress())?_c('div',[_c('h3',{staticClass:\"hosting-package__title mt-2\"},[_vm._v(\"Pilih Theme \"+_vm._s(_vm.hosting.selected.plan.title))]),_vm._v(\" \"),_c('div',{staticClass:\"row no-gutters align-items-end ml-0 mr-0\"},_vm._l((_vm.easywp_themes[parseInt(this.hosting.selected.product_id)]),function(item,index){return _c('div',{key:index,staticClass:\"col-lg-3 hosting-duration gtmHostingPlan mb-4\",on:{\"click\":function($event){_vm.easywp_selected_theme = item}}},[_c('div',{staticClass:\"hosting-duration__list easywp__theme\",class:{'easywp__theme--selected' : item.slug == _vm.easywp_selected_theme.slug}},[_c('div',{staticClass:\"hosting-duration__period easywp__theme-box\"},[_c('img',{staticClass:\"w-100\",attrs:{\"src\":item.image,\"alt\":\"duration\"}}),_vm._v(\" \"),_c('p',{staticClass:\"hosting-duration__period-price hosting-duration__period-price--bold hosting-duration--half\"},[_vm._v(_vm._s(item.name))]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                            Gratis\\n                        \")])])])])}),0)]):_vm._e(),_vm._v(\" \"),_c('h3',{staticClass:\"hosting-package__title mt-2\"},[_vm._v(\"Pilih Durasi Paket\")]),_vm._v(\" \"),_c('div',{staticClass:\"row no-gutters align-items-end ml-0 mr-0\",class:{'select--disabled': _vm.tmp_cart.items.length}},_vm._l((_vm.hosting.plan_period),function(periodPrice,x){return (periodPrice.enabled == 1)?_c('div',{key:x,staticClass:\"col-lg-3 hosting-duration gtmHostingPlan mb-4\",attrs:{\"data-product\":_vm.hosting.selected.plan.title,\"data-period\":x},on:{\"click\":function($event){return _vm.chooseHostingPeriod(x)}}},[_c('div',{staticClass:\"hosting-duration__list\",class:{'hosting-duration--selected':_vm.hosting.selected.period == x}},[(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__discount\",class:{'hosting-duration__discount--normal': _vm.discountPercent}},[_vm._v(\"\\n                    Diskon \"+_vm._s(_vm.discountPrice(periodPrice.discount_price, periodPrice.price))+\"%\\n                \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"hosting-duration__period\"},[_c('p',{staticClass:\"hosting-duration__period-year hosting-duration--half\"},[_vm._v(_vm._s(_vm.period[x].text))]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__period-price hosting-duration__period-price--light d-none d-lg-block\"},[_c('s',[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price)))])]):_vm._e(),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__period-price hosting-duration__period-price--bold hosting-duration--half\"},[_vm._v(\"\\n                        Rp \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price / _vm.period[x].num_of_month))+\"/bln\\n                    \")]):_c('p',{staticClass:\"hosting-duration__period-price hosting-duration__period-price--bold hosting-duration--half\"},[_vm._v(\"\\n                        Rp \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price / _vm.period[x].num_of_month))+\"/bln\\n                    \")]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                        Rp. \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price))+\"\\n                    \")]):_c('p',{staticClass:\"hosting-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                        Rp. \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price))+\"\\n                    \")])])])]):_vm._e()}),0)])}\nvar HostingPlanvue_type_template_id_f908267a_scoped_true_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/HostingPlan.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const OrderFlowHosting_HostingPlanvue_type_script_lang_js_ = ({\n  name: \"HostingPlan\",\n  props: ['hosting', 'flow', 'tmp_cart', 'is_wordpress_hosting'],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_hosting_plan_select_option: false,\n      easywp_themes: {\n        92: [{\n          slug: 'astra',\n          name: 'Blog Theme',\n          image: 'https://niagaspace.sgp1.cdn.digitaloceanspaces.com/easywp/blog-theme-1641283423.png'\n        }],\n        93: [{\n          slug: 'astra',\n          name: 'Compro Theme',\n          image: 'https://niagaspace.sgp1.cdn.digitaloceanspaces.com/easywp/compro-theme-1641283533.png'\n        }],\n        94: [{\n          slug: 'astra',\n          name: 'E-Commerce Theme',\n          image: 'https://niagaspace.sgp1.cdn.digitaloceanspaces.com/easywp/ecommerce-theme-1641283607.png'\n        }]\n      },\n      easywp_selected_theme: {}\n    };\n  },\n  computed: {\n    discountPercent() {\n      if (js_CommonMethods/* default.checkUrlPath */.Z.checkUrlPath('ordercloudhost')) {\n        return true;\n      }\n    }\n\n  },\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  methods: {\n    showHideHostingPlanSelectOption() {\n      this.show_hosting_plan_select_option = !this.show_hosting_plan_select_option;\n    },\n\n    chooseHostingPlan(plan) {\n      this.hosting.plan_period = plan.pricing.recurrent;\n      this.hosting.selected.product_id = plan.id;\n      this.hosting.selected.plan = plan;\n      this.hosting.selected.period = '1Y';\n      this.showHideHostingPlanSelectOption();\n      this.$emit('update-hosting-plan', this.hosting);\n\n      if (this.isEasyWordpress()) {\n        this.easywp_selected_theme = this.easywp_themes[plan.id][0];\n      }\n\n      if (js_CommonMethods/* default.checkUrlPath */.Z.checkUrlPath('orderhosting')) {\n        Gtm.trackingClickCTA('Click CTA', 'OrderHosting_ChooseHosting_' + plan.title);\n      }\n    },\n\n    chooseHostingPeriod(period) {\n      this.hosting.selected.period = period;\n      this.$emit('update-hosting-plan', this.hosting);\n\n      if (js_CommonMethods/* default.checkUrlPath */.Z.checkUrlPath('orderhosting')) {\n        Gtm.trackingClickCTA('Click CTA', 'OrderHosting_ChooseHostingPeriod_' + period);\n      }\n\n      if (js_CommonMethods/* default.checkUrlPath */.Z.checkUrlPath('ordercloudhost')) {\n        const title = this.hosting.selected.plan.title;\n        Gtm.trackingClickCTA('Click CTA', 'OrderHosting_ChooseHosting_' + title + '_Period_' + period);\n      }\n    },\n\n    onClose() {\n      this.show_hosting_plan_select_option = false;\n    },\n\n    setHostingPlanByPath() {\n      let path = window.location.pathname;\n\n      if (path.includes(\"v2\")) {\n        path = path.slice(1);\n      }\n\n      path = path.split(\"/\");\n\n      if (path.length == 3) {\n        let productId = path[2];\n        this.hosting.plans.forEach(plan => {\n          if (plan.id == productId) {\n            this.chooseHostingPlan(plan);\n            this.show_hosting_plan_select_option = false;\n            setTimeout(() => {\n              bus.$emit('virtual-page-view', 'package-selection');\n            }, 500);\n            return;\n          }\n        });\n        const urlParams = new URLSearchParams(window.location.search);\n        let period = urlParams.get('period') ? urlParams.get('period') : \"1Y\";\n        this.chooseHostingPeriod(period);\n      }\n    },\n\n    discountPrice(discount, price) {\n      let discountPrice;\n      discountPrice = Math.round((1 - discount / price) * 100);\n      return discountPrice;\n    },\n\n    getMailHostingSubtitle(id) {\n      let subtitle = {\n        53: '25',\n        54: '50',\n        55: '100',\n        130: '200'\n      };\n      return subtitle[id] + ' GB Disk Space, Akun Email Unlimited';\n    },\n\n    isEasyWordpress() {\n      return [92, 93, 94].includes(parseInt(this.hosting.selected.product_id));\n    }\n\n  },\n  mounted: function () {\n    this.setHostingPlanByPath();\n\n    if (this.isEasyWordpress()) {\n      this.easywp_selected_theme = this.easywp_themes[parseInt(this.hosting.selected.product_id)][0];\n    }\n  },\n  watch: {\n    easywp_selected_theme: function (val) {\n      bus.$emit('easywp-selected-theme', val);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/HostingPlan.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_OrderFlowHosting_HostingPlanvue_type_script_lang_js_ = (OrderFlowHosting_HostingPlanvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/HostingPlan.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderFlowHosting_HostingPlan_component = normalizeComponent(\n  components_OrderFlowHosting_HostingPlanvue_type_script_lang_js_,\n  HostingPlanvue_type_template_id_f908267a_scoped_true_render,\n  HostingPlanvue_type_template_id_f908267a_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"f908267a\",\n  null\n  \n)\n\n/* harmony default export */ const OrderFlowHosting_HostingPlan = (OrderFlowHosting_HostingPlan_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewPaymentMethod.vue?vue&type=template&id=8761e984&scoped=true&\nvar NewPaymentMethodvue_type_template_id_8761e984_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"payment-method gtmPayments\"},[_c('h3',{staticClass:\"payment-method__title\"},[_vm._v(\"Pilih Metode Pembayaran\")]),_vm._v(\" \"),(_vm.client && _vm.client_balance > 0)?_c('div',{staticClass:\"payment-method__balance mb-5\"},[_c('div',{staticClass:\"payment-method__balance-container\"},[_c('div',{staticClass:\"payment-method__balance-container-title\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"payment-method__balance-container-title-text\"},[_vm._v(\"\\n          Anda memiliki saldo sebesar Rp. \"+_vm._s(_vm.formatPrice(_vm.client_balance))+\"\\n        \")])]),_vm._v(\" \"),_c('div',{staticClass:\"payment-method__balance-container-description\"},[_vm._v(\"\\n        Klik informasi berikut jika Anda ingin membayar seluruh transaksi menggunakan saldo Anda.\\n      \")]),_vm._v(\" \"),_c('div',{staticClass:\"payment-method__balance-container-apply\"},[_c('div',{staticClass:\"payment-method__balance-container-apply-checklist\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.use_balance),expression:\"use_balance\"}],staticClass:\"orderflow-custom-checkbox orderflow-custom-checkbox--regular\",attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.use_balance)?_vm._i(_vm.use_balance,null)>-1:(_vm.use_balance)},on:{\"click\":function($event){return _vm.useBalance()},\"change\":function($event){var $$a=_vm.use_balance,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.use_balance=$$a.concat([$$v]))}else{$$i>-1&&(_vm.use_balance=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.use_balance=$$c}}}}),_vm._v(\" \"),_c('label')]),_vm._v(\" \"),_vm._m(1)])])]):_vm._e(),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.tab.pembayaranOtomatis)?_c('div',{staticClass:\"payment-method__pembayaran-otomatis\"},[_c('p',{staticClass:\"payment-method__note\",staticStyle:{\"display\":\"none\"}},[_vm._v(\"Tidak ingin menunggu? Gunakan pilihan Konfirmasi Pembayaran Otomatis, aktivasi cepat tanpa perlu mengunggah bukti bayar. Selesaikan pembayaran dan layanan siap Anda gunakan hanya dalam waktu beberapa menit!\")]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_vm._l((_vm.paymentMethods),function(pm){return _c('div',{key:pm.id,staticClass:\"col-lg-3\"},[_c('div',{staticClass:\"payment-method__card gtmPayment\",class:[\n              _vm.gateway_id == pm.id && ! _vm.highlight_payment ? 'selected' : '',\n              _vm.isPaymentShowedWithTooltip(pm.code) ? 'payment-method--with-tooltip' : '',\n              ! _vm.enable_payment_methods ? 'payment-method__card--disabled' : ''\n            ],attrs:{\"data-type\":\"auto\",\"data-title\":pm.title},on:{\"click\":function($event){return _vm.choosePaymentMethod(pm.id)}}},[(pm.code === 'Qris')?_c('div',{staticClass:\"payment-method__tooltip payment-method__tooltip--dark\"},[_c('label',[_vm._v(\"Informasi Penting\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                Gunakan QRIS untuk transaksi cepat dan mudah. Scan QR Code unik Niagahoster melalui platform pembayaran berikut ini!\\n                \"),_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":'/assets/images/payment-gateway/qris-tooltip-icon-hover-2-1641803242.svg',\"alt\":\"tooltip\"}})])]):_vm._e(),_vm._v(\" \"),(pm.code.toLowerCase().includes('paypal'))?_c('div',{staticClass:\"payment-method__tooltip payment-method__tooltip--dark\",staticStyle:{\"top\":\"-198px\"}},[_c('label',[_vm._v(\"Informasi Penting\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                Pembayaran menggunakan PayPal akan dikenakan biaya tambahan sebesar \"),_c('strong',[_vm._v(\"4,2% dari total transaksi\")]),_vm._v(\", ditambah \"),_c('strong',[_vm._v(\"US$ 0,30\")])])]):_vm._e(),_vm._v(\" \"),(pm.code.toLowerCase().includes('koinworks'))?_c('div',{staticClass:\"payment-method__tooltip payment-method__tooltip--dark\",staticStyle:{\"top\":\"-222px\"}},[_c('label',[_vm._v(\"Informasi Penting\")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                Dapatkan \"),_c('strong',[_vm._v(\"tambahan diskon 10%\")]),_vm._v(\" menggunakan pembayaran KoinWorks Neo, serta \"),_c('strong',[_vm._v(\"cashback hingga Rp 500.000\")]),_vm._v(\" pada platform \"),_c('strong',[_vm._v(\"KoinWorks Neo\")]),_vm._v(\".\\n              \")])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"payment-method__gateway\",class:pm.code === 'CreditCard' ? 'payment-method__gateway--cc-size' : ''},[_c('img',{staticClass:\"img-responsive\",attrs:{\"src\":'/assets/images/payment-gateway/' + pm.code + '.svg?ver=1.0.1',\"alt\":\"payment gateway\"}})]),_vm._v(\" \"),_c('p',{staticClass:\"payment-method__pembayaran-otomatis-title\"},[_vm._v(_vm._s(pm.title))])])])}),_vm._v(\" \"),_vm._l((_vm.highlightQrisPayments),function(item){return _c('div',{key:item.code,staticClass:\"col-lg-3\"},[_c('div',{staticClass:\"payment-method__card gtmPayment\",class:{'selected' : item.code == _vm.highlight_payment},attrs:{\"data-type\":\"auto\"},on:{\"click\":function($event){return _vm.choosePaymentMethodQrisHighlight(item.id, item.code)}}},[_c('div',{staticClass:\"payment-method__gateway\"},[_c('img',{staticClass:\"img-responsive\",attrs:{\"src\":'/assets/images/payment-gateway/' + item.code + '.svg?ver=1.0.1',\"alt\":\"payment gateway\"}})]),_vm._v(\" \"),_c('p',{staticClass:\"payment-method__pembayaran-otomatis-title\"},[_vm._v(_vm._s(item.code))])])])})],2)]):_vm._e()])],1)}\nvar NewPaymentMethodvue_type_template_id_8761e984_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"payment-method__balance-container-title-icon\"},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/payment-gateway/balance-wallet-icon.svg\",\"alt\":\"balance\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"payment-method__balance-container-apply-text\"},[_c('a',{attrs:{\"href\":\"https://www.niagahoster.co.id/kb/cara-melakukan-pembayaran-menggunakan-deposit\",\"target\":\"blank\"}},[_vm._v(\"\\n            Lakukan transaksi menggunakan saldo saya \"),_c('img',{staticClass:\"img-fluid ml-2\",attrs:{\"src\":\"/assets/images/payment-gateway/notification-blue.svg\",\"alt\":\"balance\"}})])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/NewPaymentMethod.vue?vue&type=template&id=8761e984&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewPaymentMethod.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const NewPaymentMethodvue_type_script_lang_js_ = ({\n  name: \"NewPaymentMethod\",\n  props: ['cart', 'client', 'gateway_id', 'payment_methods', 'highlight_payment'],\n\n  data() {\n    return {\n      tab: {\n        pembayaranOtomatis: true,\n        transferManual: false\n      },\n      rekening: {\n        bca: '0283116490',\n        mandiri: '1030006055954',\n        bri: '040901000395302',\n        bni: '3300030034'\n      },\n      use_balance: false,\n      client_balance: 0,\n      enable_payment_methods: true,\n      highlight_qris_payment: [{\n        code: 'ShopeePay',\n        id: 20\n      }, {\n        code: 'DANA',\n        id: 20\n      }, {\n        code: 'LinkAja',\n        id: 20\n      }],\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n\n  methods: {\n    useBalance() {\n      this.use_balance = !this.use_balance;\n\n      if (this.use_balance && this.client_balance >= this.cart.total * (1 + this.taxRate)) {\n        this.enable_payment_methods = false;\n        this.choosePaymentMethod(10);\n      } else {\n        this.enable_payment_methods = true;\n        this.choosePaymentMethod(19);\n      }\n\n      this.$emit('use-balance', this.use_balance);\n    },\n\n    getClientBalance() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/guest/get_client_balance').then(res => {\n        this.client_balance = res.data.result;\n        this.$emit('client-balance', this.client_balance);\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    selectTab(index) {\n      if (index === 1) {\n        this.tab.pembayaranOtomatis = true;\n        this.tab.transferManual = false;\n      } else {\n        this.tab.transferManual = true;\n        this.tab.pembayaranOtomatis = false;\n      }\n    },\n\n    choosePaymentMethod(id, customTrackingCode) {\n      this.gateway_id = id;\n      this.$emit('choose-payment-method', id);\n      this.$emit('highlight-payment-qris', '');\n\n      if (CommonVar.allow_mkt_script === 'false') {\n        return;\n      }\n\n      this.payment_methods.forEach(pm => {\n        if (pm.id == this.gateway_id) {\n          Gtm.gtmPaymentMethodTypes('PaymentPage_Button' + (customTrackingCode || pm.code) + '_Clicked');\n        }\n      });\n    },\n\n    choosePaymentMethodQrisHighlight(id, code) {\n      this.choosePaymentMethod(id, code);\n      this.$emit('highlight-payment-qris', code);\n    },\n\n    isPaymentShowedWithTooltip(code) {\n      const paymentCodeWithTooltip = ['qris', 'paypal', 'koinworks'];\n      const paymentCode = code.toLowerCase();\n\n      for (let idx = 0; idx < paymentCodeWithTooltip.length; idx++) {\n        if (paymentCode.includes(paymentCodeWithTooltip[idx])) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    }\n\n  },\n  computed: {\n    pembayaranOtomatisActive: function () {\n      return {\n        '': this.tab.pembayaranOtomatis === false,\n        'active': this.tab.pembayaranOtomatis\n      };\n    },\n    transferManualActive: function () {\n      return {\n        '': this.tab.transferManual === false,\n        'active': this.tab.transferManual\n      };\n    },\n\n    paymentMethods() {\n      let hidden = ['Custom', 'HpaymentsOvo', 'HpaymentsGoPay', 'HpaymentsAlfamart', 'HpaymentsBRIVA', 'HpaymentsCimbNiaga', 'HpaymentsMandiri', 'HpaymentsMayBank', 'HpaymentsBNIVA', 'HpaymentsPermataBank', 'HpaymentsRitel', 'HpaymentsQris', 'HpaymentsBCAVA', 'HpaymentsCreditCard', 'HpaymentsPayPal'];\n      return this.payment_methods.filter(pm => {\n        if (!(pm.id == 12 && this.cart.total * (1 + this.taxRate) > 500000) && !(pm.code === 'Qris' && this.cart.total * (1 + this.taxRate) > 2000000) && !hidden.includes(pm.code)) {\n          return pm;\n        }\n      });\n    },\n\n    highlightQrisPayments() {\n      return this.highlight_qris_payment.filter(hpm => {\n        if (this.cart.total * (1 + this.taxRate) <= 2000000) {\n          return hpm;\n        }\n      });\n    }\n\n  },\n  mounted: function () {\n    this.getClientBalance(); // For AB Test purpose\n\n    let flow = sessionStorage.getItem('flow') ? sessionStorage.getItem('flow') : 'hosting';\n    localStorage.setItem('ab-flow', flow);\n  },\n\n  created() {\n    this.getTaxRate();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/NewPaymentMethod.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_NewPaymentMethodvue_type_script_lang_js_ = (NewPaymentMethodvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/NewPaymentMethod.vue\n\n\n\n\n\n/* normalize component */\n;\nvar NewPaymentMethod_component = normalizeComponent(\n  components_NewPaymentMethodvue_type_script_lang_js_,\n  NewPaymentMethodvue_type_template_id_8761e984_scoped_true_render,\n  NewPaymentMethodvue_type_template_id_8761e984_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"8761e984\",\n  null\n  \n)\n\n/* harmony default export */ const NewPaymentMethod = (NewPaymentMethod_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewPaymentMethodV2.vue?vue&type=template&id=7b40173a&scoped=true&\nvar NewPaymentMethodV2vue_type_template_id_7b40173a_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"payment-method-v2 gtmPayments\"},[_c('h3',{staticClass:\"payment-method-v2__title\"},[_vm._v(\"Pilih Metode Pembayaran\")]),_vm._v(\" \"),_c('p',{staticClass:\"payment-method-v2__note\"},[_vm._v(\"Pilih salah satu dari metode pembayaran yang tersedia, kami merekomendasikan melalui \"),_c('strong',[_vm._v(\"Transfer Virtual Account\")]),(_vm.paymentGroups.includes(1))?_c('span',[_vm._v(\" dan \"),_c('strong',[_vm._v(\"QRIS\")])]):_vm._e(),_vm._v(\" untuk kemudahan transaksi\")]),_vm._v(\" \"),(_vm.client && _vm.client_balance > 0)?_c('div',{staticClass:\"payment-method-v2__balance\"},[_c('div',{staticClass:\"payment-method-v2__balance-container\",class:{ 'payment-method-v2__balance-container--use-balance' : this.use_balance }},[_c('div',{staticClass:\"payment-method-v2__balance-container-title\"},[_c('div',{staticClass:\"payment-method-v2__balance-container-title-text\"},[_vm._v(\"\\n          Saldo Deposit: Rp \"+_vm._s(_vm.formatPrice(_vm.client_balance))+\"\\n        \")])]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"payment-method-v2__balance-container-apply\"},[_c('div',{staticClass:\"payment-method-v2__balance-container-apply-checklist\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.use_balance),expression:\"use_balance\"}],staticClass:\"orderflow-custom-checkbox orderflow-custom-checkbox--regular\",attrs:{\"name\":\"use-balance\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.use_balance)?_vm._i(_vm.use_balance,null)>-1:(_vm.use_balance)},on:{\"click\":function($event){return _vm.useBalance()},\"change\":function($event){var $$a=_vm.use_balance,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.use_balance=$$a.concat([$$v]))}else{$$i>-1&&(_vm.use_balance=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.use_balance=$$c}}}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"use-balance\"}},[_vm._v(\"Gunakan saldo deposit\")])])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"payment-method-v2__pembayaran\"},_vm._l((_vm.paymentGroups),function(pg){return _c('div',{key:pg.id,staticClass:\"payment-method-v2__group\",class:[{'payment-method-v2__group--expanded' : pg.list_expand}, (\"payment-group--\" + (pg.id))]},[_c('div',{staticClass:\"payment-method-v2__group-head d-flex justify-content-between flex-column\",class:{\n          'selected' : (! pg.list_view && pg.payment_ids[0] == _vm.gateway_id && ! _vm.highlight_payment),\n          'payment-method-v2__group-head--expanded' : pg.list_expand,\n          'payment-method-v2__group-head--disabled' : ! _vm.enable_payment_methods\n        },on:{\"click\":function($event){return _vm.clickPaymentGroup(pg.id)}}},[_c('div',{staticClass:\"d-flex justify-content-between\"},[_c('div',{staticClass:\"d-flex justify-content-start flex-wrap\"},[_c('div',{staticClass:\"payment-method-v2__group-head-title\"},[_vm._v(_vm._s(pg.title))]),_vm._v(\" \"),_vm._l((pg.badges),function(badge,idx){return _c('div',{key:idx,staticClass:\"payment-method-v2__group-head-recommended\"},[_c('strong',[_c('i',{class:{ 'payment-method-v2__icon-star' : badge == 'Recommended', 'payment-method-v2__icon-check' : badge == 'New' || badge == 'Promo' }}),_vm._v(\" \"+_vm._s(badge))])])})],2),_vm._v(\" \"),(! pg.list_view)?_c('i',{class:{'payment-method-v2__icon-checklist' : (pg.payment_ids[0] == _vm.gateway_id && ! _vm.highlight_payment)}}):_c('i',{class:[pg.list_expand ? 'payment-method-v2__icon-caret-up' : 'payment-method-v2__icon-caret-down']})]),_vm._v(\" \"),(pg.description_expand || pg.description_expand_force)?_c('div',[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[((! pg.list_expand && pg.description_hide_expand) || ! pg.description_hide_expand)?_c('div',[(pg.description.length > 0)?_c('div',{staticClass:\"payment-method-v2__group-head-description\",class:{ 'mb-4' : (pg.description_icons.length == 0) },domProps:{\"innerHTML\":_vm._s(pg.description)}}):_vm._e(),_vm._v(\" \"),(pg.description_icons.length > 0)?_c('div',{staticClass:\"payment-method-v2__wrap-icon d-flex align-content-start flex-wrap mt-5\"},_vm._l((pg.description_icons),function(icon,idx){return _c('div',{key:idx,staticClass:\"payment-method-v2__group-payment-icon payment-method-v2__group-payment-icon--no-border\"},[_c('img',{attrs:{\"src\":'/assets/images/payment-gateway/' + icon + '.svg?ver=1.0.1',\"alt\":icon,\"loading\":\"lazy\"}})])}),0):_vm._e()]):_vm._e()])],1):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"accordion\"},on:{\"before-enter\":_vm.accordionBeforeEnter,\"enter\":_vm.accordionEnter,\"before-leave\":_vm.accordionBeforeLeave,\"leave\":_vm.accordionLeave}},[(pg.list_view && pg.list_expand)?_c('div',{staticClass:\"payment-method-v2__group-list\"},[_vm._l((_vm.groupPaymentMethods(pg.payment_codes)),function(pm){return _c('div',{key:pm.id,staticClass:\"payment-method-v2__group-list-child\"},[_c('div',{staticClass:\"payment-method-v2__group-list-child-payment gtmPayment\",class:[\n              _vm.gateway_id == pm.id && ! _vm.highlight_payment ? 'selected' : '',\n              ! _vm.enable_payment_methods ? 'payment-method-v2__group-list-child-payment--disabled' : ''\n            ],attrs:{\"data-type\":\"auto\",\"data-title\":pm.title},on:{\"click\":function($event){return _vm.choosePaymentMethod(pm.id)}}},[_c('div',{staticClass:\"d-flex justify-content-start\"},[_c('div',{staticClass:\"payment-method-v2__group-payment-icon mb-0\"},[_c('img',{attrs:{\"src\":'/assets/images/payment-gateway/' + pm.code + '.svg?ver=1.0.1',\"alt\":pm.code,\"loading\":\"lazy\"}})]),_vm._v(\" \"),_c('p',{staticClass:\"payment-method-v2__group-list-child-payment-title\"},[_vm._v(_vm._s(pm.title))])]),_vm._v(\" \"),_c('i',{class:{ 'payment-method-v2__icon-checklist' : (_vm.gateway_id == pm.id && ! _vm.highlight_payment) }})])])}),_vm._v(\" \"),(pg.id == 4 && _vm.highlightQrisPayments.length > 0)?_c('div',_vm._l((_vm.highlightQrisPayments),function(item){return _c('div',{key:item.code,staticClass:\"payment-method-v2__group-list-child\"},[_c('div',{staticClass:\"payment-method-v2__group-list-child-payment gtmPayment\",class:{'selected' : item.code == _vm.highlight_payment, 'payment-method-v2__group-list-child-payment--disabled' : ! _vm.enable_payment_methods},attrs:{\"data-type\":\"auto\"},on:{\"click\":function($event){return _vm.choosePaymentMethodQrisHighlight(item.id, item.code)}}},[_c('div',{staticClass:\"d-flex justify-content-start\"},[_c('div',{staticClass:\"payment-method-v2__group-payment-icon mb-0\"},[_c('img',{attrs:{\"src\":'/assets/images/payment-gateway/' + item.code + '.svg?ver=1.0.1',\"alt\":item.code,\"loading\":\"lazy\"}})]),_vm._v(\" \"),_c('p',{staticClass:\"payment-method-v2__group-list-child-payment-title\"},[_vm._v(_vm._s(item.code))])]),_vm._v(\" \"),_c('i',{class:{ 'payment-method-v2__icon-checklist' : (item.code == _vm.highlight_payment) }})])])}),0):(pg.id == 3)?_c('div',_vm._l((_vm.highlight_manual_payments),function(item){return _c('div',{key:item.name,staticClass:\"payment-method-v2__group-list-child\"},[_c('div',{staticClass:\"payment-method-v2__group-list-child-payment gtmPayment\",class:[\n              _vm.gateway_id == item.id && _vm.selected_manual_payment.name == item.name && ! _vm.highlight_payment ? 'selected' : '',\n              ! _vm.enable_payment_methods ? 'payment-method-v2__group-list-child-payment--disabled' : ''\n            ],attrs:{\"data-type\":\"auto\"},on:{\"click\":function($event){return _vm.choosePaymentMethodManual(item)}}},[_c('div',{staticClass:\"d-flex justify-content-start\"},[_c('div',{staticClass:\"payment-method-v2__group-payment-icon mb-0\"},[_c('img',{attrs:{\"src\":'/assets/images/payment-gateway/' + item.icon + '.svg?ver=1.0.1',\"alt\":item.icon,\"loading\":\"lazy\"}})]),_vm._v(\" \"),_c('p',{staticClass:\"payment-method-v2__group-list-child-payment-title\"},[_vm._v(_vm._s(item.name))])]),_vm._v(\" \"),_c('i',{class:{ 'payment-method-v2__icon-checklist' : (_vm.gateway_id == item.id && _vm.selected_manual_payment.name == item.name && ! _vm.highlight_payment) }})])])}),0):_vm._e()],2):_vm._e()])],1)}),0)])}\nvar NewPaymentMethodV2vue_type_template_id_7b40173a_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"payment-method-v2__balance-container-description\"},[_vm._v(\"\\n        Saldo deposit Niagahoster merupakan saldo yang terkumpul dari kelebihan pembayaran layanan ke Niagahoster. Saldo deposit dapat Anda gunakan untuk \"),_c('strong',[_vm._v(\"memotong\")]),_vm._v(\" atau \"),_c('strong',[_vm._v(\"membayar penuh total tagihan\")]),_vm._v(\" layanan pada Niagahoster.\\n      \")])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/NewPaymentMethodV2.vue?vue&type=template&id=7b40173a&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewPaymentMethodV2.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const NewPaymentMethodV2vue_type_script_lang_js_ = ({\n  name: \"NewPaymentMethodV2\",\n  props: ['cart', 'client', 'gateway_id', 'payment_methods', 'highlight_payment'],\n\n  data() {\n    return {\n      use_balance: false,\n      client_balance: 0,\n      enable_payment_methods: true,\n      highlight_qris_payment: [{\n        code: 'ShopeePay',\n        id: 20\n      }, {\n        code: 'DANA',\n        id: 20\n      }, {\n        code: 'LinkAja',\n        id: 20\n      }],\n      highlight_manual_payments: [{\n        name: 'BCA',\n        icon: 'BCAVA',\n        id: 1\n      }, {\n        name: 'Mandiri',\n        icon: 'MandiriVA',\n        id: 1\n      }, {\n        name: 'BRI',\n        icon: 'BRIVA',\n        id: 1\n      }, {\n        name: 'BNI',\n        icon: 'BNIVA',\n        id: 1\n      }],\n      selected_manual_payment: {\n        name: '',\n        icon: '',\n        id: null\n      },\n      payment_group_id: 1,\n      payment_groups: [{\n        id: 1,\n        title: 'Transfer Virtual Account (Pengecekan Otomatis)',\n        description: '',\n        description_icons: ['BCAVA', 'MandiriVA', 'BRI', 'BNIVA', 'ATM', 'CimbNiaga', 'MayBank'],\n        description_expand: true,\n        description_expand_force: true,\n        description_hide_expand: true,\n        badges: ['Recommended'],\n        payment_ids: [],\n        payment_codes: ['BCAVA', 'MandiriVA', 'BRIVA', 'BNIVA', 'CimbNiaga', 'MayBank', 'ATM'],\n        list_view: true,\n        list_expand: true,\n        tracking_name: 'VA'\n      }, {\n        id: 2,\n        title: 'QRIS',\n        description: 'Layanan QRIS bisa digunakan untuk semua Bank, eWallet, maupun provider pembayaran lain yang memiliki fitur Scan QRIS. <a href=\"https://paydia.id/merchant/\" target=\"_blank\" rel=\"noreferrer noopener\">Klik disini untuk lihat semua provider yang memiliki fitur tersebut</a>',\n        description_icons: ['Jenius', 'BSI', 'Mega', 'BankDKI', 'UOB', 'BPDDIY', 'Muamalat', 'BTN', 'Jago', 'OctoMobile', 'BPDBali', 'Nobu', 'CommonwealthBank', '20MoreBank'],\n        description_expand: true,\n        description_expand_force: true,\n        description_hide_expand: false,\n        badges: ['Recommended'],\n        payment_ids: [],\n        payment_codes: ['Qris'],\n        list_view: false,\n        list_expand: false,\n        tracking_name: 'QRIS'\n      }, {\n        id: 3,\n        title: 'KoinWorks NEO',\n        description: 'Dapatkan tambahan diskon 10% menggunakan pembayaran KoinWorks Neo, serta cashback hingga 500rb pada platform KoinWorks Neo. <a href=\"https://www.niagahoster.co.id/blog/promo-cash-back-koinworks/\" target=\"_blank\" rel=\"noreferrer noopener\">Lihat Syarat & Ketentuan</a>',\n        description_icons: ['HpaymentsKoinWorks'],\n        description_expand: true,\n        description_expand_force: true,\n        description_hide_expand: false,\n        badges: ['New', 'Promo'],\n        payment_ids: [],\n        payment_codes: ['HpaymentsKoinWorks'],\n        list_view: false,\n        list_expand: false,\n        tracking_name: 'KoinWorks'\n      }, {\n        id: 4,\n        title: 'eWallet',\n        description: '',\n        description_icons: ['GoPay', 'Ovo', 'LinkAja2', 'DANA', 'ShopeePay'],\n        description_expand: true,\n        description_expand_force: true,\n        description_hide_expand: true,\n        badges: [],\n        payment_ids: [],\n        payment_codes: ['GoPay', 'Ovo'],\n        list_view: true,\n        list_expand: false,\n        tracking_name: 'EWallet'\n      }, {\n        id: 5,\n        title: 'Tunai di Gerai Retail',\n        description: '',\n        description_icons: ['Indomaret', 'Alfamidi', 'AlfaMart', 'DANDAN', 'Lawson', 'PosIndonesia', 'Pegadaian'],\n        description_expand: true,\n        description_expand_force: true,\n        description_hide_expand: true,\n        badges: [],\n        payment_ids: [],\n        payment_codes: ['Alfamart', 'HpaymentsIndomaret', 'RetailDuitKu'],\n        list_view: true,\n        list_expand: false,\n        tracking_name: 'Retail'\n      }, {\n        id: 6,\n        title: 'Kartu Kredit',\n        description: '',\n        description_icons: ['Visa', 'MasterCard', 'JCB'],\n        description_expand: true,\n        description_expand_force: true,\n        description_hide_expand: false,\n        badge: [],\n        payment_ids: [],\n        payment_codes: ['CreditCard'],\n        list_view: false,\n        list_expand: false,\n        tracking_name: 'CreditCard'\n      }, {\n        id: 7,\n        title: 'PayPal',\n        description: 'Pembayaran menggunakan PayPal akan dikenakan biaya tambahan sebesar 4,2% dari total transaksi, ditambah US$ 0,30',\n        description_icons: ['PayPalEmail'],\n        description_expand: true,\n        description_expand_force: true,\n        description_hide_expand: false,\n        badges: [],\n        payment_ids: [],\n        payment_codes: ['PayPalEmail'],\n        list_view: false,\n        list_expand: false,\n        tracking_name: 'PayPalEmail'\n      }],\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n\n  methods: {\n    useBalance() {\n      this.use_balance = !this.use_balance;\n\n      if (this.use_balance && this.client_balance >= this.cart.total * (1 + this.taxRate)) {\n        this.enable_payment_methods = false;\n        this.choosePaymentMethod(10);\n      } else {\n        this.enable_payment_methods = true;\n        this.clickPaymentGroup(1);\n        this.choosePaymentMethod(19);\n      }\n\n      this.$emit('use-balance', this.use_balance);\n    },\n\n    getClientBalance() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/guest/get_client_balance').then(res => {\n        this.client_balance = res.data.result;\n        this.$emit('client-balance', this.client_balance);\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    clickPaymentGroup(groupId) {\n      let paymentGroup = this.payment_groups[groupId - 1];\n      this.closePaymentGroup(this.payment_group_id);\n\n      if (groupId == this.payment_group_id && paymentGroup.list_view) {\n        this.payment_group_id = null;\n        return;\n      }\n\n      if (!paymentGroup.list_view) {\n        this.choosePaymentMethod(paymentGroup.payment_ids[0]);\n      } else {\n        paymentGroup.description_expand = true;\n        paymentGroup.list_expand = true;\n        Gtm.gtmPaymentMethodTypes('PaymentPage_Category' + paymentGroup.tracking_name + '_Clicked');\n      }\n\n      this.payment_group_id = groupId;\n      setTimeout(() => {\n        this.scrollToElement(groupId);\n      }, 200);\n    },\n\n    closePaymentGroup(groupId) {\n      if (this.payment_group_id == null) {\n        return;\n      }\n\n      let paymentGroup = this.payment_groups[groupId - 1];\n\n      if (!paymentGroup.description_expand_force && paymentGroup.list_view || groupId == this.payment_group_id) {\n        paymentGroup.description_expand = false;\n        paymentGroup.list_expand = false;\n      }\n    },\n\n    choosePaymentMethod(id, customTrackingCode) {\n      this.gateway_id = id;\n      this.$emit('choose-payment-method', id);\n      this.$emit('highlight-payment-qris', '');\n\n      if (id != 1) {\n        this.selected_manual_payment = {\n          name: '',\n          icon: '',\n          id: null\n        };\n      }\n\n      if (CommonVar.allow_mkt_script === 'false') {\n        return;\n      }\n\n      this.payment_methods.forEach(pm => {\n        if (pm.id == this.gateway_id) {\n          Gtm.gtmPaymentMethodTypes('PaymentPage_Button' + (customTrackingCode || pm.code) + '_Clicked');\n        }\n      });\n    },\n\n    choosePaymentMethodQrisHighlight(id, code) {\n      this.choosePaymentMethod(id, code);\n      this.$emit('highlight-payment-qris', code);\n    },\n\n    choosePaymentMethodManual(highlightManualPayment) {\n      this.selected_manual_payment = highlightManualPayment;\n      this.choosePaymentMethod(highlightManualPayment.id, highlightManualPayment.name);\n    },\n\n    groupPaymentMethods(paymentCodes) {\n      return this.paymentMethods.filter(pm => paymentCodes.includes(pm.code));\n    },\n\n    initGroupPaymentIds() {\n      this.payment_groups.forEach((pg, pgIdx) => {\n        pg.payment_ids = [];\n        this.payment_methods.forEach(pm => {\n          if (pg.payment_codes.includes(pm.code)) {\n            pg.payment_ids.push(parseInt(pm.id));\n          }\n        });\n      });\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    accordionBeforeEnter: function (el) {\n      el.style.height = '0';\n    },\n    accordionEnter: function (el) {\n      el.style.height = el.scrollHeight + 4 + 'px';\n    },\n    accordionBeforeLeave: function (el) {\n      el.style.height = el.scrollHeight + 'px';\n    },\n    accordionLeave: function (el) {\n      el.style.height = '0';\n    },\n\n    scrollToElement(id) {\n      const el = this.$el.getElementsByClassName('payment-group--' + id)[0];\n\n      if (el) {\n        el.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n          inline: 'center'\n        });\n      }\n    }\n\n  },\n  computed: {\n    paymentGroups() {\n      if (this.cart.total * (1 + this.taxRate) > 2000000) {\n        return this.payment_groups.filter(pg => {\n          if (!pg.payment_codes.includes('Qris')) {\n            return pg;\n          }\n        });\n      }\n\n      return this.payment_groups;\n    },\n\n    paymentMethods() {\n      let hidden = ['Custom', 'HpaymentsOvo', 'HpaymentsGoPay', 'HpaymentsAlfamart', 'HpaymentsBRIVA', 'HpaymentsCimbNiaga', 'HpaymentsMandiri', 'HpaymentsMayBank', 'HpaymentsBNIVA', 'HpaymentsPermataBank', 'HpaymentsRitel', 'HpaymentsQris', 'HpaymentsBCAVA', 'HpaymentsCreditCard', 'HpaymentsPayPal'];\n      return this.payment_methods.filter(pm => {\n        if (!(pm.id == 12 && this.cart.total * (1 + this.taxRate) > 500000) && !(pm.code === 'Qris' && this.cart.total * (1 + this.taxRate) > 2000000) && !hidden.includes(pm.code)) {\n          return pm;\n        }\n      });\n    },\n\n    highlightQrisPayments() {\n      return this.highlight_qris_payment.filter(hpm => {\n        if (this.cart.total * (1 + this.taxRate) <= 2000000) {\n          return hpm;\n        }\n      });\n    }\n\n  },\n  mounted: function () {\n    let flow = localStorage.getItem('ab-flow') ? localStorage.getItem('ab-flow') : sessionStorage.getItem('flow');\n    localStorage.removeItem('ab-flow');\n\n    if (flow) {\n      this.$emit('update-flow', flow);\n    }\n\n    this.getClientBalance();\n  },\n\n  created() {\n    this.getTaxRate();\n  },\n\n  beforeUpdate: function () {\n    this.initGroupPaymentIds();\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/NewPaymentMethodV2.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_NewPaymentMethodV2vue_type_script_lang_js_ = (NewPaymentMethodV2vue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/NewPaymentMethodV2.vue\n\n\n\n\n\n/* normalize component */\n;\nvar NewPaymentMethodV2_component = normalizeComponent(\n  components_NewPaymentMethodV2vue_type_script_lang_js_,\n  NewPaymentMethodV2vue_type_template_id_7b40173a_scoped_true_render,\n  NewPaymentMethodV2vue_type_template_id_7b40173a_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"7b40173a\",\n  null\n  \n)\n\n/* harmony default export */ const NewPaymentMethodV2 = (NewPaymentMethodV2_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewClientInformation.vue?vue&type=template&id=0c73eb36&scoped=true&\nvar NewClientInformationvue_type_template_id_0c73eb36_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('div',{class:{'profile-modal modal fade': _vm.popup_version},attrs:{\"id\":\"modalLogin\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"modalLoginLabel\",\"aria-hidden\":\"true\"}},[_c('div',{class:{'modal-dialog profile-modal__dialog profile-modal__dialog--tranform-0': _vm.popup_version}},[_c('div',{class:{'modal-content profile-modal__content': _vm.popup_version}},[_c('div',{staticClass:\"client-information\",attrs:{\"id\":\"client-information\"}},[(_vm.popup_version)?_c('button',{ref:\"modalLoginClose\",staticClass:\"close profile-modal__close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e(),_vm._v(\" \"),(! _vm.popup_version)?_c('h3',{staticClass:\"client-information__title\"},[_vm._v(\"Informasi Anda\")]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"client-information__warning\"},[_vm._v(\"Perhatian!\")]),_vm._v(\" \"),_c('p',{staticClass:\"client-information__note\"},[(! _vm.popup_version)?_c('span',[_vm._v(\"Anda \"),_c('strong',{staticClass:\"nunito--bold\"},[_vm._v(\"belum Login/Registrasi.\")]),_c('br')]):_vm._e(),_vm._v(\"\\n                    Silakan lakukan login/registrasi terlebih dahulu untuk melanjutkan pembayaran Anda.\\n                \")]),_vm._v(\" \"),_c('div',{staticClass:\"login-register\"},[_c('div',{staticClass:\"text-center\"},[_c('ul',{staticClass:\"orderflow-tab-menu orderflow-tab-menu--normal-size mb-5\"},[_c('li',{},[_c('a',{staticClass:\"nav-link\",class:_vm.loginTabActive,attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.selectTab(1)}}},[_vm._v(\"Masuk\")])]),_vm._v(\" \"),_c('li',{},[_c('a',{staticClass:\"nav-link\",class:_vm.registerTabActive,attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.selectTab(2)}}},[_vm._v(\"Daftar\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"client-information__tab-content\",on:{\"change\":_vm.userOnInputChange}},[(_vm.tab.login)?_c('div',{staticClass:\"content login\"},[_c('div',{staticClass:\"step1\"},[_c('div',{staticClass:\"sosmed-wrapper\"},[_c('button',{staticClass:\"sosmed-button sosmed-button--google\",attrs:{\"type\":\"button\",\"onclick\":\"Gtm.trackingClickCTA('CTA Click', 'Google_Login_Checkout_Clicked')\"},on:{\"click\":function($event){return _vm.sosmedLogin(_vm.sosmed.GOOGLE)}}},[_c('span',{staticClass:\"sosmed-button--google-text\"},[_vm._v(\"Login dengan Google\")])]),_vm._v(\" \"),_c('button',{staticClass:\"sosmed-button sosmed-button--facebook\",attrs:{\"href\":\"javascript(0);\",\"type\":\"button\",\"onclick\":\"Gtm.trackingClickCTA('CTA Click', 'Facebook_Login_Checkout_Clicked')\"},on:{\"click\":function($event){return _vm.sosmedLogin(_vm.sosmed.FACEBOOK)}}},[_c('span',{staticClass:\"sosmed-button--facebook-text\"},[_vm._v(\"Login dengan Facebook\")])])]),_vm._v(\" \"),_c('p',{staticClass:\"sosmed__persuasive mt-5\"},[_vm._v(\"Atau masuk  menggunakan email dan password\")]),_vm._v(\" \"),_c('div',{staticClass:\"item row mt-5\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"login-email\"}},[_vm._v(\"Email :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login.email),expression:\"login.email\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"login-email\",\"placeholder\":\"Email Anda\"},domProps:{\"value\":(_vm.login.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, \"email\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"login-password\"}},[_vm._v(\"Password :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login.password),expression:\"login.password\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"id\":\"login-password\",\"placeholder\":\"*****\"},domProps:{\"value\":(_vm.login.password)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.loginAndCheckout.apply(null, arguments)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, \"password\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.login.message)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.login.message)+\"!\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"step2\",staticStyle:{\"display\":\"none\"}},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"col-md-6 col-md-offset-3\"},[_c('label',{attrs:{\"for\":\"auth-code\"}},[_vm._v(\"Authentication Code\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.login['2fa_code']),expression:\"login['2fa_code']\"}],attrs:{\"type\":\"text\",\"id\":\"auth-code\",\"autofocus\":\"\"},domProps:{\"value\":(_vm.login['2fa_code'])},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.loginAndCheckout.apply(null, arguments)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.login, '2fa_code', $event.target.value)}}}),_vm._v(\" \"),(_vm.error_message.login.message)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.login.message)+\"!\")]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"item text-center\"},[_c('a',{staticClass:\"btn btn-success\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.loginAndCheckout()}}},[_vm._v(\"Verify\")])])])]):_vm._e(),_vm._v(\" \"),(_vm.tab.register)?_c('div',{staticClass:\"content register\"},[_c('div',{staticClass:\"sosmed-wrapper\"},[_c('button',{staticClass:\"sosmed-button sosmed-button--google\",attrs:{\"type\":\"button\",\"onclick\":\"Gtm.trackingClickCTA('CTA Click', 'Google_SignUp_Checkout_Clicked')\"},on:{\"click\":function($event){return _vm.sosmedLogin(_vm.sosmed.GOOGLE, true)}}},[_c('span',{staticClass:\"sosmed-button--google-text\"},[_vm._v(\"Daftar dengan Google\")])]),_vm._v(\" \"),_c('button',{staticClass:\"sosmed-button sosmed-button--facebook\",attrs:{\"href\":\"javascript(0);\",\"type\":\"button\",\"onclick\":\"Gtm.trackingClickCTA('CTA Click', 'Facebook_SignUp_Checkout_Clicked')\"},on:{\"click\":function($event){return _vm.sosmedLogin(_vm.sosmed.FACEBOOK, true)}}},[_c('span',{staticClass:\"sosmed-button--facebook-text\"},[_vm._v(\"Daftar dengan Facebook\")])])]),_vm._v(\" \"),_c('p',{staticClass:\"sosmed__persuasive mt-5\"},[_vm._v(\"Atau daftar melalui form berikut\")]),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"email\"}},[_vm._v(\"Email :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.email),expression:\"register.email\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"email\",\"placeholder\":\"Email\"},domProps:{\"value\":(_vm.register.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"email\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.email)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.email.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"reg_password\"}},[_vm._v(\"Password :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.password),expression:\"register.password\"}],staticClass:\"form-control\",attrs:{\"type\":\"password\",\"id\":\"reg_password\",\"placeholder\":\"*****\"},domProps:{\"value\":(_vm.register.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"password\", $event.target.value)}}}),_vm._v(\" \"),(_vm.show_check_password)?_c('div',{staticClass:\"check-password\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.min_char),expression:\"check_password.min_char\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"min-char\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.min_char)?_vm._i(_vm.check_password.min_char,null)>-1:(_vm.check_password.min_char)},on:{\"change\":function($event){var $$a=_vm.check_password.min_char,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"min_char\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"min_char\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"min_char\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Minimal 6 Karakter\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.no_space),expression:\"check_password.no_space\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"no-space\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.no_space)?_vm._i(_vm.check_password.no_space,null)>-1:(_vm.check_password.no_space)},on:{\"change\":function($event){var $$a=_vm.check_password.no_space,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"no_space\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"no_space\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"no_space\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Tidak menggunakan spasi\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.lowercase),expression:\"check_password.lowercase\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"lowercase\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.lowercase)?_vm._i(_vm.check_password.lowercase,null)>-1:(_vm.check_password.lowercase)},on:{\"change\":function($event){var $$a=_vm.check_password.lowercase,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"lowercase\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"lowercase\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"lowercase\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Lowercase\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.uppercase),expression:\"check_password.uppercase\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"uppercase\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.uppercase)?_vm._i(_vm.check_password.uppercase,null)>-1:(_vm.check_password.uppercase)},on:{\"change\":function($event){var $$a=_vm.check_password.uppercase,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"uppercase\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"uppercase\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"uppercase\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Uppercase\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.number),expression:\"check_password.number\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"number\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.number)?_vm._i(_vm.check_password.number,null)>-1:(_vm.check_password.number)},on:{\"change\":function($event){var $$a=_vm.check_password.number,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"number\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"number\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"number\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"},[_vm._v(\"Berisikan Angka\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12 check-item\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.check_password.special_char),expression:\"check_password.special_char\"}],staticClass:\"custom-checkbox\",attrs:{\"id\":\"special-char\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.check_password.special_char)?_vm._i(_vm.check_password.special_char,null)>-1:(_vm.check_password.special_char)},on:{\"change\":function($event){var $$a=_vm.check_password.special_char,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.check_password, \"special_char\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.check_password, \"special_char\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.check_password, \"special_char\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"custom-checkbox-label\"})])]):_vm._e()])]),_vm._v(\" \"),(_vm.error_message.register.password)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.password.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"name\"}},[_vm._v(\"Nama Lengkap :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.name),expression:\"register.name\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"name\",\"placeholder\":\"Nama Anda\"},domProps:{\"value\":(_vm.register.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"name\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.name)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.name.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"company_name\"}},[_vm._v(\"Nama Perusahaan :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.company),expression:\"register.company\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"company_name\",\"placeholder\":\"Nama Perusahaan\"},domProps:{\"value\":(_vm.register.company)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"company\", $event.target.value)}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"state\"}},[_vm._v(\"Provinsi :\")]),_vm._v(\" \"),_c('v-select',{staticClass:\"form-control\",attrs:{\"options\":_vm.list_province,\"clearable\":false,\"placeholder\":\"Pilih Provinsi\",\"id\":\"state\"},on:{\"input\":function($event){return _vm.setListCity()}},model:{value:(_vm.register.state),callback:function ($$v) {_vm.$set(_vm.register, \"state\", $$v)},expression:\"register.state\"}},[_c('div',{attrs:{\"slot\":\"no-options\"},slot:\"no-options\"},[_vm._v(\"Provinsi tidak tersedia\")])])],1)]),_vm._v(\" \"),(_vm.error_message.register.state)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.state.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"city\"}},[_vm._v(\"Kota :\")]),_vm._v(\" \"),_c('v-select',{staticClass:\"form-control\",attrs:{\"options\":_vm.list_city,\"clearable\":false,\"placeholder\":\"Pilih Kota/Kabupaten\",\"id\":\"city\"},model:{value:(_vm.register.city),callback:function ($$v) {_vm.$set(_vm.register, \"city\", $$v)},expression:\"register.city\"}},[_c('div',{attrs:{\"slot\":\"no-options\"},slot:\"no-options\"},[_vm._v(\"Kota/Kabupaten tidak tersedia\")])])],1)]),_vm._v(\" \"),(_vm.error_message.register.city)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.city.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"postal_code\"}},[_vm._v(\"Kode Pos :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.postcode),expression:\"register.postcode\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"postal_code\",\"placeholder\":\"Kode Pos\"},domProps:{\"value\":(_vm.register.postcode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"postcode\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.postcode)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.postcode.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"address-1\"}},[_vm._v(\"Alamat :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.address_1),expression:\"register.address_1\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"address-1\",\"placeholder\":\"Masukkan Jalan atau Gang, RT atau RW\",\"maxlength\":\"50\"},domProps:{\"value\":(_vm.register.address_1)},on:{\"keyup\":_vm.onAddressChange,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"address_1\", $event.target.value)}}}),_vm._v(\" \"),_c('div',{staticClass:\"form-text\",attrs:{\"id\":\"address-1-help\"}},[_c('span',{class:{'text-danger' : (_vm.validation.register.address_1.valid === false), 'text-success': _vm.validation.register.address_1.valid}},[_vm._v(_vm._s(_vm.validation.register.address_1.message))]),_vm._v(\" \"),_c('div',{staticClass:\"pull-right text-reset\",attrs:{\"id\":\"address-1-help-counter\"}},[_vm._v(_vm._s(_vm.register.address_1.length)+\"/50\")])])])]),_vm._v(\" \"),(_vm.error_message.register.address_1)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.address_1.error))]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"item row\"},[_c('div',{staticClass:\"form-group col-md-10 col-12\"},[_c('label',{attrs:{\"for\":\"phone\"}},[_vm._v(\"No. Telepon :\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.register.phone),expression:\"register.phone\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"phone\",\"placeholder\":\"No. Telepon\"},domProps:{\"value\":(_vm.register.phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.register, \"phone\", $event.target.value)}}})])]),_vm._v(\" \"),(_vm.error_message.register.phone)?_c('p',{staticClass:\"text text-danger\",staticStyle:{\"margin\":\"0 0 10px 0\"}},[_vm._v(_vm._s(_vm.error_message.register.phone.error))]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"row text-center\"},[_c('tos-text',{attrs:{\"device-class\":'summary-cart__tos-mobile'}}),_vm._v(\" \"),_c('div',{staticClass:\"col-12\"},[(_vm.tab.login)?_c('a',{staticClass:\"login client-information__button button-default\",class:{'button-white-orange': _vm.login.email, 'button-grey': !_vm.login.email},attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.loginAndCheckout()}}},[_vm._v(\"Login & Bayar\")]):_vm._e(),_vm._v(\" \"),(_vm.tab.register)?_c('a',{staticClass:\"register client-information__button button-default\",class:{'button-white-orange': _vm.register.email, 'button-grey': !_vm.register.email},attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.registerAndCheckout()}}},[_vm._v(\"Daftar & Bayar\")]):_vm._e()])],1)])])])])])}\nvar NewClientInformationvue_type_template_id_0c73eb36_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"item text-center\"},[_c('h4',[_vm._v(\"Two Factor Authentication\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h5',[_c('strong',[_vm._v(\"Password Harus Berisikan\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/NewClientInformation.vue?vue&type=template&id=0c73eb36&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/TosText.vue?vue&type=template&id=7d977d35&\nvar TosTextvue_type_template_id_7d977d35_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"summary-cart__tos\",class:_vm.deviceClass},[_vm._v(\"\\n    Dengan mengklik tombol \\\"Checkout Sekarang\\\" di bawah, berarti Anda setuju dengan\\n    \"),_c('a',{staticClass:\"agree\",attrs:{\"href\":\"https://www.niagahoster.co.id/syarat-dan-ketentuan\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Syarat dan Ketentuan\")])])}\nvar TosTextvue_type_template_id_7d977d35_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/TosText.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const TosTextvue_type_script_lang_js_ = ({\n  name: 'TosText',\n  props: ['deviceClass']\n});\n;// CONCATENATED MODULE: ./resources/js/components/TosText.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_TosTextvue_type_script_lang_js_ = (TosTextvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/TosText.vue\n\n\n\n\n\n/* normalize component */\n;\nvar TosText_component = normalizeComponent(\n  components_TosTextvue_type_script_lang_js_,\n  TosTextvue_type_template_id_7d977d35_render,\n  TosTextvue_type_template_id_7d977d35_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const TosText = (TosText_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewClientInformation.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const NewClientInformationvue_type_script_lang_js_ = ({\n  name: \"ClientInformation\",\n  props: ['list_state', 'province_city', 'facebook_endpoint', 'google_endpoint', 'show_modal_2fa', 'autocheckout', 'checkout_v3'],\n  components: {\n    TosText: TosText\n  },\n  data: function () {\n    return {\n      list_province: [],\n      list_city: [],\n      popup_version: false,\n      disable_autocheckout: false,\n      sosmed: {\n        GOOGLE: 'GOOGLE',\n        FACEBOOK: 'FACEBOOK'\n      },\n      tab: {\n        register: false,\n        login: true\n      },\n      client: false,\n      login: {\n        id: '',\n        email: '',\n        password: '',\n        '2fa_code': '',\n        step: 1,\n        checkout_by_login: true\n      },\n      register: {\n        id: '',\n        type: 'individual',\n        email: '',\n        password: '',\n        name: '',\n        company: '',\n        address_1: '',\n        city: '',\n        postcode: '',\n        state: '',\n        phone: ''\n      },\n      show_check_password: false,\n      check_password: {\n        min_char: false,\n        no_space: false,\n        lowercase: false,\n        uppercase: false,\n        number: false,\n        special_char: false\n      },\n      error_message: {\n        login: {},\n        register: {}\n      },\n      validation: {\n        register: {\n          address_1: {\n            valid: null,\n            message: \"Maksimal 50 karakter\",\n            message_default: \"Maksimal 50 karakter\",\n            message_success: \"Alamat sudah valid\",\n            regexps: [{\n              regexp: new RegExp(/^.{2,50}$/u),\n              message_error: \"Alamat harus memiliki maksimal 50 karakter dengan minimal 1 angka dan 1 huruf\"\n            }, {\n              regexp: new RegExp(/^(?=.*?[0-9])(?=.*?[^0-9 ]).{2,50}$/u),\n              message_error: \"Alamat harus memiliki minimal 1 angka dan 1 huruf\"\n            }, {\n              regexp: new RegExp(/^(?=.*?[0-9])(?=.*?[^0-9 ])(?!.*?[<>~°º!@#$%^&*+_=()|\\\\\\/'\"\\]\\[\\{\\}]).{2,50}$/u),\n              message_error: `Alamat tidak dapat memiliki karakter khusus berikut <>~°º!@#$%^&*+_=()|\\/'\"[]{}`\n            }]\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    selectTab(index) {\n      if (index === 1) {\n        this.tab.login = true;\n        this.tab.register = false;\n      } else {\n        this.tab.register = true;\n        this.tab.login = false;\n      }\n    },\n\n    initPasswordCheckerBoard() {\n      reg_password.addEventListener('focus', () => {\n        this.show_check_password = true;\n      });\n      reg_password.addEventListener('focusout', () => {\n        this.show_check_password = false;\n      });\n      reg_password.addEventListener(\"keyup\", () => {\n        /*Min Char*/\n        if (this.register.password.length >= 6) {\n          this.check_password.min_char = true;\n        } else {\n          this.check_password.min_char = false;\n        }\n        /*Check if ther is a space*/\n\n\n        let space = this.register.password.match(/\\s+/g);\n\n        if (Array.isArray(space) && space.length > 0) {\n          this.check_password.no_space = false;\n        } else {\n          this.check_password.no_space = true;\n        }\n        /*Check if has lowercase*/\n\n\n        let lowercase = this.register.password.match(/[a-z]/g);\n\n        if (Array.isArray(lowercase) && lowercase.length > 0) {\n          this.check_password.lowercase = true;\n        } else {\n          this.check_password.lowercase = false;\n        }\n        /*Check if has uppercase*/\n\n\n        let uppercase = this.register.password.match(/[A-Z]/g);\n\n        if (Array.isArray(uppercase) && uppercase.length > 0) {\n          this.check_password.uppercase = true;\n        } else {\n          this.check_password.uppercase = false;\n        }\n        /*Check if has number*/\n\n\n        let number = this.register.password.match(/[0-9]/g);\n\n        if (Array.isArray(number) && number.length > 0) {\n          this.check_password.number = true;\n        } else {\n          this.check_password.number = false;\n        }\n        /*Check if has at least 1 special characters*/\n\n\n        let special_character = this.register.password.match(/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/g);\n\n        if (Array.isArray(number) && special_character.length > 0) {\n          this.check_password.special_char = true;\n        } else {\n          this.check_password.special_char = false;\n        }\n      });\n    },\n\n    loginAndCheckout() {\n      if (!this.login.email || !this.login.password) {\n        return false;\n      }\n\n      bus.$emit('show-spinner', true);\n      this.loginClient(this.login).then(result => {\n        let data = result.data;\n\n        if (data.result) {\n          if (data.result.must_reset_password) {\n            window.location.href = CommonVar.bb_url + '/reset-password?email=' + data.result.email;\n          } else if (data.result.use_2fa) {\n            this.login.step = 2;\n            $('.step1').hide();\n            $('.step2').show();\n            bus.$emit('show-spinner', false);\n            return false;\n          }\n\n          this.login.id = data.result.id;\n          this.client = this.login;\n          this.$emit('set-client', this.client);\n          this.checkoutNow();\n          this.hideLoginButton();\n        } else {\n          if (data.error.code === 1) {\n            this.$root.$emit('set-coupon-status', {\n              result: false,\n              message: data.error.message,\n              error: true\n            });\n          } else {\n            this.error_message.login = data.error;\n          }\n\n          bus.$emit('show-spinner', false);\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    registerAndCheckout() {\n      bus.$emit('show-spinner', true);\n\n      if (this.register.company) {\n        this.register.type = 'company';\n      }\n\n      if (this.validation.register.address_1) {\n        this.validation.register.address_1.valid = null;\n        this.validation.register.address_1.message = this.validation.register.address_1.message_default;\n      }\n\n      axios.post('/api/guest/front_register', this.register).then(res => {\n        let result = res.data.result;\n\n        if (result.errors) {\n          this.error_message.register = result.errors;\n          bus.$emit('show-spinner', false);\n        } else if (result) {\n          this.register.id = result.client_id;\n          this.client = this.register;\n          this.$emit('set-client', this.client);\n          this.loginClient(this.register).then(result => {\n            if (result.data.result.id) {\n              this.checkoutNow(false);\n              this.hideLoginButton();\n            }\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    loginClient(params) {\n      let timeStamp = new Date().getTime();\n      return axios.post('/api/guest/front_login', params, {\n        headers: {\n          \"BB-Signature\": bb.signature(params, timeStamp),\n          \"Timestamp\": timeStamp\n        }\n      }).then(result => {\n        return result;\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    hideLoginButton() {\n      let clientNotLogin = document.getElementsByClassName('client-not-login');\n      let clientLogin = document.getElementsByClassName('client-login');\n      Array.from(clientNotLogin).forEach(function (element) {\n        element.style.display = \"none\";\n      });\n      Array.from(clientLogin).forEach(function (element) {\n        element.classList.remove('hide');\n        element.style.display = \"inline-block\";\n      });\n    },\n\n    checkoutNow(clearAffCookie = true) {\n      bus.$emit('show-spinner', false);\n\n      if (!this.disable_autocheckout) {\n        bus.$emit('checkout-now', clearAffCookie);\n      }\n\n      if (this.popup_version) {\n        if (this.$refs.modalLoginClose == undefined) {\n          location.reload();\n        }\n\n        this.$refs.modalLoginClose.click();\n      }\n    },\n\n    checkInputForm() {\n      if (this.tab.login && this.login.email && this.login.password || this.tab.register && this.register.email && this.register.password && this.register.phone) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    sosmedLogin(mode = 'GOOGLE', register = false) {\n      let checkout = 1;\n\n      if (this.disable_autocheckout) {\n        checkout = 0;\n      }\n\n      let params = new URLSearchParams({\n        'next': `${window.location.pathname}?onPage=1&autoCheckout=${checkout}`,\n        'twoFaPage': `${window.location.pathname}`,\n        'source': 'checkout_page'\n      });\n\n      if (mode == this.sosmed.GOOGLE) {\n        window.location.href = `${this.google_endpoint}?${params}`;\n      } else if (mode == this.sosmed.FACEBOOK) {\n        window.location.href = `${this.facebook_endpoint}?${params}`;\n      } else {\n        alert('Login method not supported');\n      }\n    },\n\n    showModal2Fa() {\n      if (this.show_modal_2fa) {\n        this.login.step = 2;\n        $('.step1').hide();\n        $('.step2').show();\n        bus.$emit('show-spinner', false);\n      }\n    },\n\n    onAddressChange() {\n      this.error_message.register.address_1 = null;\n      this.validation.register.address_1.valid = null;\n      this.validation.register.address_1.message = this.validation.register.address_1.message_default;\n      this.validation.register.address_1.regexps.every(rg => {\n        if (!this.register.address_1.match(rg.regexp)) {\n          this.validation.register.address_1.valid = false;\n          this.validation.register.address_1.message = rg.message_error;\n          return false;\n        }\n\n        this.validation.register.address_1.valid = true;\n        this.validation.register.address_1.message = this.validation.register.address_1.message_success;\n        return true;\n      });\n    },\n\n    setListProvince() {\n      let province = [];\n      Object.keys(this.province_city).forEach(function (index) {\n        province.push(index);\n      });\n      this.list_province = province.sort(function (a, b) {\n        return a.localeCompare(b);\n      });\n    },\n\n    setListCity() {\n      let listCity = this.province_city[this.register.state];\n      let city = [];\n      Object.keys(listCity).forEach(function (index) {\n        city.push(listCity[index].replace('.', ''));\n      });\n      this.list_city = city.sort(function (a, b) {\n        return a.localeCompare(b);\n      });\n    }\n\n  },\n  computed: {\n    registerTabActive: function () {\n      return this.tab.register ? 'active' : false;\n    },\n    loginTabActive: function () {\n      return this.tab.login ? 'active' : false;\n    },\n\n    userOnInputChange() {\n      if (this.checkInputForm()) {\n        return this.$root.$emit('user-input-change', true);\n      } else {\n        return this.$root.$emit('user-input-change', false);\n      }\n    }\n\n  },\n  mounted: function () {\n    if (this.checkout_v3 == 1) {\n      this.disable_autocheckout = true;\n      this.popup_version = true;\n    }\n\n    this.setListProvince();\n    window.dataLayer = window.dataLayer || [];\n    bus.$on('init-password-checker', () => {\n      this.initPasswordCheckerBoard();\n    });\n    setTimeout(() => {\n      bus.$on('login-register-checkout', () => {\n        if (this.tab.login) {\n          this.loginAndCheckout();\n        }\n\n        if (this.tab.register) {\n          this.registerAndCheckout();\n        }\n      });\n    }, 100);\n\n    if (this.autocheckout > 0) {\n      setTimeout(() => {\n        this.checkoutNow(false);\n      }, 1000);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/NewClientInformation.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_NewClientInformationvue_type_script_lang_js_ = (NewClientInformationvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/NewClientInformation.vue\n\n\n\n\n\n/* normalize component */\n;\nvar NewClientInformation_component = normalizeComponent(\n  components_NewClientInformationvue_type_script_lang_js_,\n  NewClientInformationvue_type_template_id_0c73eb36_scoped_true_render,\n  NewClientInformationvue_type_template_id_0c73eb36_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"0c73eb36\",\n  null\n  \n)\n\n/* harmony default export */ const NewClientInformation = (NewClientInformation_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewAdditionalFeature.vue?vue&type=template&id=8bd0e2b2&scoped=true&\nvar NewAdditionalFeaturevue_type_template_id_8bd0e2b2_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"additional-feature\"},[_c('h3',{staticClass:\"additional-feature__title\"},[_vm._v(\"Rekomendasi Fitur Tambahan\")]),_vm._v(\" \"),(_vm.flow !== 'vps')?_c('div',{staticClass:\"additional-feature__addon\"},[(_vm.flow !== 'mailhosting')?_c('div',[(! this.isWordpressHosting())?_c('div',{staticClass:\"row mb-5\"},[_c('div',{staticClass:\"d-none d-lg-block col-lg-2\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/icons-wordpress.svg',\"alt\":\"Auto Install WordPress\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Auto Install Website Wordpress\")]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-4 col-lg-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{'additional-feature__addon-cart--selected': _vm.additional_feature.wordpress.selected == true },attrs:{\"data-addon\":\"Auto Install Website Wordpress\"},on:{\"click\":_vm.autoInstallWebsite}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.wordpress.selected),expression:\"additional_feature.wordpress.selected\"}],attrs:{\"type\":\"hidden\",\"name\":\"wordpress\",\"value\":\"1\"},domProps:{\"value\":(_vm.additional_feature.wordpress.selected)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.additional_feature.wordpress, \"selected\", $event.target.value)}}})])])])])]):_vm._e(),_vm._v(\" \"),(_vm.checkFreeSslInCart() === false)?_c('div',[_c('hr'),_vm._v(\" \"),_c('div',{staticClass:\"row mt-5 mb-5\"},[_c('div',{staticClass:\"col-lg-2 d-none d-lg-block\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/gratis-ssl.svg',\"alt\":\"Auto Install WordPress\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"\\n                        Keamanan SSL Certificate (HTTPS)\\n                        \"),_c('span',{staticClass:\"additional-feature__addon-title--sub\"},[_vm._v(\"mulai dari Rp \"+_vm._s(_vm.sslPriceStartingFrom())+\"rb/domain per tahun\")])]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_c('div',{staticClass:\"col-8 col-lg-10\"},[_c('div',{ref:\"select-plan\",staticClass:\"additional-feature__select\",class:{'additional-feature__select--show': _vm.show_ssl_plan, 'select--disabled': _vm.additional_feature.ssl.selected},on:{\"click\":function($event){_vm.show_ssl_plan = !_vm.show_ssl_plan}}},[_c('p',{staticClass:\"additional-feature__select-title\"},[_vm._v(_vm._s(_vm.additional_feature.ssl.title)+\" \"),(_vm.additional_feature.ssl.price)?_c('span',{staticClass:\"float-right pr-lg-5 d-none d-lg-block\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")(_vm.additional_feature.ssl.price))+\"/Tahun\")]):_vm._e()])]),_vm._v(\" \"),(_vm.show_ssl_plan)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-plan'], handler: 'onClose'}),expression:\"{exclude: ['select-plan'], handler: 'onClose'}\"}],staticClass:\"additional-feature__ssl-options\"},_vm._l((_vm.ssl_plans),function(ssl){return _c('li',{key:ssl.id,staticClass:\"text-capitalize\",on:{\"click\":function($event){return _vm.chooseSslPlan(ssl.id, ssl.title, ssl.pricing.recurrent[_vm.additional_feature.ssl.period].price)}}},[_vm._v(_vm._s(ssl.title)+\" \"),_c('span',{staticClass:\"float-right d-none d-lg-block\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")(ssl.pricing.recurrent[_vm.additional_feature.ssl.period].price))+\"/Tahun\")])])}),0):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-4 col-lg-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{'additional-feature__addon-cart--selected': _vm.additional_feature.ssl.selected },attrs:{\"data-addon\":\"Keamanan SSL Certificate (HTTPS)\"},on:{\"click\":_vm.addRemoveSSLToCart}})])])])])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.tmp_domain.action == 'register' && _vm.flow != 'orderdomain' && _vm.inArray(_vm.tmp_domain.register_tld, _vm.additional_feature.domainprivacy.valid_domain))?_c('div',{staticClass:\"d-none invisible\"},[_c('hr'),_vm._v(\" \"),_c('div',{staticClass:\"row mt-5 mb-5\"},[_c('div',{staticClass:\"col-lg-2 d-none d-lg-block\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/Proteksi-whois.svg',\"alt\":\"Perlindungan Privasi WHOIS\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_vm._m(2),_vm._v(\" \"),_c('div',{staticClass:\"col-4 col-lg-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{'additional-feature__addon-cart--selected': _vm.additional_feature.domainprivacy.selected == true },attrs:{\"data-addon\":\"Perlindungan Privasi WHOIS\"},on:{\"click\":_vm.addRemovePrivacyProtectionToCart}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.domainprivacy.selected),expression:\"additional_feature.domainprivacy.selected\"}],attrs:{\"type\":\"hidden\",\"name\":\"privacy_protection\",\"value\":\"1\"},domProps:{\"value\":(_vm.additional_feature.domainprivacy.selected)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.additional_feature.domainprivacy, \"selected\", $event.target.value)}}})])])])])])]):_vm._e()]):_c('div',[(this.plan_type !== 'cyberpanel' && this.plan_type !== 'cpanel')?_c('div',{staticClass:\"row mb-5\"},[_c('div',{staticClass:\"d-none d-lg-block col-lg-2\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/additional-cloud-vps.png',\"alt\":\"Control Panel CLoud VPS\",\"loading\":\"lazy\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Control Panel Cloud VPS\")]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_c('div',{staticClass:\"col-10\"},[_c('div',{ref:\"select-plan\",staticClass:\"additional-feature__select\",class:{\n                  'additional-feature__select--show': _vm.show_addons,\n                  'select--disabled': _vm.additional_feature.vps.selected,\n                },on:{\"click\":function($event){_vm.show_addons = !_vm.show_addons}}},[_c('p',{staticClass:\"additional-feature__select-title\"},[_c('strong',[_vm._v(\"\\n                    \"+_vm._s(_vm.additional_feature.vps.title)+\"\\n                    \"),(_vm.additional_feature.vps.price)?_c('span',{staticClass:\"float-right pr-lg-5 d-none d-lg-block\"},[_vm._v(\"\\n                      \"+_vm._s(_vm.pricePerPeriod(_vm.additional_feature.vps.price, _vm.additional_feature.vps.period))+\"\\n                    \")]):_vm._e()])])]),_vm._v(\" \"),(_vm.show_addons && !_vm.additional_feature.vps.selected)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({ exclude: ['select-plan'], handler: 'onClose' }),expression:\"{ exclude: ['select-plan'], handler: 'onClose' }\"}],staticClass:\"additional-feature__vps-options\"},[_c('li',{on:{\"click\":_vm.resetVpsPlan}},[_c('strong',[_vm._v(\"Tanpa Control Panel (Saya Install Sendiri)\")])]),_vm._v(\" \"),_vm._l((_vm.vps_addons),function(addon){return _c('li',{key:addon.id,staticClass:\"text-capitalize\",on:{\"click\":function($event){_vm.chooseVpsPlan(\n                      addon.id,\n                      addon.title,\n                      _vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.vps.period])\n                    )}}},[_c('strong',[_vm._v(\"\\n                    \"+_vm._s(addon.title)+\"\\n                    \"),_c('span',{staticClass:\"float-right d-none d-lg-block\",staticStyle:{\"font-size\":\"1.4rem\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.pricePerPeriod(_vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.vps.period]), _vm.additional_feature.vps.period))+\"\\n                    \")])])])})],2):_vm._e(),_vm._v(\" \"),(_vm.additional_feature.vps.product_id > 0)?_c('div',{staticClass:\"mt-4 additional-feature__addon\"},[_vm._v(\"\\n                Termasuk instalasi otomatis\\n                \"),(_vm.additional_feature.vps.product_id != 0)?_c('span',[_vm._v(\"control panel &\")]):_vm._e(),_vm._v(\"\\n                  sistem operasi\\n                \"),_c('i',{staticClass:\"fa fa-question-circle float-right\",attrs:{\"aria-hidden\":\"true\"},on:{\"mouseover\":function($event){_vm.additional_feature.tooltip_message.show = true},\"mouseleave\":function($event){_vm.additional_feature.tooltip_message.show = false}}}),_vm._v(\" \"),(_vm.additional_feature.tooltip_message.show)?_c('div',{staticClass:\"additional-feature__addon-ribbon\"},[_vm._v(\"\\n                  \"+_vm._s(_vm.getTooltipsMessage)+\"\\n                \")]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{'additional-feature__addon-cart--selected': (_vm.additional_feature.vps.selected || _vm.additional_feature.vps.product_id == 0) },attrs:{\"data-addon\":\"Control Panel Cloud VPS\",\"data-toggle\":_vm.upgradePopupShow ? 'modal' : false,\"data-target\":_vm.upgradePopupShow ? '#upgradeConfirm' : false},on:{\"click\":_vm.addVpsAddon}})])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row mb-5\"},[_c('div',{staticClass:\"d-none d-lg-block col-lg-2\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/vps-daily-backup.png',\"alt\":\"Backup Cloud VPS\",\"loading\":\"lazy\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[(_vm.plan_type === 'cpanel')?_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Backup VPS cPanel\")]):_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Backup Cloud VPS\")]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_c('div',{staticClass:\"col-10\"},[_c('div',{ref:\"select-plan\",staticClass:\"additional-feature__select\",class:{\n                  'additional-feature__select--show': _vm.show_daily_backup,\n                  'select--disabled': _vm.additional_feature.daily_backup_vps.selected,\n                },on:{\"click\":function($event){_vm.show_daily_backup = !_vm.show_daily_backup}}},[_c('p',{staticClass:\"additional-feature__select-title\"},[_c('strong',[_vm._v(\"\\n                    \"+_vm._s(_vm.additional_feature.daily_backup_vps.title)+\"\\n                    \"),(_vm.additional_feature.daily_backup_vps.price)?_c('span',{staticClass:\"float-right pr-lg-4 d-none d-lg-block\"},[_vm._v(\"\\n                      \"+_vm._s(_vm.pricePerPeriod(_vm.additional_feature.daily_backup_vps.price, _vm.additional_feature.daily_backup_vps.period))+\"\\n                    \")]):_vm._e()])])]),_vm._v(\" \"),(_vm.show_daily_backup && !_vm.additional_feature.daily_backup_vps.selected)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({ exclude: ['select-plan'], handler: 'onClose' }),expression:\"{ exclude: ['select-plan'], handler: 'onClose' }\"}],staticClass:\"additional-feature__vps-options\"},[_c('li',{on:{\"click\":_vm.resetDailyBackupPlan}},[(_vm.plan_type === 'cpanel')?_c('strong',[_vm._v(\"Tanpa Backup VPS cPanel\")]):_c('strong',[_vm._v(\"Tanpa Backup Cloud VPS\")])]),_vm._v(\" \"),_vm._l((_vm.daily_backup_addons),function(addon){return _c('li',{key:addon.id,staticClass:\"text-capitalize\",on:{\"click\":function($event){_vm.chooseDailyBackupVpsPlan(\n                      addon.id,\n                      addon.title,\n                      _vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.daily_backup_vps.period])\n                    )}}},[_c('strong',[_vm._v(\"\\n                    \"+_vm._s(addon.title)+\"\\n                    \"),_c('span',{staticClass:\"float-right d-none d-lg-block\",staticStyle:{\"font-size\":\"1.4rem\"}},[_vm._v(\"\\n                      \"+_vm._s(_vm.pricePerPeriod(\n                          _vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.daily_backup_vps.period]),\n                          _vm.additional_feature.daily_backup_vps.period\n                        ))+\"\\n                      \")])])])})],2):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{\n                  'additional-feature__addon-cart--selected':\n                    _vm.additional_feature.daily_backup_vps.selected ||\n                    _vm.additional_feature.daily_backup_vps.product_id == 0,\n                },attrs:{\"data-addon\":\"Backup Cloud VPS\"},on:{\"click\":_vm.addDailyBackupVpsAddon}})])])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.toastPopupShow)?_c('div',{staticClass:\"popup-upgrade__toast\"},[_c('div',{staticClass:\"popup-upgrade__toast-left\"},[_c('img',{attrs:{\"src\":\"/assets/icons/icon-success-popup.svg\",\"id\":\"toast-success-icon\",\"alt\":\"icon-success\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"popup-upgrade__toast-right\",attrs:{\"id\":\"toast-text\"}},[_vm._v(_vm._s(this.toast.message))])]):_vm._e()])],1)}\nvar NewAdditionalFeaturevue_type_template_id_8bd0e2b2_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-8 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-description\"},[_vm._v(\"\\n                              Auto Install WordPress dan Optimize WordPress LiteSpeed Cache.\\n                          \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"\\n                        Perlindungan Privasi WHOIS\\n                        \"),_c('span',{staticClass:\"additional-feature__addon-title--sub\"},[_vm._v(\"Rp 45rb/domain per tahun\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-8 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-description\"},[_vm._v(\"Cegah pembajakan dan spam ke domain\\n                                Anda dengan melindungi nama, alamat, dan identitas Anda\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/NewAdditionalFeature.vue?vue&type=template&id=8bd0e2b2&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewAdditionalFeature.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const NewAdditionalFeaturevue_type_script_lang_js_ = ({\n  name: \"NewAdditionalFeature\",\n  props: [\"ssl_plans\", \"flow\", \"plan_type\", \"cart\"],\n\n  data() {\n    return {\n      period: CommonVar.period,\n      tmp_domain: [],\n      upgrade_popup: {\n        show: false,\n        status: false\n      },\n      toast: {\n        show: false,\n        message: ''\n      },\n      additional_feature: {\n        tooltip_message: {\n          show: false,\n          message: 'sistem operasi Centos 7 siap digunakan ketika akun VPS Anda aktif'\n        },\n        vps: {\n          selected: false,\n          product_id: 0,\n          period: \"1Y\",\n          cart_product_id: \"\",\n          title: \"Tanpa Control Panel (Saya Install Sendiri)\",\n          price: 0\n        },\n        daily_backup_vps: {\n          selected: false,\n          product_id: 0,\n          period: \"1Y\",\n          cart_product_id: \"\",\n          title: \"Tanpa Backup Cloud VPS\",\n          price: 0\n        },\n        wordpress: {\n          selected: false,\n          product_id: 69,\n          period: \"1Y\",\n          cart_product_id: \"\"\n        },\n        install_wp_accelerator: {\n          selected: false\n        },\n        ssl: {\n          selected: false,\n          product_id: \"\",\n          period: \"1Y\",\n          cart_product_id: \"\",\n          title: \"\",\n          price: \"\"\n        },\n        domainprivacy: {\n          selected: false,\n          product_id: 33,\n          period: \"1Y\",\n          cart_product_id: \"\",\n          valid_domain: [\".com\", \".net\", \".org\", \".info\"]\n        }\n      },\n      plan_id: false,\n      show_ssl_plan: false,\n      daily_backup_addons: [],\n      vps_addons: [],\n      show_addons: false,\n      show_daily_backup: false\n    };\n  },\n\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  computed: {\n    getTooltipsMessage() {\n      let message = '';\n\n      if (this.additional_feature.vps.product_id != 0) {\n        message += this.additional_feature.vps.title;\n        message += ' dan ';\n      }\n\n      message += this.additional_feature.tooltip_message.message;\n      return message;\n    },\n\n    upgradePopupShow() {\n      return this.upgrade_popup.show;\n    },\n\n    toastPopupShow() {\n      return this.toast.show;\n    }\n\n  },\n  methods: {\n    chooseSslPlan(id, title, price) {\n      this.additional_feature.ssl.product_id = id;\n      this.additional_feature.ssl.title = title;\n      this.additional_feature.ssl.price = price;\n      this.show_ssl_plan = false;\n    },\n\n    resetVpsPlan() {\n      this.additional_feature.vps.product_id = 0;\n      this.additional_feature.vps.title = 'Tanpa Control Panel (Saya Install Sendiri)';\n      this.additional_feature.vps.price = 0;\n      this.additional_feature.vps.selected = false;\n      this.show_addons = false;\n      this.emitNextBtn('reset');\n      this.upgrade_popup.show = false;\n      sessionStorage.setItem('upgrade_popup_status', 'disabled');\n    },\n\n    resetDailyBackupPlan() {\n      this.additional_feature.daily_backup_vps.product_id = 0;\n      this.additional_feature.daily_backup_vps.title = 'Tanpa Backup Cloud VPS';\n      this.additional_feature.daily_backup_vps.price = 0;\n      this.additional_feature.daily_backup_vps.selected = false;\n      this.show_daily_backup = false;\n      this.emitNextBtn('reset');\n    },\n\n    chooseVpsPlan(id, title, price) {\n      this.additional_feature.vps.product_id = id;\n      this.additional_feature.vps.title = title;\n      this.additional_feature.vps.price = price;\n      this.show_addons = false;\n      let tmp_cart = JSON.parse(sessionStorage.getItem('tmp_cart'));\n\n      if (this.additional_feature.vps.title.toLowerCase().indexOf('cpanel') !== -1 && tmp_cart.id == 2) {\n        this.upgrade_popup.show = true;\n      }\n\n      this.emitNextBtn('choose');\n    },\n\n    chooseDailyBackupVpsPlan(id, title, price) {\n      this.additional_feature.daily_backup_vps.product_id = id;\n      this.additional_feature.daily_backup_vps.title = title;\n      this.additional_feature.daily_backup_vps.price = price;\n      this.show_daily_backup = false;\n      this.emitNextBtn('choose');\n    },\n\n    addVpsAddon() {\n      if (!this.upgrade_popup.show) {\n        if (!this.additional_feature.vps.selected) {\n          bus.$emit('add-addon', this.additional_feature.vps.product_id);\n          bus.$emit('set-addon-template', this.additional_feature.vps.title);\n        }\n\n        if (this.additional_feature.vps.product_id != 0) {\n          this.additional_feature.vps.selected = true;\n        }\n\n        this.emitNextBtn('add', this.additional_feature.daily_backup_vps);\n      }\n    },\n\n    addDailyBackupVpsAddon() {\n      let product_id = this.additional_feature.daily_backup_vps.product_id;\n\n      if (!this.additional_feature.daily_backup_vps.selected) {\n        bus.$emit('add-addon', product_id);\n      }\n\n      if (product_id != 0) {\n        this.additional_feature.daily_backup_vps.selected = true;\n      }\n\n      this.emitNextBtn('add', this.additional_feature.vps);\n    },\n\n    emitNextBtn(type, addons = null) {\n      let status = false;\n\n      if (type == 'reset') {\n        status = false;\n      } else if (type == 'choose') {\n        status = true;\n      } else if (type == 'add' && addons != null) {\n        status = !(addons.selected || addons.product_id == 0);\n      }\n\n      bus.$emit('set-next-btn', status);\n    },\n\n    getTmpVpsAddons() {\n      const vps_plan = JSON.parse(sessionStorage.getItem('vps_plan'));\n      this.additional_feature.vps.period = vps_plan.period;\n      this.additional_feature.daily_backup_vps.period = vps_plan.period;\n      this.plan_id = vps_plan.product_id;\n      this.daily_backup_addons = this.filterAddon(vps_plan.plan.addons, false);\n      this.vps_addons = this.filterAddon(vps_plan.plan.addons);\n\n      if (sessionStorage.getItem('tmp_additional')) {\n        const addon = JSON.parse(sessionStorage.getItem('tmp_additional'));\n\n        if (!addon && !addon.items.length) {\n          return;\n        }\n\n        addon.items.map(item => {\n          if (item.title.toLowerCase().indexOf('backups') == -1) {\n            this.chooseVpsPlan(item.id, item.title, item.total);\n            this.additional_feature.vps.selected = true;\n          } else {\n            this.chooseDailyBackupVpsPlan(item.id, item.title, item.total);\n            this.additional_feature.daily_backup_vps.selected = true;\n          }\n        });\n      }\n\n      if (!sessionStorage.getItem('upgrade_popup_status')) {\n        sessionStorage.setItem('upgrade_popup_status', 'disabled');\n      }\n    },\n\n    filterAddon(addons, show_daily_backup = true) {\n      return addons.filter(addon => {\n        if (show_daily_backup) {\n          return addon.title.toLowerCase().indexOf(\"backups\") == -1;\n        }\n\n        return addon.title.toLowerCase().indexOf(\"backups\") != -1;\n      });\n    },\n\n    setPlanUpgrade() {\n      this.additional_feature.vps.selected = true;\n      this.upgrade_popup.show = false;\n      sessionStorage.setItem('upgrade_popup_status', 'enabled');\n      this.setBackupAddons();\n    },\n\n    resetPlanUpgrade() {\n      const upgrade_status = sessionStorage.getItem('upgrade_popup_status');\n\n      if (upgrade_status === 'enabled') {\n        bus.$emit('upgrade-nano', 'reset');\n        sessionStorage.setItem('upgrade_popup_status', 'disabled');\n      }\n    },\n\n    setBackupAddons() {\n      this.resetDailyBackupPlan();\n      let tmp_addons = JSON.parse(sessionStorage.getItem('tmp_additional'));\n      let removedAddon = tmp_addons.items.filter(el => el.title.includes('Backup'));\n      const vps_plan = JSON.parse(sessionStorage.getItem('vps_plan'));\n      this.daily_backup_addons = this.filterAddon(vps_plan.plan.addons, false);\n\n      if (removedAddon.length) {\n        bus.$emit('remove-from-cart', 'tmp_additional', removedAddon[0].id);\n      }\n    },\n\n    showToastPopup(message) {\n      this.toast.show = true;\n      this.toast.message = message;\n      setTimeout(() => {\n        this.toast.show = false;\n        this.toast.message = '';\n      }, 4000);\n    },\n\n    totalAfterDiscount(plan_period) {\n      return plan_period.discount_enabled == 1 ? plan_period.discount_price : plan_period.price;\n    },\n\n    /* ADD ADDITIONAL FEATURE TO CART */\n    autoInstallWebsite() {\n      bus.$emit(\"show-spinner\", true);\n      this.additional_feature.wordpress.selected = !this.additional_feature.wordpress.selected;\n      axios.post(\"/api/guest/add_remove_auto_install_website\", {\n        is_add: this.additional_feature.wordpress.selected\n      }).then(res => {\n        if (this.additional_feature.wordpress.selected) {\n          let wordpress = {\n            id: '',\n            type: 'wordpress',\n            title: '',\n            total: 0,\n            price: 0\n          };\n          sessionStorage.setItem('additional_feature_wordpress', JSON.stringify(wordpress));\n        } else {\n          sessionStorage.removeItem('additional_feature_wordpress');\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n      this.installWpAccelerator();\n    },\n\n    installWpAccelerator() {\n      bus.$emit(\"show-spinner\", true);\n      this.additional_feature.install_wp_accelerator.selected = !this.additional_feature.install_wp_accelerator.selected;\n      axios.post(\"/api/guest/add_remove_install_wp_accelerator\", {\n        is_add: this.additional_feature.install_wp_accelerator.selected\n      }).then(res => {\n        bus.$emit(\"refresh-cart\");\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n    },\n\n    addRemoveSSLToCart() {\n      if (this.additional_feature.ssl.product_id) {\n        this.additional_feature.ssl.selected = !this.additional_feature.ssl.selected;\n\n        if (this.additional_feature.ssl.selected) {\n          this.addAdditionalFeatureToCart(\"ssl\", this.additional_feature.ssl.product_id, this.additional_feature.ssl.period);\n        } else {\n          this.removeFromCart(this.additional_feature.ssl.cart_product_id, \"ssl\");\n        }\n      } else {\n        bus.$emit(\"show-notification-message\", \"Silakan pilih SSL\", true);\n      }\n    },\n\n    initSslPlan() {\n      this.ssl_plans.forEach(item => {\n        if (item.id == 76) {\n          this.additional_feature.ssl.product_id = item.id;\n          this.additional_feature.ssl.title = item.title;\n          this.additional_feature.ssl.price = item.pricing.recurrent[this.additional_feature.ssl.period].price;\n        }\n      });\n    },\n\n    addRemovePrivacyProtectionToCart() {\n      this.additional_feature.domainprivacy.selected = !this.additional_feature.domainprivacy.selected;\n\n      if (this.additional_feature.domainprivacy.selected) {\n        this.addAdditionalFeatureToCart(\"domainprivacy\", this.additional_feature.domainprivacy.product_id, this.additional_feature.domainprivacy.period);\n      } else {\n        this.removeFromCart(this.additional_feature.domainprivacy.cart_product_id, \"domainprivacy\");\n      }\n    },\n\n    addAdditionalFeatureToCart(type, product_id, period) {\n      bus.$emit(\"show-spinner\", true);\n      axios.post(\"/api/guest/add_additional_feature_to_cart\", {\n        type: type,\n        product_id: product_id,\n        period: period\n      }).then(res => {\n        let result = res.data.result;\n        this.additional_feature[result.type].cart_product_id = result.id;\n        sessionStorage.setItem('additional_feature_' + result.type, JSON.stringify(result));\n        bus.$emit(\"refresh-cart\");\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n    },\n\n    removeFromCart(cart_product_id, type) {\n      bus.$emit(\"show-spinner\", true);\n      axios.post(\"/api/guest/remove_from_cart\", {\n        id: cart_product_id\n      }).then(res => {\n        bus.$emit(\"refresh-cart\");\n\n        if (type == 'wordpress' && this.additional_feature.wordpress.selected) {\n          this.autoInstallWebsite();\n        } else {\n          sessionStorage.removeItem('additional_feature_' + type);\n          this.additional_feature[type].selected = false;\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n    },\n\n    sslPrice() {\n      this.ssl_plans.forEach(item => {\n        this.additional_feature.ssl.price = price;\n      });\n    },\n\n    sslPriceStartingFrom() {\n      let price;\n      this.ssl_plans.forEach(item => {\n        price = (item.price_starting_from - item.price_starting_from % 1000) / 1000;\n      });\n      return price;\n    },\n\n    getTmpDomain() {\n      if (sessionStorage.getItem('tmp_cart_domain')) {\n        this.tmp_domain = JSON.parse(sessionStorage.getItem('tmp_cart_domain'));\n      }\n    },\n\n    inArray(needle, haystack) {\n      return js_CommonMethods/* default.inArray */.Z.inArray(needle, haystack);\n    },\n\n    isWordpressHosting() {\n      if (sessionStorage.getItem('wordpress_hosting') || sessionStorage.getItem('managed_wordpress')) {\n        return true;\n      }\n\n      return false;\n    },\n\n    pricePerPeriod(price, period) {\n      const symbol = period.replace(/[0-9]/g, '');\n      const text_period = this.period[period].text.replace(/[ 0-9]/g, '');\n      let num_of_period = this.period[period].num_of_month;\n\n      if (symbol == 'Y') {\n        num_of_period = num_of_period / 12;\n      }\n\n      return this.$options.filters.formatPrice(Math.round(Number(price) / num_of_period)) + '/' + text_period;\n    },\n\n    checkFreeSslInCart() {\n      let status = false;\n      this.cart.items.forEach(item => {\n        if (item.product_id == 76 && item.free_ssl_hosting === true) {\n          status = true;\n        }\n      });\n      return status;\n    }\n\n  },\n  mounted: function () {\n    this.getTmpDomain();\n    setTimeout(() => {\n      bus.$on(\"remove-item\", item => {\n        if (item.type && this.additional_feature[item.type] && this.additional_feature[item.type].cart_product_id === item.id) {\n          this.removeFromCart(item.id, item.type);\n        }\n      });\n      bus.$on(\"set-upgrade\", () => {\n        this.showToastPopup('Paket berhasil diubah menjadi Paket Cloud VPS Mikro');\n        this.setPlanUpgrade();\n      });\n      bus.$on(\"reset-plan-upgrade\", () => {\n        this.resetPlanUpgrade();\n      });\n      bus.$on(\"reset-selected-addon\", () => {\n        this.resetVpsPlan();\n      });\n    }, 100);\n  },\n\n  created() {\n    if (this.flow !== 'vps') {\n      this.initSslPlan();\n    } else {\n      this.getTmpVpsAddons();\n    }\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/NewAdditionalFeature.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_NewAdditionalFeaturevue_type_script_lang_js_ = (NewAdditionalFeaturevue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/NewAdditionalFeature.vue\n\n\n\n\n\n/* normalize component */\n;\nvar NewAdditionalFeature_component = normalizeComponent(\n  components_NewAdditionalFeaturevue_type_script_lang_js_,\n  NewAdditionalFeaturevue_type_template_id_8bd0e2b2_scoped_true_render,\n  NewAdditionalFeaturevue_type_template_id_8bd0e2b2_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"8bd0e2b2\",\n  null\n  \n)\n\n/* harmony default export */ const NewAdditionalFeature = (NewAdditionalFeature_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/DomainSuggestion.vue?vue&type=template&id=bbab87e2&\nvar DomainSuggestionvue_type_template_id_bbab87e2_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"orderflow-domain__result orderflow-domain__result--border-top orderflow-domain__result--border-bottom-none\"},[_c('p',{staticClass:\"orderflow-domain__title\"},[_vm._v(\"Pilih Nama Domain Lainnya\")]),_vm._v(\" \"),_c('div',{staticClass:\"orderflow-domain__suggestion pr-2\"},_vm._l((_vm.domain_suggestion),function(ds){return _c('div',{key:ds.name},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(ds.availability)?_c('div',[_c('div',{staticClass:\"row align-items-center mb-4\",class:{'select--disabled': ds.is_added_to_cart}},[_c('div',{staticClass:\"col-md-5\"},[_c('input',{staticClass:\"orderflow-custom-checkbox gtmDomainSuggestion\",class:{\n                    'orderflow-custom-checkbox--checked': ds.is_added_to_cart,\n                    'orderflow-custom-checkbox--suggestion': _vm.flow == 'orderdomain',\n                    'orderflow-custom-checkbox--regular': _vm.flow != 'orderdomain'\n                  },attrs:{\"id\":_vm._f(\"formatDomain\")(ds.name,'_'),\"data-sld\":ds.sld,\"data-tld\":ds.tld,\"type\":\"checkbox\"},domProps:{\"checked\":ds.is_added_to_cart}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":_vm._f(\"formatDomain\")(ds.name,'_')},on:{\"click\":function($event){return _vm.addDomainSuggestionToCart(ds)}}},[_vm._v(_vm._s(ds.name.toLowerCase())+\" \"),_c('i',{staticClass:\"fas fa-check\",attrs:{\"aria-hidden\":\"true\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"},[_c('div',{staticClass:\"orderflow-domain__suggestion--period\",class:{'orderflow-domain__suggestion--period-bold':_vm.flow == 'orderdomain'}},[_c('span',[_vm._v(\"Durasi: \")]),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(ds.pricing.min_years),expression:\"ds.pricing.min_years\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(ds.pricing, \"min_years\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"1 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"2 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"3 Tahun\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(ds.pricing.allow_one_year_registration == 1)?_c('p',{staticClass:\"orderflow-domain__suggestion--price mb-0\",class:{'nunito--bold':_vm.flow == 'orderdomain'}},[_vm._v(\"\\n                  Rp. \"+_vm._s(_vm.formatPrice( _vm.customPrice(ds.pricing.price_registration, ds.pricing.min_years, ds.pricing.first_year_registration) ))+\"\\n              \")]):_c('p',{staticClass:\"orderflow-domain__suggestion--price mb-0\",class:{'nunito--bold':_vm.flow == 'orderdomain'}},[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice( ds.pricing.price_registration * ds.pricing.min_years)))])])])]):_vm._e()])],1)}),0)])}\nvar DomainSuggestionvue_type_template_id_bbab87e2_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/DomainSuggestion.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const DomainSuggestionvue_type_script_lang_js_ = ({\n  name: \"DomainSuggestion\",\n  props: [\"flow\", \"domain_suggestion\", \"domain\", \"tmp_additional\", \"tmp_domain_suggestion\"],\n  data: function () {\n    return {\n      period: CommonVar.period\n    };\n  },\n  computed: {\n    inArray() {\n      return (needle, haystack) => js_CommonMethods/* default.inArray */.Z.inArray(needle, haystack);\n    },\n\n    tmpDomainSuggestion() {\n      return this.tmp_domain_suggestion.items.filter(item => {\n        return item.id == 1;\n      });\n    }\n\n  },\n  filters: {\n    formatDomain(domain, sparator) {\n      return js_CommonMethods/* default.formatDomain */.Z.formatDomain(domain, sparator);\n    }\n\n  },\n  methods: {\n    customPrice(reg, years, first) {\n      let customDiscountPrice;\n      customDiscountPrice = reg * years - (reg - first);\n      return customDiscountPrice;\n    },\n\n    addDomainSuggestionToCart(ds) {\n      bus.$emit('add-domain-suggestion', ds);\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/DomainSuggestion.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowHosting_DomainSuggestionvue_type_script_lang_js_ = (DomainSuggestionvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/DomainSuggestion.vue\n\n\n\n\n\n/* normalize component */\n;\nvar DomainSuggestion_component = normalizeComponent(\n  OrderFlowHosting_DomainSuggestionvue_type_script_lang_js_,\n  DomainSuggestionvue_type_template_id_bbab87e2_render,\n  DomainSuggestionvue_type_template_id_bbab87e2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const DomainSuggestion = (DomainSuggestion_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/ThankYou.vue?vue&type=template&id=1a237f6b&\nvar ThankYouvue_type_template_id_1a237f6b_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center\"},[_c('div',{staticClass:\"col-md-10 col-xl-8\"},[_c('div',{staticClass:\"thanks-page\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"thanks-page__btn\"},[_c('a',{staticClass:\"button-default button-white-orange\",attrs:{\"href\":\"javascript:void(0);\"},on:{\"click\":function($event){return _vm.konfirmasiPembayaran()}}},[_vm._v(\"Konfirmasi Pembayaran di Member Area\")])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),(_vm.checkoutData.code == 'Custom')?_c('div',{staticClass:\"thanks-page__bank row justify-content-center\"},[_c('div',{staticClass:\"col-md-10\"},[_c('p',{staticClass:\"thanks-page__bank-title text-center\"},[_vm._v(\"Transfer Bank Manual\")]),_vm._v(\" \"),_c('div',{staticClass:\"thanks-page__bank-details\"},_vm._l((_vm.rekening),function(rek,bank){return _c('div',{key:bank},[_c('div',{staticClass:\"row align-items-center mb-3\"},[_c('div',{staticClass:\"col-md-4\"},[_c('div',{class:'payment-method__gateway-'+ bank})]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-8\"},[_c('p',{staticClass:\"payment-method__gateway-norek\"},[_vm._v(_vm._s(rek))]),_vm._v(\" \"),_c('p',{staticClass:\"payment-method__gateway-akun\"},[_vm._v(\"a.n: PT. WEB MEDIA TECHNOLOGY INDONESIA\")])])])])}),0)])]):_c('div',[_c('div',{staticClass:\"d-block d-md-none clearfix mb-4\"},[_c('img',{staticClass:\"img-fluid float-right\",attrs:{\"src\":_vm.niaga_url + 'assets/images/payment-gateway/' + _vm.checkoutData.gateway_name + '.png',\"alt\":\"Payment Gateway\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{class:_vm.payment_information.qrcode_url ? 'col-md-9' : 'col-md-8'},[_c('div',{staticClass:\"row text-left\"},[_c('div',{staticClass:\"col-6\"},[_c('p',{staticClass:\"thanks-page__payment-title\"},[_vm._v(\"Invoice ID\")]),_vm._v(\" \"),(_vm.payment_information.va_number)?_c('p',{staticClass:\"thanks-page__payment-title\"},[_vm._v(\"Kode Pembayaran\")]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"thanks-page__payment-title\"},[_vm._v(\"Nominal Tagihan\")]),_vm._v(\" \"),(_vm.payment_information.qrcode_url)?_c('p',{staticClass:\"thanks-page__payment-title\"},[_vm._v(\"Lakukan pembayaran sebelum\")]):_vm._e(),_vm._v(\" \"),(_vm.payment_information.qrcode_url)?_c('p',{staticClass:\"thanks-page__payment-title\"},[_vm._v(\"Kode QR\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-6\"},[_c('p',{staticClass:\"thanks-page__payment-detail text-uppercase\"},[_vm._v(_vm._s(_vm.payment_information.invoice_serie_nr))]),_vm._v(\" \"),(_vm.payment_information.va_number)?_c('p',{staticClass:\"thanks-page__payment-detail\"},[_vm._v(_vm._s(_vm.payment_information.va_number))]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"thanks-page__payment-detail\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.payment_information.payment_amount)))]),_vm._v(\" \"),(_vm.payment_information.qrcode_url)?_c('p',{staticClass:\"thanks-page__payment-detail\"},[_vm._v(_vm._s(_vm.payment_information.expires_at))]):_vm._e(),_vm._v(\" \"),(_vm.payment_information.qrcode_url)?_c('p',{staticClass:\"thanks-page__payment-detail\",class:{'thanks-page__payment-detail--qrcode':_vm.payment_information.qrcode_url}},[_c('img',{staticClass:\"img-fluid float-right\",attrs:{\"src\":_vm.payment_information.qrcode_url,\"alt\":\"Kode QR\"}})]):_vm._e()])])]),_vm._v(\" \"),_c('div',{staticClass:\" d-none d-md-block\",class:_vm.payment_information.qrcode_url ? 'col-md-3' : 'col-md-4'},[_c('img',{staticClass:\"img-fluid float-right\",attrs:{\"src\":_vm.niaga_url + 'assets/images/payment-gateway/' + _vm.checkoutData.code + '.svg?ver=1.0.2',\"alt\":\"Payment Gateway\"}})])]),_vm._v(\" \"),(_vm.checkoutData.code == 'BCAVA' || _vm.checkoutData.code == 'HpaymentsBCAVA')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM :\")]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui m-Banking :\")]),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui IBanking\")]),_vm._v(\" \"),_vm._m(3)]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'HpaymentsQris')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Pembayaran melalui QRIS :\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Anda dapat membayar tagihan Niagahoster menggunakan QRIS (QR Code Indonesian Standard) melalui semua Bank, eWallet, maupun provider pembayaran lain yang memiliki fitur Scan QRIS. Untuk melakukannya, ikuti langkah-langkah di bawah ini:\")]),_vm._v(\" \"),_vm._m(4)]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'BNIVA' || _vm.checkoutData.code == 'HpaymentsBNIVA')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pilih Menu Lain > Transfer\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih rekening asal dan pilih rekening tujuan ke rekening BNI\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda \"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\" dan pilih Benar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah pembayaran sejumlah tagihan Anda dan pilih Benar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Periksa data di layar. Pastikan Nama Rekening Tujuan adalah nama penerima Anda dan Total Tagihan benar. Apabila data sudah benar, pilih Ya\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui IBanking :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pilih Transaksi > Virtual Account Billing\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda \"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\".\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Rekening Debet dan klik Lanjutkan.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Cek detail konfirmasi. Pastikan Nama adalah nama penerima Anda.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Periksa detail konfirmasi. Pastikan Nama Rekening Tujuan adalah nama penerima Anda dan nominal transfer sudah benar.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan PIN BNI e-Secure Anda dan Klik Proses\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui m-Banking\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pilih Transfer > Antar Rekening BNI\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Rekening Tujuan > Input Rekening Baru. Masukkan nomor rekening dengan nomor Virtual Account Anda \"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\" dan klik Lanjut, kemudian klik Lanjut lagi.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah pembayaran sejumlah tagihan Anda. Lalu, klik Lanjutkan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Periksa detail konfirmasi. Pastikan Nama Rekening Tujuan adalah nama penerima Anda dan nominal transfer sudah benar. Jika benar, masukkan password transaksi dan klik Lanjut\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Cara Pembayaran lewat ATM Mandiri/Jaringan ATM Bersama: (dikenakan biaya Rp 6.500,00)\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pada Menu utama, pilih Transaksi Lainnya.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Transfer.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Antar Bank Online.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor \"),_c('strong',[_vm._v(\"099 \"+_vm._s(_vm.payment_information.va_number))]),_vm._v(\" (kode 009 dan kode Virtual account).\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah tagihan yang akan Anda bayar secara lengkap. Pembayaran dengan jumlah yang tidak sesuai akan otomatis ditolak.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pada halaman konfirmasi transfer akan muncul jumlah yang dibayarkan & nomor rekening tujuan. Jika informasinya telah sesuai tekan tombol Benar.\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Internet Banking Selain BNI (dikenakan biaya Rp 6.500,00):\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pilih Transfer >> Ke Bank Lain dan kemudian pilih BNI\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda \"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\".\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah tagihan yang akan Anda bayar secara lengkap. Pembayaran dengan jumlah yang tidak sesuai akan otomatis ditolak.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Periksa detail konfirmasi. Pastikan Nama Rekening Tujuan adalah nama penerima Anda dan nominal transfer sudah benar.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan PIN internet banking Anda dan Klik Proses untuk menyelesaikannya.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Cara Pembayaran lewat ATM BCA/Jaringan ATM PRIMA: (dikenakan biaya Rp 6.500,00)\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pada Menu utama, Pilih Transaksi Lainnya.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Transfer.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Ke Rek Bank Lain.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan kode 009 untuk BNI lalu tekan Benar.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah tagihan yang akan Anda bayar secara lengkap. Pembayaran dengan jumlah yang tidak sesuai akan otomatis ditolak.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\" (kode virtual account pembayaran) lalu tekan Benar.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pada halaman konfirmasi transfer akan muncul jumlah yang dibayarkan & nomor rekening tujuan. Jika informasinya telah sesuai tekan Benar.\")])])]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'CimbNiaga' || _vm.checkoutData.code == 'HpaymentsCimbNiaga')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Pembayaran CIMB Virtual Account dengan ATM CIMB :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Masukkan Kartu ATM dan PIN CIMB Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu Pembayaran > Lanjut > Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor virtual account \"+_vm._s(_vm.payment_information.va_number))]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih rekening debit\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Nomor, nama virtual account dan jumlah billing ditampilkan pada layar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih OK untuk melakukan pembayaran\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Konfirmasi pembayaran ditampilkan pada layar\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Pembayaran CIMB Virtual Account dengan ATM Bersama / Prima :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Masukkan Kartu ATM dan PIN Anda pada mesin ATM bank tersebut\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu TRANSFER > TRANSFER KE BANK LAIN\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan kode bank CIMB Niaga: 022\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah pembayaran sesuai tagihan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor virtual account \"+_vm._s(_vm.payment_information.va_number))]),_vm._v(\" \"),_c('li',[_vm._v(\"Ikuti instruksi untuk menyelesaikan transaksi\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Konfirmasi pembayaran ditampilkan pada layar\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Pembayaran CIMB Virtual Account dengan CIMB Clicks :\")]),_vm._v(\" \"),_c('ol',[_vm._m(5),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu Bayar Tagihan / Pay Bills\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Rekening Sumber / Source Account dan Jenis Pembayaran / Payment Type > Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor virtual account \"+_vm._s(_vm.payment_information.va_number))]),_vm._v(\" \"),_c('li',[_vm._v(\"Nomor, nama virtual account dan jumlah billing ditampilkan pada layar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan 6 digit mPIN dan tekan tombol Submit\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Konfirmasi pembayaran ditampilkan pada layar\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Pembayaran CIMB Virtual Account dengan Internet Banking Bank Lain :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Login ke internet banking\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu transfer ke Bank Lain Online\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih bank tujuan Bank CIMB Niaga (kode bank: 022)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor virtual account \"+_vm._s(_vm.payment_information.va_number))]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah pembayaran sesuai tagihan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Nomor, nama virtual account dan jumlah billing ditampilkan pada layar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Ikuti instruksi untuk menyelesaikan transaksi\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Konfirmasi pembayaran ditampilkan pada layar\")])])]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'MayBank' || _vm.checkoutData.code == 'HpaymentsMayBank')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Melalui Transfer ATM Maybank :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Silahkan pilih menu Pembayaran / Topup Pulsa\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Setelah itu, pilih menu Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda (contoh: \"+_vm._s(_vm.payment_information.va_number)+\") dan pilih Benar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Tunggu sebentar hingga muncul konfirmasi pembayaran. Lalu masukkan jumlah pembayaran. Setelah selesai, silahkan klik Benar\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Melalui Transfer Internet Banking :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Silahkan login Internet Banking dari Maybank\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Silahkan klik menu Rekening dan Transaksi. Kemudian pilih Maybank Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda (contoh: \"+_vm._s(_vm.payment_information.va_number)+\"). Lalu masukkan jumlah nominal transaksi anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Setelah itu, masukkan SMS Token (TAC) dan klik Setuju\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Melalui Transfer mBanking :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Silahkan login mobile banking yang ada di smartphone anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Setelah itu pilih menu Transfer. Lalu klik menu Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah nominal transaksi dan masukkan nomor rekening dengan nomor Virtual Account Anda (contoh: \"+_vm._s(_vm.payment_information.va_number)+\"). Setelah itu klik Kirim\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Tunggu sebentar hingga anda mendapatkan SMS notifikasi. Lakukan apa yang diperintahkan SMS notifikasi tersebut. Setelah semua selesai dilakukan, silahkan klik Reply\")])])]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'MandiriVA')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pilih menu \\\"Bayar/Beli\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"Lainnya\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"Multi Payment\\\"\")]),_vm._v(\" \"),_vm._m(6),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan 8 digit Nomor Kode Pembayaran (\"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\")\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Periksa kembali semua rincian transaksi Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui e-Banking :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pilih menu \\\"Bayar --> Multi Payment\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \\\"Penyedia jasa --> Doku\\\"\")]),_vm._v(\" \"),_vm._m(8),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan 8 digit Nomor Kode Pembayaran (\"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\") di \\\"ID/Pay Code\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Periksa kembali semua rincian transaksi Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai \")])])]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'HpaymentsBRIVA')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Melalui Transfer ATM BRI VA :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pilih menu \\\"Transaksi Lain\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"Pembayaran\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"Lainnya\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"BRIVA\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda (\"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\") dan pilih Benar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Tunggu sebentar hingga muncul konfirmasi pembayaran. Jika informasinya telah sesuai tekan Ya.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai. Simpan bukti pembayaran Anda\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Melalui BRI Internet Banking :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Silahkan login Internet Banking BRI\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"Pembayaran\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"BRIVA\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda (\"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\") dan pilih Kirim\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan Password dan Token, pilih Kirim\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai. Simpan bukti pembayaran Anda\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Melalui BRI Mobile Banking :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Silahkan login BRI Mobile dan pilih Mobile Banking BRI\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Setelah itu pilih menu \\\"Pembayaran\\\". Lalu klik menu \\\"BRIVA\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor rekening dengan nomor Virtual Account Anda (\"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\")\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan Mobile Banking PIN dan pilih Kirim\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pembayaran selesai dan bukti pembayaran akan dikirim melalui SMS\")])])]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'RetailDuitKu' || _vm.checkoutData.code == 'HpaymentsRitel')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Retail DuitKu:\")]),_vm._v(\" \"),_vm._m(9)]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'Alfamart' || _vm.checkoutData.code == 'HpaymentsAlfamart')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Alfamart Group:\")]),_vm._v(\" \"),_vm._m(10)]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'HpaymentsIndomaret')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Kasir Gerai Indomaret:\")]),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Mesin i-Kios Indomaret:\")]),_vm._v(\" \"),_vm._m(12)]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'HpaymentsMandiri')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM Mandiri:\")]),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM Bersama:\")]),_vm._v(\" \"),_vm._m(14),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Mobile Banking Mandiri:\")]),_vm._v(\" \"),_vm._m(15),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Mobile Banking Livin' by Mandiri berlogo Kuning:\")]),_vm._v(\" \"),_c('h4',{staticClass:\"payment-step__title\"},[_vm._v(\"Cara 1\")]),_vm._v(\" \"),_vm._m(16),_vm._v(\" \"),_c('h4',{staticClass:\"payment-step__title\"},[_vm._v(\"Cara 2\")]),_vm._v(\" \"),_vm._m(17)]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'HpaymentsPermataBank')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Permata Mobile :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Buka aplikasi Permata Mobile Internet (Android/iPhone)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan User ID & Password\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Pembayaran Tagihan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan 16 digit nomor Virtual Account yang tertera pada halaman konfirmasi (\"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\")\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nominal pembayaran sesuai dengan yang ditagihkan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Muncul Konfirmasi pembayaran\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan otentikasi transaksi/token\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Permata Net :\")]),_vm._v(\" \"),_c('ol',[_vm._m(18),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan User ID & Password\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Pembayaran Tagihan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan 16 digit nomor Virtual Account yang tertera pada halaman konfirmasi (\"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\")\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nominal pembayaran sesuai dengan yang ditagihkan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Muncul Konfirmasi pembayaran\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan otentikasi transaksi/token\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM Permata :\")]),_vm._v(\" \"),_vm._m(19),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM Bersama :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pada Menu utama, pilih Transaksi Lainnya\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Transfer\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Antar Bank Online\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor 013 \"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\" (kode 013 (kode bank) dan 16 angka kode Virtual account)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah pembayaran sesuai tagihan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Akan muncul rincian pembayaran Anda. Jika sudah benar, klik 'Ya' untuk melanjutkan\")])]),_vm._v(\" \"),_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui ATM Prima :\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Pada Menu utama, Pilih Transaksi Lainnya\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Transfer\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Ke Rek Bank Lain\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan kode 013 untuk PERMATA lalu tekan Benar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah tagihan yang akan Anda bayar secara lengkap\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \"),_c('strong',[_vm._v(_vm._s(_vm.payment_information.va_number))]),_vm._v(\" ( 16 kode virtual account pembayaran) lalu tekan Benar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Akan muncul rincian pembayaran Anda. Jika sudah benar, klik 'Ya' untuk melanjutkan\")])])]):_vm._e(),_vm._v(\" \"),(_vm.checkoutData.code == 'HpaymentsKoinWorks')?_c('div',{staticClass:\"payment-step\"},[_c('h3',{staticClass:\"payment-step__title\"},[_vm._v(\"Langkah - Langkah Pembayaran Melalui Koinworks Neo:\")]),_vm._v(\" \"),_vm._m(20)]):_vm._e()]),_vm._v(\" \"),_c('p',{staticClass:\"thanks-page__note\"},[_vm._v(\"\\n                Jika Anda ada pertanyaan lebih lanjut silakan \"),_c('strong',[_vm._v(\"chat kami\")]),_vm._v(\" atau telepon \"),_c('strong',[_vm._v(\"0\"+_vm._s(_vm.cs_phone))])])])])])}\nvar ThankYouvue_type_template_id_1a237f6b_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"thanks-page__title\"},[_vm._v(\"Terimakasih! Kami akan aktifkan pesanan Anda segera setelah Anda melakukan \"),_c('strong',[_vm._v(\"konfirmasi pembayaran!\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Masukkan Kartu \"),_c('b',[_vm._v(\"ATM BCA & PIN\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \"),_c('b',[_vm._v(\"Transaksi Lainnya > Transfer > ke Rekening BCA Virtual Account\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \"),_c('b',[_vm._v(\"kode pembayaran\")]),_vm._v(\" atau \"),_c('b',[_vm._v(\"nomor BCA Virtual Account Anda\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Di halaman konfirmasi, pastikan detil pembayaran sudah sesuai seperti \"),_c('b',[_vm._v(\"No VA, Nama, Perus/Produk\")]),_vm._v(\" dan \"),_c('b',[_vm._v(\"Total Tagihan\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Ikuti instruksi untuk menyelesaikan transaksi\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Lakukan \"),_c('b',[_vm._v(\"log in\")]),_vm._v(\" pada \"),_c('b',[_vm._v(\"aplikasi BCA Mobile\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \"),_c('b',[_vm._v(\"m-BCA\")]),_vm._v(\", kemudian masukkan \"),_c('b',[_vm._v(\"kode akses m-BCA\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \"),_c('b',[_vm._v(\"m-Transfer > BCA Virtual Account\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \"),_c('b',[_vm._v(\"kode pembayaran\")]),_vm._v(\" atau \"),_c('b',[_vm._v(\"nomor BCA Virtual Account Anda\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Di \"),_c('b',[_vm._v(\"halaman konfirmasi\")]),_vm._v(\", pastikan detil pembayaran sudah sesuai seperti \"),_c('b',[_vm._v(\"No VA, Nama, Perus/Produk\")]),_vm._v(\" dan \"),_c('b',[_vm._v(\"Total Tagihan\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \"),_c('b',[_vm._v(\"pin m-BCA\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Pembayaran selesai. \"),_c('b',[_vm._v(\"Simpan notifikasi\")]),_vm._v(\" yang muncul sebagai bukti pembayaran\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Login pada alamat Internet Banking BCA (https://klikbca.com)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \"),_c('b',[_vm._v(\"Pembayaran Tagihan > Pembayaran > BCA Virtual Account\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \"),_c('b',[_vm._v(\"kode pembayaran\")]),_vm._v(\" atau nomor \"),_c('b',[_vm._v(\"BCA Virtual Account Anda\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Di \"),_c('b',[_vm._v(\"halaman konfirmasi\")]),_vm._v(\", pastikan detil pembayaran sudah sesuai seperti \"),_c('b',[_vm._v(\"Nomor BCA Virtual Account, Nama Pelanggan\")]),_vm._v(\" dan \"),_c('b',[_vm._v(\"Jumlah Pembayaran\")]),_vm._v(\".\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan password dan mToken.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Pilih \"),_c('b',[_vm._v(\"QRIS\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Pindai \"),_c('b',[_vm._v(\"kode QR\")]),_vm._v(\" melalui platform pembayaran pilihan Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nominal pembayaran \")]),_vm._v(\" \"),_c('li',[_vm._v(\"Tekan bayar \")]),_vm._v(\" \"),_c('li',[_vm._v(\"Tekan kembali ke merchant setelah pembayaran selesai dilakukan \")]),_vm._v(\" \"),_c('li',[_vm._v(\"Anda akan dialihkan kembali ke halaman tagihan pada Client Area Niagahoster \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_vm._v(\"Login ke \"),_c('a',{attrs:{\"href\":\"https://www.octoclicks.co.id/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"CIMB clicks\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_vm._v(\"Masukkan Nomor Kode bayar Perusahaan / Instansi (\"),_c('strong',[_vm._v(\"70002\")]),_vm._v(\")\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_vm._v(\"Masukkan Kode Merchant (\"),_c('strong',[_vm._v(\"264\")]),_vm._v(\")\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_vm._v(\"Masukkan \\\"Kode Merchant\\\" (\"),_c('strong',[_vm._v(\"264\")]),_vm._v(\")\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Klik \"),_c('b',[_vm._v(\"Checkout Sekarang\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Anda akan diarahkan ke \"),_c('b',[_vm._v(\"halaman pembayaran Duitku\")]),_vm._v(\". Petunjuk pembayaran juga dapat Anda lihat pada halaman tersebut\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Datangi \"),_c('b',[_vm._v(\"Gerai \")]),_vm._v(\" terdekat\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Informasikan kepada petugas bahwa Anda akan melakukan \"),_c('b',[_vm._v(\"Pembayaran Telkom\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Apabila petugas menanyakan produk yang akan dibayar, instruksikan petugas untuk memilih produk \"),_c('b',[_vm._v(\"Telkom Indihome\")]),_vm._v(\" atau \"),_c('b',[_vm._v(\"Telepon Rumah\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Petugas akan meminta Kode Pembayaran. Sebutkan \"),_c('b',[_vm._v(\"Kode Pembayaran\")]),_vm._v(\" Anda\")]),_c('li',[_vm._v(\"Petugas akan memasukkan kode pembayaran yang Anda berikan ke dalam sistem. Selanjutnya, petugas akan memberitahukan nominal tagihan yang harus Anda bayar\")]),_c('li',[_vm._v(\"Lakukan pembayaran sesuai nominal tagihan yang diinformasikan dan tunggu hingga proses selesai\")]),_c('li',[_vm._v(\"Setelah melakukan pembayaran, petugas akan memberikan struk bukti pembayaran. Apabila tidak diberikan, mintalah struk tersebut. Simpan struk tersebut sebagai bukti pembayaran Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai. Pembayaran Anda tercatat secara otomatis oleh sistem\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Catat Kode Pembayaran di atas dan datang ke gerai Alfa Group terdekat\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Datangi kasir dan katakan \\\"ingin membayar NIAGAHOSTER Merchant\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Kasir akan menayakan kode pembayaran, berikan Kode Pembayaran yang tertulis di atas\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Kasir akan mengkonfirmasi nama Merchant dan nominal yang harus dibayarkan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Lakukan pembayaran ke kasir sejumlah nominal yang disebutkan. Pembayaran dapat menggunakan uang tunai atau non tunai. Non Tunai antara lain Kartu Debit BCA, Kartu Debit BNI, BCA Flazz, BNI Prepaid, dan Mandiri e-money.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Terima struk sebagai bukti pembayaran sukses dilakukan. Notifikasi pembayaran juga akan langsung diterima Niagahoster.\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Datangi gerai Indomaret terdekat\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Informasikan kepada kasir Indomaret bahwa Anda akan melakukan \"),_c('b',[_vm._v(\"transaksi payment point\")]),_vm._v(\" atau pembayaran dengan menyebutkan nama merchant\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Sebutkan \"),_c('b',[_vm._v(\"Kode Bayar\")]),_vm._v(\" pada kasir Indomaret\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Kasir akan memproses transaksi Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Bayar transaksi sesuai nominal yang disebutkan oleh kasir Indomaret\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Simpan struk pembayaran Anda sebagai bukti transaksi\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Datangi gerai Indomaret terdekat\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Lakukan transaksi melalui mesin i-Kios Indomaret\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \"),_c('b',[_vm._v(\"i-Payment\")]),_vm._v(\", kemudian pilih \"),_c('b',[_vm._v(\"e-Commerce\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih nama merchant tujuan pembayaran yaitu \"),_c('b',[_vm._v(\"Niagahoster\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukan \"),_c('b',[_vm._v(\"nomor handphone\")]),_vm._v(\" dan \"),_c('b',[_vm._v(\"Kode Bayar\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Muncul \"),_c('b',[_vm._v(\"Konfirmasi Transaksi\")]),_vm._v(\" pada layar. Tekan \"),_c('b',[_vm._v(\"Next\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Mesin i-Kios Indomaret akan mencetak invoice.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Bayar sesuai nominal tagihan melalui kasir Indomaret dengan cara menunjukan \"),_c('b',[_vm._v(\"invoice\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai. Simpan bukti pembayaran Anda\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Pilih Pembayaran/Pembelian\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \\\"Multi Payment\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan kode perusahan \\\"5 digit pertama dari Virtual Account\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan seluruh kode Virtual Account \")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan jumlah nominal\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Cek terlebih dahulu, jika sudah benar masukan angka/nomor 1, lalu pilih “Ya”\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Masukkan kartu ke mesin ATM Bersama\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \\\"Transaksi lainnya\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu \\\"Transfer\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \\\"Transfer ke Bank Lain\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan kode Bank Mandiri \\\"008\\\" dan 16 Digit nomor Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan Nominal Transfer seusai tagihan atau kewajiban Anda. pastikan nominal sesuai\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Konfirmasi rincian Anda akan tampil di layar, cek dan tekan 'Ya' untuk melanjutkan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi Berhasil\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Pilih \\\"Bayar\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masuk ke \\\"Pembayaran Baru\\\" lalu \\\"Multipayment\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Penyedia Jasa \\\"Duitku\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Isi \\\"No VA\\\" dengan \\\"Nomor Virtual Account\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih konfirmasi lalu masukan Nominal Transfer anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \\\"LANJUT\\\" untuk melakukan pembayaran dan konfirmasi\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Pilih \\\"Bayar\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Ketik dan cari pembayaran dengan memasukkan kata \\\"Duitku\\\" pada kolom pencarian \\\"Cari Penyedia Jasa...\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \\\"Nomor Virtual Account\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \\\"Jumlah Nominal Tagihan\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \\\"Lanjut Bayar\\\" dan masukkan PIN anda\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Pilih \\\"Bayar\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masuk ke \\\"Investasi\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Ketik kata \\\"Duitku\\\" pada kolom pencarian \\\"Cari Penyedia Jasa apa\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \\\"Nomor Virtual Account\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \\\"Jumlah Nominal Tagihan\\\"\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih \\\"Lanjut Bayar\\\" dan masukkan PIN anda\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_vm._v(\"Buka website \"),_c('a',{attrs:{\"href\":\"https://new.permatanet.com\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"PermataNet\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Pilih menu Transaksi Lainnya\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu Pembayaran\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu Pembayaran Lainnya\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih menu Virtual Account\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan nomor Virtual Account yang tertera pada halaman konfirmasi, dan tekan Benar\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Pilih Rekening yang menjadi sumber dana yang akan didebet, lalu tekan Ya untuk konfirmasi transaksi\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ol',[_c('li',[_vm._v(\"Klik \"),_c('strong',[_vm._v(\"Checkout Sekarang\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Anda akan diarahkan ke \"),_c('strong',[_vm._v(\"halaman pembayaran MIDTRANS\")]),_vm._v(\". Pembayaran tagihan melalui kartu kredit diproses sepenuhnya oleh MIDTRANS\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan \"),_c('strong',[_vm._v(\"Nomor Kartu Kredit, Kode CCV, Tanggal Kadaluarsa Kartu\")]),_vm._v(\", serta \"),_c('strong',[_vm._v(\"identitas diri Anda\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Niagahoster adalah merchant \"),_c('strong',[_vm._v(\"Koinworks Neo\")]),_vm._v(\". Anda akan diminta untuk mengisi PIN kartu kredit Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Masukkan PIN kartu kredit Anda. Bank penerbit kartu kredit memiliki metode pengiriman PIN berbeda-beda. Umumnya, PIN dikirimkan ke nomor handphone yang terdaftar pada kartu kredit Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Setelah proses verifikasi berhasil, transaksi akan dicatat oleh sistem menggunakan kartu kredit Anda\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Transaksi selesai. Anda akan diarahkan ke \"),_c('strong',[_vm._v(\"halaman Thank You Niagahoster\")]),_vm._v(\" dan order Anda akan segera diaktifkan\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Apabila \"),_c('strong',[_vm._v(\"transaksi gagal\")]),_vm._v(\", Anda akan diarahkan ke \"),_c('strong',[_vm._v(\"halaman Thank You Niagahoster\")]),_vm._v(\". Sistem akan mengirimkan email berisi petunjuk pembayaran. Order akan aktif setelah Niagahoster memverifikasi pembayaran manual Anda\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/ThankYou.vue?vue&type=template&id=1a237f6b&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/ThankYou.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const ThankYouvue_type_script_lang_js_ = ({\n  name: 'ThankYou',\n  props: ['cart', 'client', 'cs_phone', 'payment_methods'],\n  data: function () {\n    return {\n      bb_url: CommonVar.bb_url,\n      niaga_url: CommonVar.niaga_url,\n      gateway_id: null,\n      rekening: {\n        bca: '0283116490',\n        mandiri: '1030006055954',\n        bri: '040901000395302',\n        bni: '3300030034'\n      },\n      checkoutData: [],\n      cartTotal: null,\n      show_spinner: false,\n      invoiceData: [],\n      payment_information: []\n    };\n  },\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  methods: {\n    konfirmasiPembayaran() {\n      if (sessionStorage.getItem('front_checkout')) {\n        let hash = this.checkoutData.invoice_hash;\n        let redirectUrl = this.bb_url + '/invoice/thank-you/' + hash + '?status=ok&gw=invoice';\n        window.location.href = redirectUrl;\n        sessionStorage.clear();\n      }\n    },\n\n    getFromStorage() {\n      if (sessionStorage.getItem('front_checkout')) {\n        bus.$emit('show-spinner', true);\n        this.checkoutData = JSON.parse(sessionStorage.getItem('front_checkout'));\n        this.invoiceData = JSON.parse(sessionStorage.getItem('checkout_payment'));\n      } else {\n        window.location.href = CommonVar.niaga_url + 'orderhosting';\n      }\n\n      if (sessionStorage.getItem('flow') === 'cloudhosting' || sessionStorage.getItem('flow') === 'mailhosting') {\n        sessionStorage.removeItem('flow');\n      }\n    },\n\n    getInvoice() {\n      axios.post('/api/guest/invoice_information', {\n        hash: this.checkoutData.invoice_hash,\n        gateway_code: this.checkoutData.code,\n        invoice_id: this.checkoutData.invoice_id,\n        checkout_data: this.invoiceData\n      }).then(res => {\n        this.payment_information = res.data.result;\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    virtualPageView() {\n      let wordpressHosting = sessionStorage.getItem('wordpress_hosting');\n      const urlParams = new URLSearchParams(window.location.search);\n      let type = urlParams.get('type');\n\n      if (wordpressHosting === 'checked') {\n        type = 'wp-hosting';\n      }\n\n      let vpOrderFlow = ['unlimited-hosting', 'cloud-hosting', 'mail-hosting', 'domain', 'wp-hosting', 'cloud-vps-hosting', 'vps-kvm-indonesia', 'web-instant'];\n\n      if (js_CommonMethods/* default.inArray */.Z.inArray(type, vpOrderFlow)) {\n        setTimeout(() => {\n          bus.$emit('gtm-page-view', `/vp-orderflow/${type}/thank-you`);\n        }, 500);\n      }\n    }\n\n  },\n\n  created() {\n    this.getFromStorage();\n    this.getInvoice();\n    this.virtualPageView();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/ThankYou.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowHosting_ThankYouvue_type_script_lang_js_ = (ThankYouvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/ThankYou.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ThankYou_component = normalizeComponent(\n  OrderFlowHosting_ThankYouvue_type_script_lang_js_,\n  ThankYouvue_type_template_id_1a237f6b_render,\n  ThankYouvue_type_template_id_1a237f6b_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ThankYou = (ThankYou_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SummaryCart.vue?vue&type=template&id=01d0eaaa&scoped=true&\nvar SummaryCartvue_type_template_id_01d0eaaa_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{attrs:{\"id\":\"summary-cart-wrapper\"}},[_c('div',{attrs:{\"id\":\"summary-cart\"}},[_c('div',{staticClass:\"summary-cart\"},[_c('div',{staticClass:\"orderflow-step\"},[(_vm.flow === 'website' || _vm.flow === 'mailhosting')?_c('ul',[_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.orderflow_step == 1, 'orderflow-step__item--complete':_vm.orderflow_step > 1}},[(_vm.flow === 'website')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Atur Website & Domain\")]):_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Website & Domain\")])]),_vm._v(\" \"),_vm._m(0)]):_c('ul',[_c('li',{staticClass:\"orderflow-step__item\",class:{'orderflow-step__item--active':_vm.orderflow_step == 1, 'orderflow-step__item--complete':_vm.orderflow_step > 1}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Hosting & Domain\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item\",class:{'orderflow-step__item--active':_vm.orderflow_step == 2, 'orderflow-step__item--complete':_vm.orderflow_step > 2}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Tambah Fitur\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item\",class:{'orderflow-step__item--active':_vm.orderflow_step == 3, 'orderflow-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"3. Metode Pembayaran\")])])])]),_vm._v(\" \"),_c('div',{class:{'d-block':_vm.show_summary_cart, 'd-none d-lg-block': !_vm.show_summary_cart}},[_c('div',{staticClass:\"summary-cart__item\",attrs:{\"id\":\"summary-cart__item\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.cart.items.length)?_c('div',_vm._l((_vm.cart.items),function(item){return _c('div',{key:item.id},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-8\"},[(_vm.flow === 'website' && item.type == 'hosting')?_c('div',[_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(_vm._s(item.title))])]):(_vm.flow === 'mailhosting' && item.type == 'hosting')?_c('div',[_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Mail \"+_vm._s(item.type)+\" \"+_vm._s(_vm.period[item.period].text))])]):_c('div',[(item.type == 'hosting')?_c('p',{staticClass:\"summary-cart__item-type text-capitalize\"},[_vm._v(_vm._s(item.type)+\" \"+_vm._s(_vm.period[item.period].text))]):(item.type == 'ssl')?_c('p',{staticClass:\"summary-cart__item-type text-uppercase\"},[_vm._v(_vm._s(item.type))]):(item.type == 'domainprivacy')?_c('p',{staticClass:\"summary-cart__item-type text-capitalize\"},[_vm._v(_vm._s(item.type.replace('domain', 'domain ')))]):(item.type == 'domain' && item.action === 'transfer')?_c('p',[_vm._v(\"Transfer Domain\")]):_c('p',{staticClass:\"summary-cart__item-type text-capitalize\"},[_vm._v(_vm._s(item.type))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-4\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[(_vm.flow === 'website' && item.type == 'hosting')?_c('div',[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.period[item.period].text))])]):_c('div',[(item.type == 'domain')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(\"\\n                                            \"+_vm._s(_vm.toUpperCase(item[item.action + '_sld']))+_vm._s(_vm.toUpperCase(item[item.action + '_tld']))+\"\\n                                        \")]):_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.title))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(item.total)))])])]),_vm._v(\" \"),_c('hr')])}),0):_vm._e()]),_vm._v(\" \"),_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Pajak & Biaya Tambahan\")]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.taxName))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.cart.total * _vm.taxRate)))])])]),_vm._v(\" \"),_c('hr')],1),_vm._v(\" \"),(_vm.orderflow_step == 3)?_c('div',{staticClass:\"summary-cart__coupon d-none d-lg-block\"},[_c('div',{staticClass:\"input-group mb-3\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.coupon_code),expression:\"coupon_code\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"name\":\"coupon_code\",\"placeholder\":\"Kode Kupon (opsional)\",\"aria-label\":\"Kode Kupon (opsional)\",\"aria-describedby\":\"coupon-code\"},domProps:{\"value\":(_vm.coupon_code)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.coupon_code=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-secondary\",class:{'summary-cart__coupon--btn-grey': !_vm.coupon_code},attrs:{\"id\":\"coupon-code\",\"type\":\"button\",\"disabled\":!_vm.coupon_code},on:{\"click\":_vm.usePromoCode}},[_vm._v(\"Gunakan\")])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_coupon_status)?_c('div',{staticClass:\"summary-cart__coupon-status\"},[(_vm.coupon_status.result)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-10\"},[_c('p',[_vm._v(\"Kode Kupon \"),_c('strong',[_vm._v(_vm._s(_vm.coupon_code))]),_vm._v(\" berhasil digunakan\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('span',{staticClass:\"fa fa-times summary-cart__coupon-status--remove\",on:{\"click\":function($event){return _vm.removeCoupon()}}})])]):(_vm.coupon_status.error != null)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"summary-cart__coupon-status--error\"},[_vm._v(_vm._s(_vm.coupon_status.message))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('span',{staticClass:\"fa fa-times summary-cart__coupon-status--remove\",on:{\"click\":function($event){return _vm.removeCoupon()}}})])]):_c('p',{staticClass:\"summary-cart__coupon-status--error\"},[_vm._v(_vm._s(_vm.coupon_status.message))])]):_vm._e()])],1):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[(_vm.orderflow_step == 3 && _vm.payment_methods)?_c('div',{staticClass:\"col-12 order-lg-2\",class:{'d-block':_vm.show_summary_cart, 'd-none d-lg-block': !_vm.show_summary_cart}},[_c('div',{staticClass:\"summary-cart__payment-method\"},[_c('p',[_vm._v(\"Metode Pembayaran\")]),_vm._v(\" \"),_vm._l((_vm.payment_methods),function(method){return _c('strong',{key:method.id},[(method.id == _vm.gateway_id)?_c('span',[_vm._v(_vm._s(method.title))]):_vm._e()])})],2),_vm._v(\" \"),_c('tos-text',{attrs:{\"device-class\":'summary-cart__tos-desktop'}})],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"summary-cart__total\"},[_c('div',{staticClass:\"row\",class:{'align-items-center': !_vm.cart.coupon}},[_c('div',{staticClass:\"col-3 col-lg-4 pr-0\"},[_c('p',{staticClass:\"summary-cart__total-title\",class:{'summary-cart__total-title--discount': _vm.cart.coupon}},[_vm._v(\"\\n                                TOTAL \\n                                \"),(_vm.cart.coupon)?_c('span',[_vm._v(\"(-\"+_vm._s(_vm.discount_percentage)+\"%)\")]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"col-8 col-lg-8\"},[(_vm.cart.coupon)?_c('p',{staticClass:\"summary-cart__total-price summary-cart__total-price--discount\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.total_before_coupon)))]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"summary-cart__total-price\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.total))+\" \"),_c('span',{staticClass:\"float-right badge badge-pill badge-light d-inline d-lg-none\"},[_vm._v(_vm._s(_vm.cart.items.length))])])]),_vm._v(\" \"),_c('a',{staticClass:\"summary-cart__total-details col-1 d-block d-lg-none pl-0\",attrs:{\"href\":\"javascript:void(0);\",\"aria-label\":\"cart\"},on:{\"click\":function($event){_vm.show_summary_cart =  true ? _vm.show_summary_cart == false : 0}}},[(_vm.show_summary_cart)?_c('span',{staticClass:\"fa fa-angle-up\"}):_c('span',{staticClass:\"fa fa-angle-down\"})])])]),_vm._v(\" \"),(_vm.client)?_c('tos-text',{attrs:{\"device-class\":'summary-cart__tos-desktop summary-cart__tos-mobile-logged'}}):_vm._e()],1)])]),_vm._v(\" \"),(_vm.orderflow_step == 3)?_c('div',{staticClass:\"d-none d-lg-block gtmCTA\",attrs:{\"id\":\"checkout-button-wrapper\"}},[_c('div',{attrs:{\"id\":\"checkout-button\"}},[(_vm.client)?_c('a',{staticClass:\"button-default button-white-orange button-block nunito-bold PaymentPage_ButtonCheckoutSekarang_Clicked\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.checkoutNow}},[_vm._v(\"Checkout Sekarang\")]):_c('a',{staticClass:\"button-default button-block nunito-bold PaymentPage_ButtonCheckoutSekarang_Clicked\",class:{'button-white-orange gtmCTAAfter': _vm.user_input_change, 'button-blue gtmCTABefore': !_vm.user_input_change},attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.checkoutNow}},[_vm._v(\"Checkout Sekarang\")])])]):_vm._e()])])}\nvar SummaryCartvue_type_template_id_01d0eaaa_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"orderflow-step__item orderflow-step__item--active orderflow-step__item--website\"},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Metode Pembayaran\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/SummaryCart.vue?vue&type=template&id=01d0eaaa&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SummaryCart.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const SummaryCartvue_type_script_lang_js_ = ({\n  name: \"NewSectionSummary\",\n  components: {\n    TosText: TosText\n  },\n  props: ['cart', 'orderflow_step', 'client', 'gateway_id', 'payment_methods', 'hosting', 'flow'],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_coupon_status: false,\n      coupon_status: {\n        result: false,\n        message: '',\n        error: false\n      },\n      coupon_code: false,\n      show_summary_cart: false,\n      user_input_change: false,\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n  computed: {\n    promocode() {\n      return this.cart.promocode;\n    },\n\n    total() {\n      return this.cart.total * (1 + this.taxRate);\n    },\n\n    total_before_coupon() {\n      return this.cart.total_before_coupon * (1 + this.taxRate);\n    },\n\n    discount_percentage() {\n      return Math.round((this.total_before_coupon - this.total) / this.total_before_coupon * 100);\n    },\n\n    auto_install_website() {\n      return this.cart.items.filter(item => {\n        return item.type == 'hosting' && item.auto_install_website == '1';\n      });\n    }\n\n  },\n  watch: {\n    promocode: function () {\n      if (!this.coupon_code) {\n        if (this.cart.aff_coupon) {\n          this.coupon_code = this.cart.aff_coupon;\n        } else {\n          this.coupon_code = this.cart.promocode;\n        }\n\n        if (this.coupon_code) {\n          this.coupon_status.result = true;\n          this.coupon_status.message = 'Kode Coupon berhasil diaplikasikan';\n          this.show_coupon_status = true;\n        }\n      }\n    },\n    cart: function () {\n      let key = Object.keys(this.cart.items);\n      let items = this.cart.items;\n      key = parseInt(key[key.length - 1]);\n      items.forEach(item => {\n        if (item.type == 'hosting' && item.auto_install_website == '1') {\n          items[key + 1] = {\n            id: '',\n            type: 'wordpress',\n            title: '',\n            total: 0\n          };\n        }\n      });\n      setTimeout(() => {\n        this.$on('remove-wordpress', () => {\n          this.removeWordPress();\n          bus.$emit('refresh-cart');\n        });\n      }, 100);\n    }\n  },\n  filters: {\n    formatPrice(value) {\n      return CommonMethods.formatPrice(value);\n    }\n\n  },\n  methods: {\n    checkoutNow() {\n      if (this.client) {\n        let isLoginByRegister = CommonMethods.getCookie('is_login_by_register');\n\n        if (isLoginByRegister === 'true') {\n          this.$emit('checkout-now', false);\n        } else {\n          this.$emit('checkout-now', true);\n        }\n      } else {\n        bus.$emit('login-register-checkout');\n      }\n\n      if (!this.client && !this.user_input_change) {\n        document.getElementById('client-information').scrollIntoView();\n      }\n    },\n\n    checkUrlPath(path) {\n      let urlPath;\n      urlPath = window.location.pathname.split('/');\n      return urlPath.includes(path);\n    },\n\n    usePromoCode() {\n      bus.$emit('show-spinner', true);\n      let email = '';\n      let password = '';\n\n      if (this.client) {\n        email = this.client.email;\n        password = this.client.password;\n      }\n\n      axios.post('/api/guest/use_promo_code', {\n        promo_code: this.coupon_code,\n        email: email,\n        password: password\n      }).then(res => {\n        let result = res.data.result;\n        let error = res.data.error;\n\n        if (error != null) {\n          this.coupon_status.result = false;\n          this.coupon_status.message = error.message;\n        } else {\n          this.coupon_status.result = result.result;\n          this.coupon_status.message = result.message;\n          this.coupon_status.error = error;\n        }\n\n        this.show_coupon_status = true;\n\n        if (result != null && result.result) {\n          if (result.is_affiliate) {\n            CommonMethods.setCookie('coupon_code', this.coupon_code, 30);\n            CommonMethods.setCookie('coupon_affiliate', true, 30);\n            CommonMethods.removeCookie('inv_id');\n            CommonMethods.removeCookie('PIXEL_AFF');\n            let url = CommonVar.bb_url + \"/set-promo-code-session?referral_id=\" + result.referral_id + \"&aff_coupon=\" + this.coupon_code;\n            let iframe = document.createElement(\"iframe\");\n            iframe.setAttribute(\"src\", url);\n            iframe.setAttribute(\"id\", \"set-promo-code-session\");\n            iframe.style.display = \"none\";\n            document.body.appendChild(iframe);\n          }\n\n          bus.$emit('refresh-cart');\n        } else {\n          bus.$emit('show-spinner', false);\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    removeCoupon() {\n      bus.$emit('show-spinner', true);\n      axios.post('/api/guest/remove_coupon').then(res => {\n        CommonMethods.removeCookie('coupon_code');\n        this.show_coupon_status = false;\n        this.coupon_status.result = false;\n        this.coupon_code = false;\n        bus.$emit('refresh-cart');\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    removeFromCart(item) {\n      bus.$emit('show-spinner', true);\n      axios.post('/api/guest/remove_from_cart', {\n        id: item.id\n      }).then(res => {\n        if (this.flow === 'website') {\n          if (item.type === 'domain') {\n            window.location.href = CommonVar.niaga_url + 'order/website-instant/84';\n          } else if (item.type === 'hosting' || item.type == 'custom') {\n            window.location.href = CommonVar.niaga_url + 'membuat-website';\n          }\n        } else {\n          bus.$emit('refresh-cart');\n          /* It will uncheck additional feature checkbox, the listener is on AdditionalFeature.vue */\n\n          bus.$emit('remove-item', item);\n\n          if (item.type == 'wordpress') {\n            this.$emit('remove-wordpress');\n          }\n\n          if (item.is_added_to_cart) {\n            item.is_added_to_cart = false;\n          }\n\n          let action;\n          let tld;\n\n          if (item.type == 'domain') {\n            action = item.action;\n            tld = item[action + '_tld'];\n          } else {\n            action = item.domain.action;\n            tld = item.domain[action + '_tld'];\n          }\n\n          if (CommonVar.allow_mkt_script == true) {\n            Gtm.gtmRemoveFromCart(item.type, item.title, tld);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n      sessionStorage.removeItem('tmp_cart');\n    },\n\n    removeWordPress() {\n      axios.post(\"/api/guest/add_remove_auto_install_website\", {\n        is_add: false\n      }).catch(err => {\n        console.log(err);\n      });\n      axios.post(\"/api/guest/add_remove_install_wp_accelerator\", {\n        is_add: false\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    toUpperCase(str) {\n      return str.toUpperCase();\n    },\n\n    onScrollListener() {\n      let cartWrapper = document.getElementById(\"summary-cart-wrapper\");\n      let cartElement = document.getElementById(\"summary-cart\");\n\n      if (this.cart.items.length && screen.width > 991) {\n        if (Math.floor(window.scrollY) - 50 > cartWrapper.offsetTop) {\n          cartElement.classList.add('sticky-cart');\n          this.adjustResize();\n        } else {\n          cartElement.classList.remove('sticky-cart');\n        }\n      } else {\n        cartElement.classList.remove('sticky-cart');\n      }\n    },\n\n    adjustResize() {\n      let cartWrapper = document.getElementById(\"summary-cart-wrapper\");\n      let cartElement = document.getElementById(\"summary-cart\");\n      let itemElement = document.getElementById(\"summary-cart__item\");\n\n      if (screen.width > 991) {\n        /*For Desktop*/\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n\n        if (screen.height < 810) {\n          itemElement.classList.add(\"summary-cart__item--max-height\");\n        } else {\n          itemElement.classList.remove(\"summary-cart__item--max-height\");\n        }\n      } else {\n        /*For Mobile*/\n        cartElement.classList.remove('sticky-cart');\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n        itemElement.classList.remove(\"summary-cart__item--max-height\");\n      }\n    },\n\n    checkUserInputChange() {\n      this.$root.$on('user-input-change', status => {\n        return this.user_input_change = status;\n      });\n    },\n\n    setCouponStatus() {\n      this.$root.$on('set-coupon-status', status => {\n        this.coupon_status = status;\n      });\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    }\n\n  },\n  mounted: function () {\n    setTimeout(() => {\n      bus.$on('change-coupon-status', (msg, err) => {\n        this.coupon_status.result = false;\n        this.coupon_status.message = msg;\n        this.coupon_status.error = err;\n      });\n      bus.$on('refresh-coupon-status', () => {\n        this.coupon_code = false;\n        this.show_coupon_status = false;\n      });\n    }, 100);\n  },\n\n  created() {\n    this.getTaxRate();\n    this.checkUserInputChange();\n    window.addEventListener('scroll', () => {\n      this.onScrollListener();\n    });\n    window.addEventListener('resize', () => {\n      this.adjustResize();\n    });\n\n    if (sessionStorage.getItem('flow')) {\n      this.$emit('update-flow', sessionStorage.getItem('flow'));\n      this.flow = sessionStorage.getItem('flow');\n    }\n\n    this.setCouponStatus();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/SummaryCart.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_SummaryCartvue_type_script_lang_js_ = (SummaryCartvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/SummaryCart.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SummaryCart_component = normalizeComponent(\n  components_SummaryCartvue_type_script_lang_js_,\n  SummaryCartvue_type_template_id_01d0eaaa_scoped_true_render,\n  SummaryCartvue_type_template_id_01d0eaaa_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"01d0eaaa\",\n  null\n  \n)\n\n/* harmony default export */ const SummaryCart = (SummaryCart_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewSectionSummary.vue?vue&type=template&id=43c82380&scoped=true&\nvar NewSectionSummaryvue_type_template_id_43c82380_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{attrs:{\"id\":\"summary-cart-wrapper\"}},[_c('div',{attrs:{\"id\":\"summary-cart\"}},[_c('div',{staticClass:\"summary-cart\"},[_c('div',{staticClass:\"orderflow-step\"},[(_vm.flow === 'website' || _vm.flow === 'mailhosting')?_c('ul',[_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.orderflow_step == 1, 'orderflow-step__item--complete':_vm.orderflow_step > 1}},[(_vm.flow === 'website')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Atur Website & Domain\")]):_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Website & Domain\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.orderflow_step == 3, 'orderflow-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Metode Pembayaran\")])])]):(_vm.flow === 'vps_kvm')?_c('ul',[_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.orderflow_step == 1, 'orderflow-step__item--complete':_vm.orderflow_step > 1}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih VPS KVM\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.orderflow_step == 3, 'orderflow-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Metode Pembayaran\")])])]):_c('ul',[_c('li',{staticClass:\"orderflow-step__item\",class:{'orderflow-step__item--active':_vm.orderflow_step == 1, 'orderflow-step__item--complete':_vm.orderflow_step > 1}},[(_vm.flow === 'vps' && _vm.plan_type === 'cpanel')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih VPS cPanel\")]):(_vm.flow === 'vps')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Cloud VPS\")]):_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Hosting & Domain\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item\",class:{'orderflow-step__item--active':_vm.orderflow_step == 2, 'orderflow-step__item--complete':_vm.orderflow_step > 2}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Tambah Fitur\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item\",class:{'orderflow-step__item--active':_vm.orderflow_step == 3, 'orderflow-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"3. Metode Pembayaran\")])])])]),_vm._v(\" \"),_c('div',{class:{'d-block':_vm.show_summary_cart, 'd-none d-lg-block': !_vm.show_summary_cart}},[_c('div',{staticClass:\"summary-cart__item\",attrs:{\"id\":\"summary-cart__item\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.tmpCart.length)?_c('div',_vm._l((_vm.tmpCart),function(item){return _c('div',{key:item.id},[(item.action != 'owndomain')?_c('div',[_c('div',{staticClass:\"row mb-2\"},[_c('div',{staticClass:\"col-8\"},[_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(_vm._s(_vm.itemType(item)))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-4\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item, 'vps')}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[(item.type == 'domain' && !item.cart_type && item.cart_type == 'tmp_domain')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.register_sld + item.register_tld))]):_vm._e(),_vm._v(\" \"),(item.type == 'hosting' && _vm.flow === 'website')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.period_text))]):_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.title))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(item.total)))]),_vm._v(\" \"),(_vm.plan_type === 'cpanel' && item.type === 'cpanel_license')?_c('p',{staticClass:\"summary-cart__item-price\"},[_c('s',[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(item.discount_price)))])]):_vm._e()])]),_vm._v(\" \"),_c('hr')]):_vm._e()])}),0):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.tmpAdditionalItems.length && (_vm.orderflow_step == 2 || _vm.flow == 'orderdomain'))?_c('div',_vm._l((_vm.tmpAdditionalItems),function(item){return _c('div',{key:item.id},[_c('div',{staticClass:\"row mb-2\"},[_c('div',{staticClass:\"col-10\"},[(_vm.flow === 'vps')?_c('p',{staticClass:\"text-capitalize summary-cart__item-type\"},[_vm._v(\"\\n                                    \"+_vm._s(item.title.includes('Backup') ? 'Backup Cloud VPS' : item.title.includes('Backup') == false ? 'Control Panel Cloud VPS' : item.type)+\" \"+_vm._s(_vm.period[_vm.tmp_addon_period].text)+\"\\n                                  \")]):_c('p',{staticClass:\"summary-cart__item-type\",class:item.type == 'domainprivacy' ? 'text-capitalize' : 'text-uppercase'},[_vm._v(\"\\n                                    \"+_vm._s(item.type == 'domainprivacy' ? 'Domain Privacy' : item.type)+\"\\n                                  \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item, 'addon')}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.title))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[(_vm.flow === 'vps' || item.product_id == 76)?_c('p',{staticClass:\"summary-cart__item-price text-right\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(item.total)))]):_c('p',{staticClass:\"summary-cart__item-price text-right\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(item.price)))])])]),_vm._v(\" \"),_c('hr')])}),0):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.orderflow_step == 1 &&\n                          !_vm.tmp_cart.items.length &&\n                          !_vm.tmp_domain_suggestion.items.length &&\n                          _vm.flow != 'orderdomain')?_c('div',[_c('div',{staticClass:\"row justify-content-left\"},[_c('div',{staticClass:\"col-8\"},[(_vm.flow === 'website')?_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Website \"+_vm._s(_vm.templateName))]):(_vm.flow === 'mailhosting')?_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Mail Hosting \"+_vm._s(_vm.period[_vm.hosting.selected.period].text))]):(_vm.flow === 'vps' && _vm.plan_type === 'cpanel')?_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"VPS cPanel \"+_vm._s(_vm.period[_vm.vps.selected.period].text))]):(_vm.flow === 'vps')?_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Cloud VPS \"+_vm._s(_vm.period[_vm.vps.selected.period].text))]):(_vm.flow === 'vps_kvm')?_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"VPS KVM \"+_vm._s(_vm.period[_vm.vps_kvm.selected.period].text))]):_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Hosting \"+_vm._s(_vm.period[_vm.hosting.selected.period].text))])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-6\"},[(_vm.flow === 'website')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.period[_vm.hosting.selected.period].text))]):(_vm.flow === 'vps')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.vps.selected.plan.title))]):(_vm.flow === 'vps_kvm')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.vps_kvm.selected.plan.title))]):_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.hosting.selected.plan.title))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-6\"},[(_vm.flow != 'vps' && _vm.flow != 'vps_kvm')?_c('div',[(_vm.flow === 'website' && _vm.hosting.plan_period[_vm.hosting.selected.period].discount_enabled == 1)?_c('p',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_price)))]):(_vm.flow === 'website')?_c('p',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].price)))]):(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_enabled == 1)?_c('p',{staticClass:\"summary-cart__item-price\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_price)))]):_c('p',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].price)))])]):(_vm.flow === 'vps_kvm')?_c('div',[(_vm.vps_kvm.plan_period[_vm.vps_kvm.selected.period].discount_enabled == 1)?_c('p',{staticClass:\"summary-cart__item-price\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps_kvm.plan_period[_vm.vps_kvm.selected.period].discount_price)))]):_c('p',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps_kvm.plan_period[_vm.vps_kvm.selected.period].price)))])]):_c('div',[(_vm.vps.plan_period[_vm.vps.selected.period].discount_enabled == 1)?_c('p',{staticClass:\"summary-cart__item-price\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps.plan_period[_vm.vps.selected.period].discount_price)))]):_c('p',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps.plan_period[_vm.vps.selected.period].price)))])])])]),_vm._v(\" \"),_c('hr')]):_vm._e()]),_vm._v(\" \"),_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Pajak & Biaya Tambahan\")]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.taxName))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")((Number(_vm.tmp_cart.total) + Number(_vm.tmp_domain_suggestion.total) + Number(_vm.tmp_additional.total)) * _vm.taxRate)))])])]),_vm._v(\" \"),(_vm.coupon_code)?_c('div',[_c('hr'),_vm._v(\" \"),_c('div',{staticClass:\"row mb-2\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-4\"},[_c('p',{staticClass:\"font-size-18 text-right\",on:{\"click\":function($event){return _vm.removeCoupon()}}},[_c('span',{staticClass:\"fa fa-times remove-item\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-9\"},[_c('p',{staticClass:\"summary-cart__item-title summary-cart__item-title--kupon\"},[_vm._v(_vm._s(_vm.coupon_code))])])])]):_vm._e()],1)]),_vm._v(\" \"),_c('div',{staticClass:\"summary-cart__total\"},[_c('div',{staticClass:\"row align-items-center\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"col-8 col-lg-9\"},[_c('p',{staticClass:\"summary-cart__total-price\"},[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")((Number(_vm.tmp_cart.total) + Number(_vm.tmp_domain_suggestion.total) + Number(_vm.tmp_additional.total)) + ((Number(_vm.tmp_cart.total) + Number(_vm.tmp_domain_suggestion.total) + Number(_vm.tmp_additional.total)) * _vm.taxRate)))+\" \"),_c('span',{staticClass:\"badge badge-pill badge-light d-inline d-lg-none float-right\"},[_vm._v(_vm._s(_vm.tmp_cart.items.length + _vm.tmp_domain_suggestion.items.length + _vm.tmp_additional.items.length))])])]),_vm._v(\" \"),_c('a',{staticClass:\"col-1 d-block d-lg-none pl-0\",attrs:{\"href\":\"javascript:void(0);\",\"aria-label\":\"cart\"},on:{\"click\":function($event){_vm.show_summary_cart = !_vm.show_summary_cart}}},[(_vm.show_summary_cart)?_c('span',{staticClass:\"fa fa-angle-up\"}):_c('span',{staticClass:\"fa fa-angle-down\"})])])])]),_vm._v(\" \"),(_vm.nextStep)?_c('div',{staticClass:\"d-none d-lg-block\",staticStyle:{\"height\":\"48px\"},attrs:{\"id\":\"checkout-button-wrapper\"}},[_c('div',{attrs:{\"id\":\"checkout-button\"}},[_c('a',{staticClass:\"button-default button-block nunito-bold font-size-16\",class:_vm.btnNextDisabled ? 'button-disabled' : 'button-blue',attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":[_vm.nextOrderflowStep,function($event){$event.preventDefault();return _vm.btnNextDisabled.apply(null, arguments)}]}},[_vm._v(\"Lanjutkan\")])])]):_vm._e()])])}\nvar NewSectionSummaryvue_type_template_id_43c82380_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-8\"},[_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Kode Kupon yang digunakan\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-3 col-lg-3\"},[_c('p',{staticClass:\"summary-cart__total-title\"},[_vm._v(\"TOTAL\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/NewSectionSummary.vue?vue&type=template&id=43c82380&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/NewSectionSummary.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const NewSectionSummaryvue_type_script_lang_js_ = ({\n  name: \"NewSectionSummary\",\n  props: ['tmp_cart', 'tmp_domain_suggestion', 'orderflow_step', 'hosting', 'vps', 'vps_kvm', 'hostname', 'tmp_additional', 'flow', 'is_hosting_selected', 'is_only_domain', 'coupon_code', 'cart', 'plan_type'],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_summary_cart: false,\n      templateName: localStorage.getItem('website-template-name'),\n      templatePrice: localStorage.getItem('website-template-price'),\n      tmp_addon_period: '',\n      btn_next_disabled: false,\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n  computed: {\n    tmpCart() {\n      let items = this.tmp_cart.items.concat(this.tmp_domain_suggestion.items);\n      return items.filter(item => {\n        return item.id != 1;\n      });\n    },\n\n    tmpAdditionalItems() {\n      let additionalItems = this.tmp_additional.items.filter(item => {\n        return item.id != undefined;\n      });\n\n      if (this.checkFreeSslInCart()) {\n        additionalItems.push(this.checkFreeSslInCart());\n      }\n\n      return additionalItems;\n    },\n\n    nextStep() {\n      let step = false;\n\n      if (this.orderflow_step != 3 && this.flow != 'orderdomain' && this.tmp_cart.items.length || this.orderflow_step == 1 && this.flow == 'orderdomain' && this.is_hosting_selected && (this.tmp_cart.items.length || this.tmp_domain_suggestion.items.length) || this.orderflow_step != 1 && this.orderflow_step != 3 && (this.tmp_cart.items.length || this.tmp_domain_suggestion.items.length) || this.orderflow_step == 1 && this.flow == 'vps' && this.tmp_cart.items.length && this.hostname.length || this.orderflow_step == 1 && this.flow == 'vps_kvm' && this.tmp_cart.items.length) {\n        step = true;\n      }\n\n      return step;\n    },\n\n    btnNextDisabled() {\n      return this.btn_next_disabled;\n    }\n\n  },\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  methods: {\n    itemType(item) {\n      let itemType = 'Domain';\n\n      if (item.type === 'hosting' && (this.flow === 'hosting' || this.flow === 'cloudhosting' || this.flow === 'orderdomain')) {\n        itemType = 'Hosting ' + item.period_text;\n      } else if (item.type === 'hosting' && this.flow === 'website') {\n        itemType = item.title;\n      } else if (item.type === 'hosting' && this.flow === 'mailhosting') {\n        itemType = 'Mail Hosting ' + item.period_text;\n      } else if (item.type === 'domain' && item.action === 'transfer') {\n        itemType = 'Transfer Domain';\n      } else if (this.flow === 'vps' && this.plan_type === 'cpanel') {\n        if (item.type === 'cpanel_license') {\n          itemType = `Control Panel ${item.period_text}`;\n        } else {\n          itemType = 'VPS cPanel ' + item.period_text;\n        }\n      } else if (this.flow === 'vps') {\n        itemType = 'Cloud VPS ' + item.period_text;\n      } else if (this.flow === 'vps_kvm') {\n        itemType = 'VPS KVM ' + item.period_text;\n      }\n\n      return itemType;\n    },\n\n    nextOrderflowStep() {\n      if (!this.btn_next_disabled) {\n        if (this.flow == 'orderdomain' && this.orderflow_step == 1 && !this.is_only_domain) {\n          bus.$emit('add-hosting-to-cart');\n        } else {\n          bus.$emit('next-orderflow-step');\n        }\n      }\n    },\n\n    checkUrlPath(path) {\n      let urlPath;\n      urlPath = window.location.pathname.split('/');\n      return urlPath.includes(path);\n    },\n\n    removeFromCart(item, productType) {\n      bus.$emit('show-add-to-chart', true);\n      bus.$emit('show-spinner', true);\n\n      if (this.flow == 'vps' || this.flow == 'vps_kvm') {\n        const key = productType === 'vps' ? 'tmp_cart' : 'tmp_additional';\n        bus.$emit('remove-from-cart', key, item.id);\n        bus.$emit('show-spinner', false);\n\n        if (key === 'tmp_additional' && item.title.includes('cPanel')) {\n          bus.$emit('reset-plan-upgrade');\n          sessionStorage.setItem('os_template', null);\n        }\n\n        return false;\n      }\n\n      axios.post('/api/guest/remove_from_cart', {\n        id: item.id\n      }).then(res => {\n        if (this.flow === 'website') {\n          if (item.type === 'domain') {\n            window.location.href = CommonVar.niaga_url + 'order/website-instant/84';\n          } else if (item.type === 'hosting') {\n            window.location.href = CommonVar.niaga_url + 'membuat-website';\n          }\n        } else if (this.flow === 'vps') {\n          window.location.href = CommonVar.niaga_url + 'ordervps';\n        } else if (this.flow === 'vps_kvm') {\n          window.location.href = CommonVar.niaga_url + 'ordervps-kvm';\n        } else {\n          if (item.cart_type == 'tmp_hosting') {\n            sessionStorage.removeItem('tmp_cart_hosting');\n            sessionStorage.removeItem('tmp_cart_domain');\n          }\n\n          if (item.cart_type == 'tmp_domain') {\n            sessionStorage.removeItem('tmp_cart_domain');\n          }\n\n          if (sessionStorage.getItem('tmp_domain_suggestion_' + item.id)) {\n            sessionStorage.removeItem('tmp_domain_suggestion_' + item.id);\n          }\n\n          if (this.flow == 'orderdomain' && (item.type == 'domain' || item.type == 'hosting')) {\n            bus.$emit('remove-from-sesssion-storage', 'additional_feature_domainprivacy_');\n          }\n\n          if (item.type == 'domainprivacy') {\n            let domainPrivacyKey = this.orderflow_step == 1 ? js_CommonMethods/* default.formatDomain */.Z.formatDomain(item.sld + item.tld, '_') : item.id;\n            sessionStorage.removeItem('additional_feature_domainprivacy_' + domainPrivacyKey);\n          }\n\n          bus.$emit('refresh-cart');\n          /* It will uncheck additional feature checkbox, the listener is on AdditionalFeature.vue */\n\n          bus.$emit('remove-item', item);\n          let action;\n          let tld;\n\n          if (item.type === 'domain') {\n            action = item.action;\n            tld = item[action + '_tld'];\n          } else {\n            action = item.domain.action;\n            tld = item.domain[action + '_tld'];\n          }\n\n          if (CommonVar.allow_mkt_script == true) {\n            Gtm.gtmRemoveFromCart(item.type, item.title, tld);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      }).finally(() => {\n        if (!this.tmp_cart.items.length && !this.tmp_domain_suggestion.items.length) {\n          location.reload();\n        }\n      });\n    },\n\n    toUpperCase(str) {\n      return str.toUpperCase();\n    },\n\n    adjustResize() {\n      let cartWrapper = document.getElementById(\"summary-cart-wrapper\");\n      let cartElement = document.getElementById(\"summary-cart\");\n      let itemElement = document.getElementById(\"summary-cart__item\");\n\n      if (screen.width > 991) {\n        /*For Desktop*/\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n\n        if (screen.height < 768) {\n          itemElement.classList.add(\"summary-cart__item--max-height\");\n        } else {\n          itemElement.classList.remove(\"summary-cart__item--max-height\");\n        }\n      } else {\n        /*For Mobile*/\n        cartElement.classList.remove('sticky-cart');\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n        itemElement.classList.remove(\"summary-cart__item--max-height\");\n      }\n    },\n\n    removeCoupon() {\n      this.$root.$emit('remove-coupon');\n    },\n\n    checkFreeSslInCart() {\n      let ssl;\n\n      if (this.cart) {\n        this.cart.items.forEach(item => {\n          if (item.product_id == 76 && item.free_ssl_hosting === true) {\n            ssl = item;\n          }\n        });\n      }\n\n      return ssl;\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    }\n\n  },\n  mounted: function () {\n    setTimeout(() => {\n      bus.$on('set-next-btn', val => {\n        this.btn_next_disabled = val;\n      });\n    }, 100);\n  },\n\n  created() {\n    this.getTaxRate();\n\n    if (this.flow == 'vps' && this.orderflow_step == 2) {\n      if (sessionStorage.getItem('tmp_additional')) {\n        this.tmp_additional = JSON.parse(sessionStorage.getItem('tmp_additional'));\n      } else {\n        this.tmp_additional = {\n          items: [],\n          total: 0\n        };\n      }\n\n      let vps_plan = JSON.parse(sessionStorage.getItem('vps_plan'));\n      this.tmp_addon_period = vps_plan.period;\n    }\n\n    window.addEventListener('resize', () => {\n      this.adjustResize();\n    });\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/NewSectionSummary.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_NewSectionSummaryvue_type_script_lang_js_ = (NewSectionSummaryvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/NewSectionSummary.vue\n\n\n\n\n\n/* normalize component */\n;\nvar NewSectionSummary_component = normalizeComponent(\n  components_NewSectionSummaryvue_type_script_lang_js_,\n  NewSectionSummaryvue_type_template_id_43c82380_scoped_true_render,\n  NewSectionSummaryvue_type_template_id_43c82380_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"43c82380\",\n  null\n  \n)\n\n/* harmony default export */ const NewSectionSummary = (NewSectionSummary_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowDomain/HostingPlan.vue?vue&type=template&id=d6fd5f84&scoped=true&\nvar HostingPlanvue_type_template_id_d6fd5f84_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hosting-package mt-5\",attrs:{\"id\":\"hosting-package\"}},[_c('h2',{staticClass:\"hosting-package__title\"},[_vm._v(\"Pilih Paket Unlimited Hosting\")]),_vm._v(\" \"),_c('div',{staticClass:\"hosting-select\"},[_c('div',{ref:\"select-period\",staticClass:\"hosting-select__item\",class:{'hosting-select--show-option': _vm.show_hosting_plan_select_option},on:{\"click\":function($event){return _vm.showHideHostingPlanSelectOption()}}},[_c('p',[_c('strong',[_vm._v(\"Durasi \"+_vm._s(_vm.period[_vm.hosting.selected.period].text))]),_vm._v(\" \"),(_vm.hosting.selected.product_id == 24)?_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\\n        \")]):_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain 1 Tahun Pertama\\n        \")])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_hosting_plan_select_option)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({ exclude: ['select-period'], handler: 'onClose' }),expression:\"{ exclude: ['select-period'], handler: 'onClose' }\"}],staticClass:\"hosting-select__option\"},_vm._l((_vm.hosting.plan_period),function(periodPrice,x){return (periodPrice.enabled == 1 && x != '1M')?_c('li',{key:x,attrs:{\"data-product\":_vm.hosting.selected.plan.title,\"data-period\":x},on:{\"click\":function($event){return _vm.chooseHostingPeriod(x)}}},[_c('strong',[_vm._v(\"Durasi \"+_vm._s(_vm.period[x].text))]),_vm._v(\" \"),(_vm.hosting.selected.product_id == 24)?_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Tanpa Gratis Domain\\n          \")]):_c('span',[_c('strong',[_vm._v(\"-\")]),_vm._v(\" Gratis Domain 1 Tahun Pertama\\n          \")])]):_vm._e()}),0):_vm._e()])],1),_vm._v(\" \"),_c('div',{staticClass:\"hosting-plan row no-gutters align-items-end ml-0 mr-0\",on:{\"click\":function($event){return _vm.isHostingSelected()}}},[_c('div',{staticClass:\"hosting-plan__list col-lg-3 gtmHostingPlan mb-4\",on:{\"click\":_vm.isOnlyDomain}},[_c('div',{staticClass:\"hosting-plan__inner\",class:{ 'hosting-plan__list--selected': _vm.is_only_domain }},[_c('h3',{staticClass:\"hosting-plan__title\"},[_vm._v(\"Tanpa Hosting\")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-plan__info hosting-plan__info--only-domain d-none d-lg-block\"},[_vm._v(\"Hanya Domain\")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-plan__ssl d-none d-lg-block\"},[_vm._v(\"Tanpa SSL Gratis\")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-plan__info d-none d-lg-block\"},[_vm._v(\"Pilih untuk membeli domain tanpa order hosting\")])])]),_vm._v(\" \"),_vm._l((_vm.hostingPlans),function(plan){return _c('div',{key:plan.id,staticClass:\"hosting-plan__list col-lg-3 gtmHostingPlan mb-4\",class:{'hosting-plan__list--selected-mobile':plan.id == _vm.hosting.selected.product_id},on:{\"click\":function($event){return _vm.chooseHostingPlan(plan)}}},[_c('div',{staticClass:\"hosting-plan__inner\",class:{'hosting-plan__list--selected': plan.id == _vm.hosting.selected.product_id}},[(_vm.hosting.selected.period != '6M')?_c('p',{staticClass:\"hosting-plan__discount\",class:{ 'hosting-plan--bg-orange': plan.id == 26 }},[_vm._v(\"\\n          Diskon\\n          \"+_vm._s(_vm.discountPrice(\n          plan.pricing.recurrent[_vm.hosting.selected.period].discount_price,\n          plan.pricing.recurrent[_vm.hosting.selected.period].price\n          ))+\"%\\n        \")]):_vm._e(),_vm._v(\" \"),_c('h3',{staticClass:\"hosting-plan__title hosting-plan__title--margin-bottom\"},[_vm._v(_vm._s(plan.title))]),_vm._v(\" \"),(plan.pricing.recurrent[_vm.hosting.selected.period].discount_enabled)?_c('p',{staticClass:\"hosting-plan__price d-none d-lg-block\"},[_c('s',[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(plan.pricing.recurrent[_vm.hosting.selected.period].price)))])]):_vm._e(),_vm._v(\" \"),(plan.pricing.recurrent[_vm.hosting.selected.period].discount_enabled == 1)?_c('p',{staticClass:\"hosting-plan__sale-price\"},[_vm._v(\"\\n          Rp \"+_vm._s(_vm._f(\"formatPrice\")(plan.pricing.recurrent[_vm.hosting.selected.period].discount_price / _vm.period[_vm.hosting.selected.period].num_of_month))+\"/bln\\n        \")]):_c('p',{staticClass:\"hosting-plan__sale-price\"},[_vm._v(\"\\n          Rp \"+_vm._s(_vm._f(\"formatPrice\")(plan.pricing.recurrent[_vm.hosting.selected.period].price / _vm.period[_vm.hosting.selected.period].num_of_month))+\"/bln\\n        \")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-plan__ssl hosting-plan__ssl--blue d-none d-lg-block\",class:{ 'hosting-plan--color-orange': plan.id == 26 }},[_vm._v(\"Domain dan SSL Gratis\")]),_vm._v(\" \"),(plan.id == 25)?_c('p',{staticClass:\"hosting-plan__info d-none d-lg-block\"},[_vm._v(\"Budget Minimal, untuk Landing Page dan Blog Pribadi\")]):_vm._e(),_vm._v(\" \"),(plan.id == 26)?_c('p',{staticClass:\"hosting-plan__info d-none d-lg-block\"},[_vm._v(\"Untuk Website UKM, Organisasi, Komunitas, dan Toko Online\")]):_vm._e(),_vm._v(\" \"),(plan.id == 27)?_c('p',{staticClass:\"hosting-plan__info d-none d-lg-block\"},[_vm._v(\"Untuk Website Bisnis, Portal Berita, dan e-commerce\")]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"d-block d-lg-none\",class:'hosting-plan__detail-' + plan.slug},[_c('i',{staticClass:\"fas\",class:_vm.hosting.selected.show_detail &&\n              plan.id == _vm.hosting.selected.product_id\n                ? 'fa-chevron-up'\n                : 'fa-chevron-down',on:{\"click\":function($event){return _vm.toggleHostingDetail(plan)}}})])]),_vm._v(\" \"),(_vm.hosting.selected.show_detail && plan.id == _vm.hosting.selected.product_id)?_c('div',{staticClass:\"hosting-plan__detail d-block d-lg-none\"},_vm._l((plan.plan_details),function(details,x){return _c('p',{key:x},[_vm._v(_vm._s(details))])}),0):_vm._e()])})],2),_vm._v(\" \"),_c('div',{staticClass:\"hosting-plan-details d-none d-lg-block\"},[_c('div',{staticClass:\"row\"},[_c('p',{staticClass:\"hosting-plan-details__action col-lg-5 offset-lg-5\",class:{'hosting-plan-details__action--show': _vm.show_hosting_plan_details},on:{\"click\":function($event){_vm.show_hosting_plan_details = !_vm.show_hosting_plan_details}}},[_vm._v(\"Rincian Layanan Paket Unlimited Hosting\")])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_hosting_plan_details)?_c('div',{staticClass:\"row no-gutters justify-content-end\"},_vm._l((_vm.hosting.plans),function(plan){return (plan.id != 24)?_c('div',{key:plan.id,staticClass:\"col-lg-3\",class:'hosting-plan-details__' + plan.slug},_vm._l((plan.plan_details),function(details,key){return _c('p',{key:key,staticClass:\"hosting-plan-details__item\"},[_vm._v(_vm._s(details))])}),0):_vm._e()}),0):_vm._e()])],1)])}\nvar HostingPlanvue_type_template_id_d6fd5f84_scoped_true_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowDomain/HostingPlan.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const OrderFlowDomain_HostingPlanvue_type_script_lang_js_ = ({\n  name: \"HostingPlan\",\n  props: [\"hosting\", \"flow\", \"tmp_cart\", \"is_only_domain\"],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_hosting_plan_select_option: false,\n      show_hosting_plan_details: false\n    };\n  },\n  computed: {\n    hostingPlans() {\n      return Object.values(this.hosting.plans).filter(item => {\n        return item.pricing.recurrent[this.hosting.selected.period].enabled && item.id != 24;\n      });\n    }\n\n  },\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  methods: {\n    showHideHostingPlanSelectOption() {\n      this.show_hosting_plan_select_option = !this.show_hosting_plan_select_option;\n    },\n\n    chooseHostingPlan(plan) {\n      this.$emit(\"is-only-domain\", false);\n      bus.$emit(\"update-domain-price\", false);\n      this.hosting.plan_period = plan.pricing.recurrent;\n      this.hosting.selected.product_id = plan.id;\n      this.hosting.selected.plan = plan;\n      this.hosting.selected.sync_coupon = false;\n      this.$emit(\"update-hosting-plan\", this.hosting);\n      Gtm.trackingClickCTA('Click CTA', 'OrderDomain_ChooseHosting_' + plan.title);\n    },\n\n    chooseHostingPeriod(period) {\n      this.hosting.selected.period = period;\n      this.showHideHostingPlanSelectOption();\n      this.$emit(\"update-hosting-plan\", this.hosting);\n      bus.$emit(\"update-domain-price\", false);\n      Gtm.trackingClickCTA('Click CTA', 'OrderDomain_ChooseHostingPeriod_' + period);\n    },\n\n    onClose() {\n      this.show_hosting_plan_select_option = false;\n    },\n\n    discountPrice(discount, price) {\n      let discountPrice;\n      discountPrice = Math.round((1 - discount / price) * 100);\n      return discountPrice;\n    },\n\n    isHostingSelected() {\n      bus.$emit(\"is-hosting-selected\", true);\n    },\n\n    setHostingPlanDetails() {\n      let planDetails = {\n        pelajar: [\"Unlimited Disk Space\", \"Unlimited Bandwidth\", \"Unlimited Email Accounts\", \"Unlimited Databases\", \"10 Addon Domains\", \"Instant Backup\", \"Gratis Domain\", \"Gratis Unlimited SSL\", \"Free Premium Course\"],\n        personal: [\"Unlimited Disk Space\", \"Unlimited Bandwidth\", \"Unlimited Email Accounts\", \"Unlimited Databases\", \"Unlimited Addon Domains\", \"Instant Backup\", \"Gratis Domain\", \"Free Premium Course\", \"Akses SSH\", \"Gratis Unlimited SSL\", \"SpamAssassin Protection\"],\n        bisnis: [\"Unlimited Disk Space\", \"Unlimited Bandwidth\", \"Unlimited Email Accounts\", \"Unlimited Databases\", \"Unlimited Addon Domains\", \"Instant Backup\", \"Gratis Domain\", \"Free Premium Course\", \"Akses SSH\", \"Gratis Unlimited SSL\", \"SpamAssassin Mail Protection\", \"SpamExpert Protection\", \"Prioritas Layanan Support\"]\n      };\n      this.hosting.plans.forEach(plan => {\n        plan[\"plan_details\"] = planDetails[plan.slug];\n      });\n    },\n\n    toggleHostingDetail(plan) {\n      if (plan.id == this.hosting.selected.product_id) {\n        this.hosting.selected.show_detail = !this.hosting.selected.show_detail;\n        return;\n      }\n\n      this.hosting.selected.show_detail = true;\n    },\n\n    isOnlyDomain() {\n      this.$emit(\"is-only-domain\", true);\n      this.hosting.selected.product_id = false;\n      bus.$emit(\"update-domain-price\", true);\n      Gtm.trackingClickCTA('Click CTA', 'OrderDomain_NoHosting');\n    }\n\n  },\n  mounted: function () {\n    document.getElementById(\"hosting-package\").scrollIntoView();\n    this.hosting.selected.product_id = false;\n    this.setHostingPlanDetails();\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/HostingPlan.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_OrderFlowDomain_HostingPlanvue_type_script_lang_js_ = (OrderFlowDomain_HostingPlanvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowDomain/HostingPlan.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderFlowDomain_HostingPlan_component = normalizeComponent(\n  components_OrderFlowDomain_HostingPlanvue_type_script_lang_js_,\n  HostingPlanvue_type_template_id_d6fd5f84_scoped_true_render,\n  HostingPlanvue_type_template_id_d6fd5f84_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"d6fd5f84\",\n  null\n  \n)\n\n/* harmony default export */ const OrderFlowDomain_HostingPlan = (OrderFlowDomain_HostingPlan_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=template&id=207cad02&scoped=true&\nvar WebsitePlanvue_type_template_id_207cad02_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hosting-package\"},[_c('p',{staticClass:\"hosting-package__title\"},[_vm._v(\"Website Instan\")]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-4 col-7\"},[_c('img',{staticClass:\"hosting-package__website-image\",attrs:{\"src\":_vm.templateImage,\"alt\":\"website-instan\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-8 col-5 pl-1\"},[_c('div',[_c('span',{staticClass:\"hosting-package__website-title\"},[_vm._v(_vm._s(_vm.templateName))]),_c('i',{staticClass:\"fas fa-check hosting-package__website-label\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"hosting-package__website-category\"},[_vm._v(_vm._s(_vm.templateCategory))]),_vm._v(\" \"),(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_price > 0)?_c('div',[_c('span',{staticClass:\"hosting-package__website-price-number\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_price)))]),_c('span',{staticClass:\"hosting-package__website-price-year\"},[_vm._v(\"/\"+_vm._s(_vm.period[_vm.hosting.selected.period].text.toLowerCase().replace('1 ', '')))])]):_c('div',[_c('span',{staticClass:\"hosting-package__website-price-number\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].price)))]),_c('span',{staticClass:\"hosting-package__website-price-year\"},[_vm._v(\"/\"+_vm._s(_vm.period[_vm.hosting.selected.period].text.toLowerCase().replace('1 ', '')))])])])]),_vm._v(\" \"),_c('h3',{staticClass:\"hosting-package__title mt-2\"},[_vm._v(\"Pilih Durasi Paket\")]),_vm._v(\" \"),_c('div',{staticClass:\"row no-gutters align-items-end ml-0 mr-0\",class:{'select--disabled': _vm.tmp_cart.items.length}},_vm._l((_vm.hosting.plan_period),function(periodPrice,x){return (periodPrice.enabled == 1 && x != '1M')?_c('div',{key:x,staticClass:\"col-lg-3 hosting-duration gtmHostingPlan mb-4\",attrs:{\"data-product\":_vm.hosting.selected.plan.title,\"data-period\":x},on:{\"click\":function($event){return _vm.chooseHostingPeriod(x)}}},[_c('div',{staticClass:\"hosting-duration__list\",class:{'hosting-duration--selected':_vm.hosting.selected.period == x}},[(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__discount\",class:{'button-white-orange': x == '3Y' && _vm.hosting.selected.period != x, 'hosting-duration__discount--normal': x != '3Y' || _vm.hosting.selected.period == x }},[_vm._v(\"\\n                    Diskon \"+_vm._s(_vm.gimmick_discount != 'undefined' && x == '1Y' ? _vm.gimmick_discount : _vm.discountPrice(periodPrice.discount_price, periodPrice.price))+\"%\\n                \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"hosting-duration__period mb-4\"},[_c('p',{staticClass:\"hosting-duration__period-year hosting-duration--half\"},[_vm._v(_vm._s(_vm.period[x].text))]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__period-price hosting-duration__period-price--light d-none d-lg-block\"},[_c('s',[_vm._v(\"Rp. \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price)))])]):_vm._e(),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__period-price hosting-duration__period-price--bold hosting-duration--half\"},[_vm._v(\"\\n                        Rp. \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price / _vm.period[x].num_of_month))+\"/bln\\n                    \")]):_c('p',{staticClass:\"hosting-duration__period-price hosting-duration__period-price--bold hosting-duration--half\"},[_vm._v(\"\\n                        Rp. \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price / _vm.period[x].num_of_month))+\"/bln\\n                    \")]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                        Rp. \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price))+\"\\n                    \")]):_vm._e()])])]):_vm._e()}),0)])}\nvar WebsitePlanvue_type_template_id_207cad02_scoped_true_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const WebsitePlanvue_type_script_lang_js_ = ({\n  name: \"WebsitePlan\",\n  props: [\"hosting\", 'tmp_cart', \"flow\"],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      templateImage: localStorage.getItem('website-template-image'),\n      templateCategory: localStorage.getItem('website-template-category'),\n      templateName: localStorage.getItem('website-template-name'),\n      gimmick_discount: localStorage.getItem('website-template-gimmick-discount')\n    };\n  },\n  filters: {\n    formatPrice(value) {\n      return CommonMethods.formatPrice(value);\n    }\n\n  },\n  methods: {\n    discountPrice(discount, price) {\n      let discountPrice;\n      discountPrice = Math.round((1 - discount / price) * 100);\n      return discountPrice;\n    },\n\n    chooseHostingPeriod(period) {\n      this.hosting.selected.period = period;\n      this.$emit('update-hosting-plan', this.hosting);\n      setTimeout(() => {\n        bus.$emit('virtual-page-view', 'package-selection');\n      }, 500);\n    },\n\n    checkData() {\n      var value = localStorage.getItem('website-template-id');\n      var selectedpricing = localStorage.getItem('website-template-price-selected');\n\n      if (!value) {\n        window.location.href = \"/membuat-website\";\n      }\n\n      if (!selectedpricing || selectedpricing == 'undefined') {\n        selectedpricing = '1Y';\n      }\n\n      this.hosting.selected.period = selectedpricing;\n      this.$emit('update-hosting-plan', this.hosting);\n      setTimeout(() => {\n        bus.$emit('virtual-page-view', 'package-selection');\n      }, 500);\n    }\n\n  },\n\n  mounted() {\n    this.checkData();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_WebsitePlanvue_type_script_lang_js_ = (WebsitePlanvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=style&index=0&id=207cad02&scoped=true&lang=css&\nvar WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_ = __webpack_require__(\"./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=style&index=0&id=207cad02&scoped=true&lang=css&\");\n;// CONCATENATED MODULE: ./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=style&index=0&id=207cad02&scoped=true&lang=css&\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_options = {};\n\nWebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_options.styleTagTransform = (styleTagTransform_default());\nWebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_options.setAttributes = (setAttributesWithoutAttributes_default());\n\n      WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_options.insert = insertBySelector_default().bind(null, \"head\");\n    \nWebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_options.domAPI = (styleDomAPI_default());\nWebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_options.insertStyleElement = (insertStyleElement_default());\n\nvar WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_update = injectStylesIntoStyleTag_default()(WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_/* default */.Z, WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_options);\n\n\n\n\n       /* harmony default export */ const OrderFlowWebsite_WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_ = (WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_/* default */.Z && WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_/* default.locals */.Z.locals ? WebsitePlanvue_type_style_index_0_id_207cad02_scoped_true_lang_css_/* default.locals */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=style&index=0&id=207cad02&scoped=true&lang=css&\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsitePlan.vue\n\n\n\n;\n\n\n/* normalize component */\n\nvar WebsitePlan_component = normalizeComponent(\n  OrderFlowWebsite_WebsitePlanvue_type_script_lang_js_,\n  WebsitePlanvue_type_template_id_207cad02_scoped_true_render,\n  WebsitePlanvue_type_template_id_207cad02_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"207cad02\",\n  null\n  \n)\n\n/* harmony default export */ const WebsitePlan = (WebsitePlan_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyList.vue?vue&type=template&id=44336737&\nvar WebsiteDiyListvue_type_template_id_44336737_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list\"},[_c('div',{staticClass:\"row\"},[_vm._l((_vm.listWebsite),function(list,listIndex){return _c('div',{key:listIndex,staticClass:\"col-12 col-sm-6 col-xl-6\"},[(list.page == _vm.currentPage)?_c('div',{staticClass:\"block-website__content-list-item\"},[_c('div',{staticClass:\"block-website__content-list-item-box\"},[_c('div',{staticClass:\"block-website__content-list-item-box-image\"},[_vm._m(0,true),_vm._v(\" \"),_c('img',{attrs:{\"src\":list.item.url_img,\"alt\":\"\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-overlay\"},[_c('a',{staticClass:\"nh-btn\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.previewModal(list.item)}}},[_vm._v(\"LIHAT PREVIEW\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content\"},[_c('div',{staticClass:\"block-website__content-list-item-box-content-title\"},[_vm._v(_vm._s(list.item.title))]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-category\"},[_vm._v(_vm._s(list.item.category))]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-description\"},[_vm._v(_vm._s(list.item.description))]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\"},_vm._l((list.item.point.left),function(pointLeft,pointLeftIndex){return _c('div',{key:pointLeftIndex,staticClass:\"block-website__content-list-item-box-content-point-col-item\"},[_vm._m(1,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-text\"},[_vm._v(_vm._s(pointLeft))])])}),0),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\"},_vm._l((list.item.point.right),function(pointRight,pointLeftRight){return _c('div',{key:pointLeftRight,staticClass:\"block-website__content-list-item-box-content-point-col-item\"},[_vm._m(2,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-text\"},[_vm._v(_vm._s(pointRight))])])}),0)])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-price\"},[_vm._m(3,true),_vm._v(\" \"),_c('div',[_c('a',{staticClass:\"nh-btn nh-btn--orange\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.showOrder(list.item)}}},[_vm._v(\"PILIH WEBSITE INI\")])])])])])]):_vm._e()])}),_vm._v(\" \"),(_vm.notFoundStatus)?_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"block-website__content-list-not-found\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-6 offset-lg-3 col-md-8 offset-md-2\"},[_c('div',{staticClass:\"block-website__content-list-not-found-media\"},[_c('video',{attrs:{\"autoplay\":\"\",\"loop\":\"\",\"width\":\"100%\",\"height\":\"auto\",\"muted\":\"muted\",\"preload\":\"none\",\"poster\":\"/assets/images/2020/membuat-website/No_themes.svg\"},domProps:{\"muted\":true}},[_c('source',{attrs:{\"src\":\"/assets/images/2020/membuat-website/No_themes.mp4\",\"type\":\"video/mp4\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-not-found-title\"},[_vm._v(\"Yaaah, website “\"+_vm._s(_vm.keywordSearch)+\"” gak ada\")])]),_vm._v(\" \"),_vm._m(4)])])]):_vm._e()],2)])}\nvar WebsiteDiyListvue_type_template_id_44336737_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-image-browser\"},[_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-icon\"},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/checklist-icon-website-instant.svg\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-icon\"},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/checklist-icon-website-instant.svg\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-content-price-left\"},[_c('div',{staticClass:\"block-website__content-list-item-box-content-subprice\"},[_vm._v(\"Rp 100.000\"),_c('sub',[_vm._v(\"/bln\")])]),_vm._v(\" \"),_c('div',[_vm._v(\"Rp 62.500\"),_c('sub',[_vm._v(\"/bln\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-12 col-lg-4 offset-lg-4 col-md-6 offset-md-3\"},[_c('div',{staticClass:\"block-website__content-list-not-found-description\"},[_vm._v(\"\\n                  Coba cari website yang lain, kami masih punya kok website yang bagus - bagus selain itu\\n                \")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyList.vue?vue&type=template&id=44336737&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyList.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const WebsiteDiyListvue_type_script_lang_js_ = ({\n  name: \"WebsiteDiyList\",\n\n  created() {\n    this.getDiyList();\n  },\n\n  data() {\n    return {\n      resourceWebsite: [],\n      listWebsite: [],\n      notFoundStatus: false,\n      keywordSearch: '',\n      totalPage: 1\n    };\n  },\n\n  methods: {\n    getDiyList() {\n      axios.get(\"/api/guest/get-website-template-list\").then(res => {\n        if (res.data) {\n          this.resourceWebsite = res.data;\n          this.listWebsite = res.data;\n          this.setPagination(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    previewModal(data) {\n      this.$emit(\"preview-modal\", {\n        status: true,\n        data: data\n      });\n    },\n\n    showOrder(data) {\n      this.$emit(\"order\", {\n        status: true,\n        data: data\n      });\n    },\n\n    updateCategory(data) {\n      let resource = this.resourceWebsite;\n\n      if (data == \"Semua Website\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      var categoryList = [];\n\n      for (var i in resource) {\n        if (resource[i].category == data) {\n          categoryList.push(resource[i]);\n        }\n      }\n\n      this.currentPage = 1;\n      this.setPagination(categoryList);\n    },\n\n    searchWebsite(data) {\n      let resource = this.resourceWebsite;\n\n      if (data === \"\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      let keyword = data.toLowerCase();\n      var searchList = [];\n      let notFoundStatus = true;\n\n      for (var i in resource) {\n        var title = resource[i].title.toLowerCase();\n\n        if (title.indexOf(data) !== -1) {\n          searchList.push(resource[i]);\n          notFoundStatus = false;\n        }\n      }\n\n      this.notFoundStatus = notFoundStatus;\n      this.keywordSearch = data;\n      this.currentPage = 1;\n      this.setPagination(searchList);\n    },\n\n    setPagination(data) {\n      var page = 0;\n      var dataList = [];\n\n      for (var i in data) {\n        if (i % 6 == 0) {\n          page += 1;\n        }\n\n        dataList.push({\n          page: page,\n          item: data[i]\n        });\n      }\n\n      this.totalPage = page;\n      this.listWebsite = dataList;\n      this.$emit(\"pagination\", {\n        totalPage: this.totalPage,\n        currentPage: this.currentPage,\n        totalResource: this.resourceWebsite.length > 6 ? 6 : this.resourceWebsite.length\n      });\n      this.$emit(\"list-website\", this.listWebsite);\n    }\n\n  },\n  props: [\"preview\", \"category\", \"search\", \"currentPage\"],\n  watch: {\n    category: function (data) {\n      this.updateCategory(data);\n    },\n    search: function (data) {\n      this.searchWebsite(data);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyList.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_WebsiteDiyListvue_type_script_lang_js_ = (WebsiteDiyListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar WebsiteDiyList_component = normalizeComponent(\n  OrderFlowWebsite_WebsiteDiyListvue_type_script_lang_js_,\n  WebsiteDiyListvue_type_template_id_44336737_render,\n  WebsiteDiyListvue_type_template_id_44336737_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const WebsiteDiyList = (WebsiteDiyList_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyListSecond.vue?vue&type=template&id=f5c1b400&\nvar WebsiteDiyListSecondvue_type_template_id_f5c1b400_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list\"},[_c('div',{staticClass:\"row\"},[_vm._l((_vm.listWebsite),function(list,listIndex){return _c('div',{key:listIndex,staticClass:\"col-12 col-md-6 col-xl-4\"},[(list.page == _vm.currentPage)?_c('div',{staticClass:\"block-website__content-list-item\"},[_c('div',{staticClass:\"block-website__content-list-item-box\"},[_c('div',{staticClass:\"block-website__content-list-item-box-image block-website__content-list-item-box-image--new\"},[_vm._m(0,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-overlay-wrap\"},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":list.item.url_img,\"alt\":list.item.title}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-overlay-new\"},[_c('a',{staticClass:\"nh-btn nh-btn--orange nh-btn--padding-top-bottom-16-right-left-32\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.previewModal(list.item)}}},[_vm._v(\"LIVE PREVIEW\")]),_vm._v(\" \"),_c('a',{staticClass:\"nh-btn nh-btn--color-orange nh-btn--transparent nh-btn--border-orange\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.previewDetail(list.item)}}},[_vm._v(\"LIHAT DETAIL FITUR\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-sm-6\"},[_c('div',{staticClass:\"block-website__content-list-item-box-content-title block-website__content-list-item-box-content-title--new\"},[_vm._v(\"\\n                              \"+_vm._s(list.item.title)+\"\\n                            \")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-category block-website__content-list-item-box-content-category--new\"},[_vm._v(_vm._s(list.item.category))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-sm-6\"},[(list.item.gimmick_price_month > 0)?_c('div',{staticClass:\"block-website__content-list-item-box-content-subprice block-website__content-list-item-box-content-subprice--new\"},[_vm._v(\"\\n                              Rp \"+_vm._s(_vm._f(\"formatPrice\")(list.item.gimmick_price_month))+\" \"),_c('sub',[_vm._v(\"/ Bulan\")])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-price-left block-website__content-list-item-box-content-price-left--new\"},[_vm._v(\"\\n                              Rp \"+_vm._s(_vm._f(\"formatPrice\")(list.item.price_month))+\" \"),_c('sub',[_vm._v(\"/ Bulan\")])])])])])])]):_vm._e()])}),_vm._v(\" \"),(_vm.notFoundStatus)?_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"block-website__content-list-not-found\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-6 offset-lg-3 col-md-8 offset-md-2\"},[_c('div',{staticClass:\"block-website__content-list-not-found-media\"},[_c('video',{attrs:{\"autoplay\":\"\",\"loop\":\"\",\"width\":\"100%\",\"height\":\"auto\",\"muted\":\"muted\",\"preload\":\"none\",\"poster\":\"/assets/images/2020/membuat-website/No_themes.svg\"},domProps:{\"muted\":true}},[_c('source',{attrs:{\"src\":\"/assets/images/2020/membuat-website/No_themes.mp4\",\"type\":\"video/mp4\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-not-found-title\"},[_vm._v(\"Yaaah, website “\"+_vm._s(_vm.keywordSearch)+\"” gak ada\")])]),_vm._v(\" \"),_vm._m(1)])])]):_vm._e()],2)])}\nvar WebsiteDiyListSecondvue_type_template_id_f5c1b400_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-image-browser block-website__content-list-item-box-image-browser--grey\"},[_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-12 col-lg-4 offset-lg-4 col-md-6 offset-md-3\"},[_c('div',{staticClass:\"block-website__content-list-not-found-description\"},[_vm._v(\"\\n                  Coba cari website yang lain, kami masih punya kok website yang bagus - bagus selain itu\\n                \")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListSecond.vue?vue&type=template&id=f5c1b400&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyListSecond.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const WebsiteDiyListSecondvue_type_script_lang_js_ = ({\n  name: \"WebsiteDiyList\",\n\n  created() {\n    this.getDiyList();\n  },\n\n  data() {\n    return {\n      resourceWebsite: [],\n      listWebsite: [],\n      notFoundStatus: false,\n      keywordSearch: '',\n      totalPage: 1\n    };\n  },\n\n  filters: {\n    formatPrice(value) {\n      return CommonMethods.formatPrice(value);\n    }\n\n  },\n  methods: {\n    getDiyList() {\n      axios.get(\"/api/guest/get-website-template-list\").then(res => {\n        if (res.data) {\n          this.resourceWebsite = res.data;\n          this.listWebsite = res.data;\n          this.setPagination(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    previewModal(data) {\n      this.$emit(\"preview-modal\", {\n        status: true,\n        data: data\n      });\n    },\n\n    previewDetail(data) {\n      let configs = JSON.parse(data.configs);\n      let url = '/membuat-website/' + data.slug;\n\n      if (configs.custom_slug != \"\") {\n        url = '/pembuatan-website-' + configs.custom_slug;\n      }\n\n      window.location.href = url;\n    },\n\n    updateCategory(data) {\n      let resource = this.resourceWebsite;\n\n      if (data == \"Semua Website\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      var categoryList = [];\n\n      for (var i in resource) {\n        if (resource[i].category == data) {\n          categoryList.push(resource[i]);\n        }\n      }\n\n      this.currentPage = 1;\n      this.setPagination(categoryList);\n    },\n\n    updateSort(data) {\n      let resource = this.resourceWebsite;\n\n      if (data == \"Terbaru\") {\n        resource.sort(function (a, b) {\n          return a.position - b.position;\n        });\n        this.setPagination(resource);\n        return true;\n      }\n\n      resource.sort(function (a, b) {\n        return b.title.localeCompare(a.title);\n      });\n\n      if (data == \"A-Z\") {\n        resource.sort(function (a, b) {\n          return a.title.localeCompare(b.title);\n        });\n      }\n\n      let sortList = resource;\n      this.currentPage = 1;\n      this.setPagination(sortList);\n    },\n\n    searchWebsite(data) {\n      let resource = this.resourceWebsite;\n\n      if (data === \"\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      let keyword = data.toLowerCase();\n      var searchList = [];\n      let notFoundStatus = true;\n\n      for (var i in resource) {\n        let title = resource[i].title.toLowerCase();\n        let keyword_web = resource[i].keyword;\n\n        if (title.indexOf(keyword) !== -1 || keyword_web.includes(keyword)) {\n          searchList.push(resource[i]);\n          notFoundStatus = false;\n        }\n      }\n\n      this.notFoundStatus = notFoundStatus;\n      this.keywordSearch = data;\n      this.currentPage = 1;\n      this.setPagination(searchList);\n    },\n\n    setPagination(data) {\n      var page = 0;\n      var dataList = [];\n\n      for (var i in data) {\n        if (i % 9 == 0) {\n          page += 1;\n        }\n\n        dataList.push({\n          page: page,\n          item: data[i]\n        });\n      }\n\n      this.totalPage = page;\n      this.listWebsite = dataList;\n      this.$emit(\"pagination\", {\n        totalPage: this.totalPage,\n        currentPage: this.currentPage,\n        totalResource: this.resourceWebsite.length > 9 ? 9 : this.resourceWebsite.length\n      });\n      this.$emit(\"list-website\", this.listWebsite);\n    }\n\n  },\n  props: [\"sort\", \"category\", \"search\", \"currentPage\"],\n  watch: {\n    sort: function (data) {\n      this.updateSort(data);\n    },\n    category: function (data) {\n      this.updateCategory(data);\n    },\n    search: function (data) {\n      this.searchWebsite(data);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListSecond.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_WebsiteDiyListSecondvue_type_script_lang_js_ = (WebsiteDiyListSecondvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListSecond.vue\n\n\n\n\n\n/* normalize component */\n;\nvar WebsiteDiyListSecond_component = normalizeComponent(\n  OrderFlowWebsite_WebsiteDiyListSecondvue_type_script_lang_js_,\n  WebsiteDiyListSecondvue_type_template_id_f5c1b400_render,\n  WebsiteDiyListSecondvue_type_template_id_f5c1b400_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const WebsiteDiyListSecond = (WebsiteDiyListSecond_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyListThird.vue?vue&type=template&id=ef684f90&\nvar WebsiteDiyListThirdvue_type_template_id_ef684f90_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list\"},[_c('div',{staticClass:\"row\"},[_vm._l((_vm.listWebsite),function(list,listIndex){return _c('div',{key:listIndex,staticClass:\"col-12 col-md-6 col-xl-4\"},[(list.page == _vm.currentPage)?_c('div',{staticClass:\"block-website__content-list-item block-website__content-list-item--height-100\"},[_c('div',{staticClass:\"block-website__content-list-item-box block-website__content-list-item-box--box-shadow\"},[_c('div',{staticClass:\"block-website__content-list-item-box-image block-website__content-list-item-box-image--new\"},[_vm._m(0,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-overlay-wrap\"},[(_vm.ribbon)?_c('div',{staticClass:\"badge-promotion\"},[_c('div',{staticClass:\"badge-promotion__discount\"},[_vm._v(\"Diskon\")]),_vm._v(\" \"),_c('div',{staticClass:\"badge-promotion__percentage\"},[_vm._v(\"17%\")])]):_vm._e(),_vm._v(\" \"),_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":list.item.url_img,\"alt\":list.item.title,\"loading\":\"lazy\",\"width\":\"358\",\"height\":\"223\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-overlay-new\"},[_c('a',{staticClass:\"nh-btn nh-btn--orange nh-btn--padding-top-bottom-16-right-left-32 text-uppercase\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.previewModal(list.item)}}},[_vm._v(\"Live Preview\")]),_vm._v(\" \"),_c('a',{staticClass:\"nh-btn nh-btn--color-orange nh-btn--white nh-btn--border-orange text-uppercase\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.previewDetail(list.item)}}},[_vm._v(\"Lihat Detail Fitur\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content block-website__content-list-item-box-content--padding-left-right-16\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-sm-6\"},[_c('div',{staticClass:\"block-website__content-list-item-box-content-title block-website__content-list-item-box-content-title--new\"},[_vm._v(\"\\n                              \"+_vm._s(list.item.title)+\"\\n                            \")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-category block-website__content-list-item-box-content-category--new\"},[_vm._v(_vm._s(list.item.category))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-sm-6\"},[(list.item.gimmick_price_month > 0)?_c('div',{staticClass:\"block-website__content-list-item-box-content-subprice block-website__content-list-item-box-content-subprice--new\"},[_vm._v(\"\\n                              Rp \"+_vm._s(_vm._f(\"formatPrice\")(list.item.gimmick_price_month))+\" / Bulan\\n                            \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-price-left block-website__content-list-item-box-content-price-left--new\"},[_vm._v(\"\\n                              Rp \"+_vm._s(_vm._f(\"formatPrice\")(list.item.price_month))+\" / Bulan\\n                            \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"block-website__content-list-item-box-content-description block-website__content-list-item-box-content-description--border-top-grey\"},[_vm._v(_vm._s(list.item.description))]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point block-website__content-list-item-box-content-point--mt-25 block-website__content-list-item-box-content-point--mb-25\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\"},_vm._l((list.item.point.left),function(pointLeft,pointLeftIndex){return _c('div',{key:pointLeftIndex,staticClass:\"block-website__content-list-item-box-content-point-col-item\"},[_vm._m(1,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-text \\n                                              block-website__content-list-item-box-content-point-col-item-text--lh-20 \\n                                              block-website__content-list-item-box-content-point-col-item-text--mb-12\"},[_vm._v(\"\\n                                              \"+_vm._s(pointLeft)+\"\\n                                              \")])])}),0),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\"},_vm._l((list.item.point.right),function(pointRight,pointLeftRight){return _c('div',{key:pointLeftRight,staticClass:\"block-website__content-list-item-box-content-point-col-item\"},[_vm._m(2,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-text \\n                                              block-website__content-list-item-box-content-point-col-item-text--lh-20 \\n                                              block-website__content-list-item-box-content-point-col-item-text--mb-12\"},[_vm._v(\"\\n                                              \"+_vm._s(pointRight)+\"\\n                                            \")])])}),0)])])])])])])]):_vm._e()])}),_vm._v(\" \"),(_vm.notFoundStatus)?_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"block-website__content-list-not-found\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-6 offset-lg-3 col-md-8 offset-md-2\"},[_c('div',{staticClass:\"block-website__content-list-not-found-media\"},[_c('video',{attrs:{\"autoplay\":\"\",\"loop\":\"\",\"width\":\"100%\",\"height\":\"auto\",\"muted\":\"muted\",\"preload\":\"none\",\"poster\":\"/assets/images/2020/membuat-website/No_themes.svg\"},domProps:{\"muted\":true}},[_c('source',{attrs:{\"src\":\"/assets/images/2020/membuat-website/No_themes.mp4\",\"type\":\"video/mp4\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-not-found-title\"},[_vm._v(\"Yaaah, website “\"+_vm._s(_vm.keywordSearch)+\"” gak ada\")])]),_vm._v(\" \"),_vm._m(3)])])]):_vm._e()],2)])}\nvar WebsiteDiyListThirdvue_type_template_id_ef684f90_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-image-browser block-website__content-list-item-box-image-browser--blue\"},[_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-icon\"},[_c('img',{attrs:{\"src\":\"/assets/images/2021/membuat-website/icons/check-elipse-icon.webp\",\"alt\":\"icon check\",\"loading\":\"lazy\",\"width\":\"14\",\"height\":\"14\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-icon\"},[_c('img',{attrs:{\"src\":\"/assets/images/2021/membuat-website/icons/check-elipse-icon.webp\",\"alt\":\"icon check\",\"loading\":\"lazy\",\"width\":\"14\",\"height\":\"14\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-12 col-lg-4 offset-lg-4 col-md-6 offset-md-3\"},[_c('div',{staticClass:\"block-website__content-list-not-found-description\"},[_vm._v(\"\\n                  Coba cari website yang lain, kami masih punya kok website yang bagus - bagus selain itu\\n                \")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListThird.vue?vue&type=template&id=ef684f90&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyListThird.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const WebsiteDiyListThirdvue_type_script_lang_js_ = ({\n  name: \"WebsiteDiyList\",\n\n  created() {\n    this.getDiyList();\n  },\n\n  data() {\n    return {\n      resourceWebsite: [],\n      listWebsite: [],\n      notFoundStatus: false,\n      keywordSearch: '',\n      totalPage: 1\n    };\n  },\n\n  filters: {\n    formatPrice(value) {\n      return CommonMethods.formatPrice(value);\n    }\n\n  },\n  methods: {\n    getDiyList() {\n      axios.get(\"/api/guest/get-website-template-list\").then(res => {\n        if (res.data) {\n          this.resourceWebsite = res.data;\n          this.listWebsite = res.data;\n          this.setPagination(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    previewModal(data) {\n      if (typeof data.gtm_live_preview !== 'undefined' && data.gtm_live_preview !== '') {\n        trackingClickCTA('CTA Live Preview ' + data.title, data.gtm_live_preview);\n      }\n\n      this.$emit(\"preview-modal\", {\n        status: true,\n        data: data\n      });\n    },\n\n    previewDetail(data) {\n      if (typeof data.gtm_detail_fitur !== 'undefined' && data.gtm_detail_fitur !== '') {\n        trackingClickCTA('CTA Detail Fitur ' + data.title, data.gtm_detail_fitur);\n      }\n\n      let configs = JSON.parse(data.configs);\n      let url = '/membuat-website/' + data.slug;\n\n      if (configs.custom_slug != \"\") {\n        url = '/pembuatan-website-' + configs.custom_slug;\n      }\n\n      window.location.href = url;\n    },\n\n    updateCategory(data) {\n      let resource = this.resourceWebsite;\n\n      if (data == \"Semua Website\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      var categoryList = [];\n\n      for (var i in resource) {\n        if (resource[i].category == data) {\n          categoryList.push(resource[i]);\n        }\n      }\n\n      this.currentPage = 1;\n      this.setPagination(categoryList);\n    },\n\n    updateSort(data) {\n      let resource = this.resourceWebsite;\n\n      if (data == \"Terbaru\") {\n        resource.sort(function (a, b) {\n          return a.position - b.position;\n        });\n        this.setPagination(resource);\n        return true;\n      }\n\n      resource.sort(function (a, b) {\n        return b.title.localeCompare(a.title);\n      });\n\n      if (data == \"A-Z\") {\n        resource.sort(function (a, b) {\n          return a.title.localeCompare(b.title);\n        });\n      }\n\n      let sortList = resource;\n      this.currentPage = 1;\n      this.setPagination(sortList);\n    },\n\n    searchWebsite(data) {\n      let resource = this.resourceWebsite;\n\n      if (data === \"\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      let keyword = data.toLowerCase();\n      var searchList = [];\n      let notFoundStatus = true;\n\n      for (var i in resource) {\n        let title = resource[i].title.toLowerCase();\n        let keyword_web = resource[i].keyword;\n\n        if (title.indexOf(keyword) !== -1 || keyword_web.includes(keyword)) {\n          searchList.push(resource[i]);\n          notFoundStatus = false;\n        }\n      }\n\n      this.notFoundStatus = notFoundStatus;\n      this.keywordSearch = data;\n      this.currentPage = 1;\n      this.setPagination(searchList);\n    },\n\n    setPagination(data) {\n      var page = 0;\n      var dataList = [];\n\n      for (var i in data) {\n        if (i % 9 == 0) {\n          page += 1;\n        }\n\n        dataList.push({\n          page: page,\n          item: data[i]\n        });\n      }\n\n      this.totalPage = page;\n      this.listWebsite = dataList;\n      this.$emit(\"pagination\", {\n        totalPage: this.totalPage,\n        currentPage: this.currentPage,\n        totalResource: this.resourceWebsite.length > 9 ? 9 : this.resourceWebsite.length\n      });\n      this.$emit(\"list-website\", this.listWebsite);\n    }\n\n  },\n  props: [\"ribbon\", \"sort\", \"category\", \"search\", \"currentPage\"],\n  watch: {\n    sort: function (data) {\n      this.updateSort(data);\n    },\n    category: function (data) {\n      this.updateCategory(data);\n    },\n    search: function (data) {\n      this.searchWebsite(data);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListThird.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_WebsiteDiyListThirdvue_type_script_lang_js_ = (WebsiteDiyListThirdvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListThird.vue\n\n\n\n\n\n/* normalize component */\n;\nvar WebsiteDiyListThird_component = normalizeComponent(\n  OrderFlowWebsite_WebsiteDiyListThirdvue_type_script_lang_js_,\n  WebsiteDiyListThirdvue_type_template_id_ef684f90_render,\n  WebsiteDiyListThirdvue_type_template_id_ef684f90_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const WebsiteDiyListThird = (WebsiteDiyListThird_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyListFourth.vue?vue&type=template&id=466bf5d7&\nvar WebsiteDiyListFourthvue_type_template_id_466bf5d7_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list\"},[_c('div',{staticClass:\"row\"},[_vm._l((_vm.listWebsite),function(list,listIndex){return _c('div',{key:listIndex,staticClass:\"col-12 col-md-6 col-xl-4\"},[(list.page == _vm.currentPage)?_c('div',{class:_vm.buttonlocation == 'bottom' ? 'block-website__content-list-item block-website__content-list-item--height-95 mb-0':'block-website__content-list-item block-website__content-list-item--height-100'},[_c('div',{class:_vm.buttonlocation == 'bottom' ? 'block-website__content-list-item-box block-website__content-list-item-box--box-shadow block-website__content-list-item-box--with-button-bottom' : 'block-website__content-list-item-box block-website__content-list-item-box--box-shadow'},[(list.item.gimmick_discount && parseFloat(list.item.gimmick_discount) > 0 && _vm.withRibbonDiscount && _vm.withRibbonDiscount > 0)?_c('div',{staticClass:\"badge-promotion-top\"},[_c('div',{staticClass:\"badge-promotion__decoration\"}),_vm._v(\" \"),_c('div',{staticClass:\"badge-promotion__discount\"},[_vm._v(\"Diskon\")])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image block-website__content-list-item-box-image--new\"},[(list.item.gimmick_discount && parseFloat(list.item.gimmick_discount) > 0 && _vm.withRibbonDiscount  && _vm.withRibbonDiscount > 0)?_c('div',{class:[list.item.more_gimmick_discount && parseFloat(list.item.more_gimmick_discount) > 0 ? 'badge-promotion-bottom badge-promotion-bottom--with-more-discount' : 'badge-promotion-bottom badge-promotion-bottom-default']},[_c('div',{staticClass:\"badge-promotion__percentage\"},[_vm._v(_vm._s(list.item.gimmick_discount))]),_vm._v(\" \"),(list.item.more_gimmick_discount && parseFloat(list.item.more_gimmick_discount) > 0)?_c('div',{staticClass:\"badge-promotion__more\"},[_c('div',{staticClass:\"badge-promotion__more-discount\"},[_vm._v(\"+ \"+_vm._s(list.item.more_gimmick_discount)+\" %\\n                              \"),_c('div',{staticClass:\"badge-promotion__more-decoration-block badge-promotion__more-decoration-block-left\"}),_vm._v(\" \"),_c('div',{staticClass:\"badge-promotion__more-decoration-block badge-promotion__more-decoration-block-right\"}),_vm._v(\" \"),_c('div',{staticClass:\"badge-promotion__more-decoration-circle badge-promotion__more-decoration-circle-left\"}),_vm._v(\" \"),_c('div',{staticClass:\"badge-promotion__more-decoration-circle badge-promotion__more-decoration-circle-right\"})])]):_vm._e()]):_vm._e(),_vm._v(\" \"),_vm._m(0,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-overlay-wrap\"},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":list.item.url_img,\"alt\":list.item.title,\"loading\":\"lazy\",\"width\":\"358\",\"height\":\"223\"}}),_vm._v(\" \"),(_vm.buttonlocation != 'bottom')?_c('div',{staticClass:\"block-website__content-list-item-box-image-overlay-new\"},[_c('a',{staticClass:\"nh-btn nh-btn--orange nh-btn--padding-top-bottom-16-right-left-32 text-uppercase\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.previewModal(list.item)}}},[_vm._v(\"Live Preview\")]),_vm._v(\" \"),_c('a',{staticClass:\"nh-btn nh-btn--color-orange nh-btn--white nh-btn--border-orange text-uppercase\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.updateOrder(list.item)}}},[_vm._v(\"Pilih Website Ini\")])]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content block-website__content-list-item-box-content--padding-left-right-16\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-sm-6\"},[_c('div',{staticClass:\"block-website__content-list-item-box-content-title block-website__content-list-item-box-content-title--new\"},[_vm._v(\"\\n                              \"+_vm._s(list.item.title)+\"\\n                            \")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-category block-website__content-list-item-box-content-category--new\"},[_vm._v(_vm._s(list.item.category))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-sm-6\"},[(list.item.gimmick_price_month > 0)?_c('div',{staticClass:\"block-website__content-list-item-box-content-subprice block-website__content-list-item-box-content-subprice--new\"},[_vm._v(\"\\n                              Rp \"+_vm._s(_vm._f(\"formatPrice\")(list.item.gimmick_price_month))+\" / Bulan\\n                            \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-price-left block-website__content-list-item-box-content-price-left--new\"},[_vm._v(\"\\n                              Rp \"+_vm._s(_vm._f(\"formatPrice\")(list.item.price_month))+\" / Bulan\\n                            \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"block-website__content-list-item-box-content-description block-website__content-list-item-box-content-description--border-top-grey\"},[_vm._v(_vm._s(list.item.description))]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point block-website__content-list-item-box-content-point--mt-25 block-website__content-list-item-box-content-point--mb-25\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\"},_vm._l((list.item.point.left),function(pointLeft,pointLeftIndex){return _c('div',{key:pointLeftIndex,staticClass:\"block-website__content-list-item-box-content-point-col-item\"},[_vm._m(1,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-text \\n                                              block-website__content-list-item-box-content-point-col-item-text--lh-20 \\n                                              block-website__content-list-item-box-content-point-col-item-text--mb-12\"},[_vm._v(\"\\n                                              \"+_vm._s(pointLeft)+\"\\n                                              \")])])}),0),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6\"},_vm._l((list.item.point.right),function(pointRight,pointLeftRight){return _c('div',{key:pointLeftRight,staticClass:\"block-website__content-list-item-box-content-point-col-item\"},[_vm._m(2,true),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-text \\n                                              block-website__content-list-item-box-content-point-col-item-text--lh-20 \\n                                              block-website__content-list-item-box-content-point-col-item-text--mb-12\"},[_vm._v(\"\\n                                              \"+_vm._s(pointRight)+\"\\n                                            \")])])}),0)])])])])])]),_vm._v(\" \"),(_vm.buttonlocation == 'bottom' )?_c('div',{staticClass:\"block-website__footer\"},[_c('a',{staticClass:\"nh-btn nh-btn--orange nh-btn--padding-top-bottom-16-right-left-32 text-uppercase mb-5\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.previewModal(list.item)}}},[_vm._v(\"Pilih Website Ini\")])]):_vm._e()]):_vm._e()])}),_vm._v(\" \"),(_vm.notFoundStatus)?_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"block-website__content-list-not-found\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-6 offset-lg-3 col-md-8 offset-md-2\"},[_c('div',{staticClass:\"block-website__content-list-not-found-media\"},[_c('video',{attrs:{\"autoplay\":\"\",\"loop\":\"\",\"width\":\"100%\",\"height\":\"auto\",\"muted\":\"muted\",\"preload\":\"none\",\"poster\":\"/assets/images/2020/membuat-website/No_themes.svg\"},domProps:{\"muted\":true}},[_c('source',{attrs:{\"src\":\"/assets/images/2020/membuat-website/No_themes.mp4\",\"type\":\"video/mp4\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-not-found-title\"},[_vm._v(\"Yaaah, website “\"+_vm._s(_vm.keywordSearch)+\"” gak ada\")])]),_vm._v(\" \"),_vm._m(3)])])]):_vm._e()],2)])}\nvar WebsiteDiyListFourthvue_type_template_id_466bf5d7_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-image-browser block-website__content-list-item-box-image-browser--blue\"},[_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-list-item-box-image-browser-dot block-website__content-list-item-box-image-browser-dot--white\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-icon\"},[_c('img',{attrs:{\"src\":\"/assets/images/2021/membuat-website/icons/check-elipse-icon.webp\",\"alt\":\"icon check\",\"loading\":\"lazy\",\"width\":\"14\",\"height\":\"14\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-list-item-box-content-point-col-item-icon\"},[_c('img',{attrs:{\"src\":\"/assets/images/2021/membuat-website/icons/check-elipse-icon.webp\",\"alt\":\"icon check\",\"loading\":\"lazy\",\"width\":\"14\",\"height\":\"14\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-12 col-lg-4 offset-lg-4 col-md-6 offset-md-3\"},[_c('div',{staticClass:\"block-website__content-list-not-found-description\"},[_vm._v(\"\\n                  Coba cari website yang lain, kami masih punya kok website yang bagus - bagus selain itu\\n                \")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListFourth.vue?vue&type=template&id=466bf5d7&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsiteDiyListFourth.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const WebsiteDiyListFourthvue_type_script_lang_js_ = ({\n  name: \"WebsiteDiyList\",\n\n  created() {\n    this.getDiyList();\n  },\n\n  data() {\n    return {\n      resourceWebsite: [],\n      listWebsite: [],\n      notFoundStatus: false,\n      keywordSearch: '',\n      totalPage: 1\n    };\n  },\n\n  filters: {\n    formatPrice(value) {\n      return CommonMethods.formatPrice(value);\n    }\n\n  },\n  methods: {\n    getDiyList() {\n      axios.get(\"/api/guest/get-website-template-list\").then(res => {\n        if (res.data) {\n          this.resourceWebsite = res.data;\n          this.listWebsite = res.data;\n          this.setPagination(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    previewModal(data) {\n      if (typeof data.gtm_live_preview !== 'undefined' && data.gtm_live_preview !== '') {\n        trackingClickCTA('CTA Live Preview ' + data.title, data.gtm_live_preview);\n      }\n\n      this.$emit(\"preview-modal\", {\n        status: true,\n        data: data\n      });\n    },\n\n    updateOrder(data) {\n      this.$emit(\"order\", {\n        status: true,\n        data: data\n      });\n    },\n\n    updateCategory(data) {\n      trackingClickCTA('CTA DIY Group Tag', `tag_diy_${data.replace(/ /g, \"_\")}`);\n      let resource = this.resourceWebsite;\n\n      if (data == \"Semua Website\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      var categoryList = [];\n\n      for (var i in resource) {\n        if (resource[i].category == data) {\n          categoryList.push(resource[i]);\n        }\n      }\n\n      this.currentPage = 1;\n      this.setPagination(categoryList);\n    },\n\n    updateSort(data) {\n      let resource = this.resourceWebsite;\n\n      if (data == \"Terbaru\") {\n        resource.sort(function (a, b) {\n          return a.position - b.position;\n        });\n        this.setPagination(resource);\n        return true;\n      }\n\n      resource.sort(function (a, b) {\n        return b.title.localeCompare(a.title);\n      });\n\n      if (data == \"A-Z\") {\n        resource.sort(function (a, b) {\n          return a.title.localeCompare(b.title);\n        });\n      }\n\n      let sortList = resource;\n      this.currentPage = 1;\n      this.setPagination(sortList);\n    },\n\n    searchWebsite(data) {\n      let resource = this.resourceWebsite;\n\n      if (data === \"\") {\n        this.setPagination(resource);\n        return true;\n      }\n\n      let keyword = data.toLowerCase();\n      var searchList = [];\n      let notFoundStatus = true;\n\n      for (var i in resource) {\n        let title = resource[i].title.toLowerCase();\n        let keyword_web = resource[i].keyword;\n\n        if (title.indexOf(keyword) !== -1 || keyword_web.includes(keyword)) {\n          searchList.push(resource[i]);\n          notFoundStatus = false;\n        }\n      }\n\n      this.notFoundStatus = notFoundStatus;\n      this.keywordSearch = data;\n      this.currentPage = 1;\n      this.setPagination(searchList);\n    },\n\n    setPagination(data) {\n      var page = 0;\n      var dataList = [];\n\n      for (var i in data) {\n        if (i % 9 == 0) {\n          page += 1;\n        }\n\n        dataList.push({\n          page: page,\n          item: data[i]\n        });\n      }\n\n      this.totalPage = page;\n      this.listWebsite = dataList;\n      this.$emit(\"pagination\", {\n        totalPage: this.totalPage,\n        currentPage: this.currentPage,\n        totalResource: this.resourceWebsite.length > 9 ? 9 : this.resourceWebsite.length\n      });\n      this.$emit(\"list-website\", this.listWebsite);\n    }\n\n  },\n  props: [\"ribbon\", \"sort\", \"category\", \"search\", \"currentPage\", \"withRibbonDiscount\", \"buttonlocation\"],\n  watch: {\n    sort: function (data) {\n      this.updateSort(data);\n    },\n    category: function (data) {\n      this.updateCategory(data);\n    },\n    search: function (data) {\n      this.searchWebsite(data);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListFourth.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_WebsiteDiyListFourthvue_type_script_lang_js_ = (WebsiteDiyListFourthvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/WebsiteDiyListFourth.vue\n\n\n\n\n\n/* normalize component */\n;\nvar WebsiteDiyListFourth_component = normalizeComponent(\n  OrderFlowWebsite_WebsiteDiyListFourthvue_type_script_lang_js_,\n  WebsiteDiyListFourthvue_type_template_id_466bf5d7_render,\n  WebsiteDiyListFourthvue_type_template_id_466bf5d7_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const WebsiteDiyListFourth = (WebsiteDiyListFourth_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyModal.vue?vue&type=template&id=21fa2681&\nvar PreviewDiyModalvue_type_template_id_21fa2681_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade block-website__modal-preview\",attrs:{\"id\":\"preview-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"previewModal\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered modal-xl\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\",staticStyle:{\"border-radius\":\"8px\"}},[(_vm.currentDataPosition != 0)?_c('a',{staticClass:\"block-website__modal-preview-btn-prev\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.updatePreviewData(_vm.prevData)}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/arrow-preview-left.svg\"}})]):_vm._e(),_vm._v(\" \"),(_vm.currentDataPosition != _vm.lastDataPosition)?_c('a',{staticClass:\"block-website__modal-preview-btn-next\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.updatePreviewData(_vm.nextData)}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/arrow-preview-right.svg\"}})]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"modal-body\",staticStyle:{\"padding\":\"0px\"}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-4\"},[_c('div',{staticStyle:{\"margin\":\"24px 0px 15px 36px\"}},[_c('h4',[_vm._v(_vm._s(_vm.data.title))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.data.category))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4 d-none d-sm-block\"},[_c('div',{staticClass:\"d-flex block-website__modal-preview-device\"},[_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-desktop\",class:{'active' : _vm.currentDevice === 'desktop'},on:{\"click\":function($event){return _vm.setView('desktop')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/desktop-monitor.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active' : _vm.currentDevice === 'desktop'}},[_vm._v(\"\\n                                    Desktop\\n                                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-tablet\",class:{'active' : _vm.currentDevice === 'tablet'},on:{\"click\":function($event){return _vm.setView('tablet')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/computer-tablet.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active' : _vm.currentDevice === 'tablet'}},[_vm._v(\"\\n                                    Tablet\\n                                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-mobile\",class:{'active' : _vm.currentDevice === 'mobile'},on:{\"click\":function($event){return _vm.setView('mobile')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/mobile-phone.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active' : _vm.currentDevice === 'mobile'}},[_vm._v(\"\\n                                    Mobile\\n                                \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4\"},[_c('a',{staticClass:\"nh-btn nh-btn--center nh-btn--orange block-website__modal-preview-btn-select\",attrs:{\"href\":\"javascript:void(0)\",\"data-dismiss\":\"modal\"},on:{\"click\":function($event){return _vm.showOrder()}}},[_vm._v(\"\\n                            Pilih Website\\n                        \")])])]),_vm._v(\" \"),(_vm.previewStatus)?_c('div',{staticClass:\"block-website__modal-preview-iframe\"},[_c('iframe',{staticClass:\"preview-iframe\",class:_vm.currentDevice,attrs:{\"src\":_vm.data.url_preview}})]):_vm._e()])])])])}\nvar PreviewDiyModalvue_type_template_id_21fa2681_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyModal.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PreviewDiyModalvue_type_script_lang_js_ = ({\n  name: \"PreviewDiyModal\",\n\n  data() {\n    return {\n      showModal: false,\n      data: [],\n      currentDevice: \"desktop\",\n      dataList: [],\n      currentDataPosition: 0,\n      lastDataPosition: 0,\n      prevData: [],\n      nextData: []\n    };\n  },\n\n  methods: {\n    setView(device) {\n      this.currentDevice = device;\n    },\n\n    showOrder(data) {\n      this.$emit(\"order\", {\n        status: true,\n        data: this.data\n      });\n    },\n\n    setDataList(data) {\n      let dataList = [];\n\n      for (var i in data) {\n        dataList.push(data[i].item);\n      }\n\n      this.dataList = dataList;\n    },\n\n    getDataPosition(data) {\n      let dataList = this.dataList;\n\n      for (var i in dataList) {\n        if (dataList[i].title == data.title) {\n          this.currentDataPosition = parseInt(i);\n          break;\n        }\n      }\n\n      this.lastDataPosition = dataList.length - 1;\n    },\n\n    setArrowData() {\n      let dataList = this.dataList;\n      let currentDataPosition = this.currentDataPosition;\n\n      if (currentDataPosition) {\n        this.prevData = dataList[currentDataPosition - 1];\n      }\n\n      if (currentDataPosition < this.lastDataPosition) {\n        this.nextData = dataList[currentDataPosition + 1];\n      }\n    },\n\n    updatePreviewData(data) {\n      this.$emit(\"update-preview-data\", data);\n    }\n\n  },\n  props: [\"previewStatus\", \"previewData\", \"listWebsite\"],\n  watch: {\n    previewStatus: function (value) {\n      this.showModal = value;\n    },\n    previewData: function (value) {\n      this.data = value;\n\n      if (screen.width < 767) {\n        this.setView('mobile');\n      }\n\n      this.getDataPosition(value);\n      this.setArrowData();\n    },\n    listWebsite: function (value) {\n      this.setDataList(value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyModal.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_PreviewDiyModalvue_type_script_lang_js_ = (PreviewDiyModalvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyModal.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PreviewDiyModal_component = normalizeComponent(\n  OrderFlowWebsite_PreviewDiyModalvue_type_script_lang_js_,\n  PreviewDiyModalvue_type_template_id_21fa2681_render,\n  PreviewDiyModalvue_type_template_id_21fa2681_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const PreviewDiyModal = (PreviewDiyModal_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyModalSecond.vue?vue&type=template&id=089286f7&\nvar PreviewDiyModalSecondvue_type_template_id_089286f7_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade block-website__modal-preview\",attrs:{\"id\":\"preview-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"previewModal\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered modal-xl\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[(_vm.currentDataPosition != 0)?_c('a',{staticClass:\"block-website__modal-preview-btn-prev\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.updatePreviewData(_vm.prevData)}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/arrow-preview-left.svg\"}})]):_vm._e(),_vm._v(\" \"),(_vm.currentDataPosition != _vm.lastDataPosition)?_c('a',{staticClass:\"block-website__modal-preview-btn-next\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.updatePreviewData(_vm.nextData)}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/arrow-preview-right.svg\"}})]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"modal-body\",staticStyle:{\"padding\":\"0px\"}},[_c('div',{staticClass:\"block-website__modal-preview-header\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-4\"},[_c('div',{staticStyle:{\"margin\":\"24px 0px 15px 36px\"}},[_c('h4',[_vm._v(_vm._s(_vm.data.title))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.data.category))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4 d-none d-sm-block\"},[_c('div',{staticClass:\"d-flex block-website__modal-preview-device\"},[_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-desktop\",class:{'active' : _vm.currentDevice === 'desktop'},on:{\"click\":function($event){return _vm.setView('desktop')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-desktop.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'desktop'}},[_vm._v(\"\\n                    Desktop\\n                  \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-tablet\",class:{'active' : _vm.currentDevice === 'tablet'},on:{\"click\":function($event){return _vm.setView('tablet')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-tablet.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'tablet'}},[_vm._v(\"\\n                    Tablet\\n                  \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-mobile\",class:{'active' : _vm.currentDevice === 'mobile'},on:{\"click\":function($event){return _vm.setView('mobile')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-mobile.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'mobile'}},[_vm._v(\"\\n                    Mobile\\n                  \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4 block-website__modal-preview-btn-select-container\"},[_c('a',{staticClass:\"nh-btn nh-btn--orange block-website__modal-preview-btn-select nh-order-lg-0 nh-order-xl-6 text-uppercase\",attrs:{\"href\":\"javascript:void(0)\",\"data-dismiss\":\"modal\"},on:{\"click\":function($event){return _vm.showOrder()}}},[_vm._v(\"\\n                Pilih Website Ini\\n              \")])])])]),_vm._v(\" \"),(_vm.previewStatus)?_c('div',{staticClass:\"block-website__modal-preview-iframe block-website__modal-preview-iframe--new\"},[_c('iframe',{staticClass:\"preview-iframe\",class:_vm.currentDevice,attrs:{\"src\":_vm.data.url_preview}})]):_vm._e()])])])])}\nvar PreviewDiyModalSecondvue_type_template_id_089286f7_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyModalSecond.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PreviewDiyModalSecondvue_type_script_lang_js_ = ({\n  name: \"PreviewDiyModal\",\n\n  data() {\n    return {\n      showModal: false,\n      data: [],\n      currentDevice: \"desktop\",\n      dataList: [],\n      currentDataPosition: 0,\n      lastDataPosition: 0,\n      prevData: [],\n      nextData: []\n    };\n  },\n\n  methods: {\n    setView(device) {\n      this.currentDevice = device;\n    },\n\n    showOrder(data) {\n      this.$emit(\"order\", {\n        status: true,\n        data: this.data\n      });\n    },\n\n    setDataList(data) {\n      let dataList = [];\n\n      for (var i in data) {\n        dataList.push(data[i].item);\n      }\n\n      this.dataList = dataList;\n    },\n\n    getDataPosition(data) {\n      let dataList = this.dataList;\n\n      for (var i in dataList) {\n        if (dataList[i].title == data.title) {\n          this.currentDataPosition = parseInt(i);\n          break;\n        }\n      }\n\n      this.lastDataPosition = dataList.length - 1;\n    },\n\n    setArrowData() {\n      let dataList = this.dataList;\n      let currentDataPosition = this.currentDataPosition;\n\n      if (currentDataPosition) {\n        this.prevData = dataList[currentDataPosition - 1];\n      }\n\n      if (currentDataPosition < this.lastDataPosition) {\n        this.nextData = dataList[currentDataPosition + 1];\n      }\n    },\n\n    updatePreviewData(data) {\n      this.$emit(\"update-preview-data\", data);\n    },\n\n    goToDetail(data) {\n      let configs = JSON.parse(data.configs);\n      let url = '/membuat-website/' + data.slug;\n\n      if (configs.custom_slug != \"\") {\n        url = '/pembuatan-website-' + configs.custom_slug;\n      }\n\n      window.location.href = url;\n    }\n\n  },\n  props: [\"previewStatus\", \"previewData\", \"listWebsite\"],\n  watch: {\n    previewStatus: function (value) {\n      this.showModal = value;\n    },\n    previewData: function (value) {\n      this.data = value;\n\n      if (screen.width < 767) {\n        this.setView('mobile');\n      }\n\n      this.getDataPosition(value);\n      this.setArrowData();\n    },\n    listWebsite: function (value) {\n      this.setDataList(value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyModalSecond.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_PreviewDiyModalSecondvue_type_script_lang_js_ = (PreviewDiyModalSecondvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyModalSecond.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PreviewDiyModalSecond_component = normalizeComponent(\n  OrderFlowWebsite_PreviewDiyModalSecondvue_type_script_lang_js_,\n  PreviewDiyModalSecondvue_type_template_id_089286f7_render,\n  PreviewDiyModalSecondvue_type_template_id_089286f7_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const PreviewDiyModalSecond = (PreviewDiyModalSecond_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyModalThird.vue?vue&type=template&id=35292f18&\nvar PreviewDiyModalThirdvue_type_template_id_35292f18_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade block-website__modal-preview\",attrs:{\"id\":\"preview-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"previewModal\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered modal-xl\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[(_vm.currentDataPosition != 0)?_c('a',{staticClass:\"block-website__modal-preview-btn-prev\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.updatePreviewData(_vm.prevData)}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/arrow-preview-left.svg\"}})]):_vm._e(),_vm._v(\" \"),(_vm.currentDataPosition != _vm.lastDataPosition)?_c('a',{staticClass:\"block-website__modal-preview-btn-next\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.updatePreviewData(_vm.nextData)}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/arrow-preview-right.svg\"}})]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"modal-body\",staticStyle:{\"padding\":\"0px\"}},[_c('div',{staticClass:\"block-website__modal-preview-header\"},[_c('div',{staticClass:\"row\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4 col-xl-3\"},[_c('div',{staticStyle:{\"margin\":\"24px 0px 15px 36px\"}},[_c('h4',[_vm._v(_vm._s(_vm.data.title))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.data.category))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4 col-xl-3 d-none d-sm-block\"},[_c('div',{staticClass:\"d-flex block-website__modal-preview-device\"},[_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-desktop\",class:{'active' : _vm.currentDevice === 'desktop'},on:{\"click\":function($event){return _vm.setView('desktop')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-desktop.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'desktop'}},[_vm._v(\"\\n                    Desktop\\n                  \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-tablet\",class:{'active' : _vm.currentDevice === 'tablet'},on:{\"click\":function($event){return _vm.setView('tablet')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-tablet.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'tablet'}},[_vm._v(\"\\n                    Tablet\\n                  \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-mobile\",class:{'active' : _vm.currentDevice === 'mobile'},on:{\"click\":function($event){return _vm.setView('mobile')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-mobile.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'mobile'}},[_vm._v(\"\\n                    Mobile\\n                  \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4 col-xl-6 block-website__modal-preview-btn-select-container\"},[_c('a',{staticClass:\"nh-btn nh-btn--white nh-btn--color-orange nh-btn--border-orange block-website__modal-preview-btn-select nh-order-lg-6 nh-order-xl-0 text-uppercase\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.goToDetail(_vm.data)}}},[_vm._v(\"\\n                Lihat Detail Fitur\\n              \")]),_vm._v(\" \"),_c('a',{staticClass:\"nh-btn nh-btn--orange block-website__modal-preview-btn-select nh-order-lg-0 nh-order-xl-6 text-uppercase\",attrs:{\"href\":\"javascript:void(0)\",\"data-dismiss\":\"modal\"},on:{\"click\":function($event){return _vm.showOrder(_vm.data)}}},[_vm._v(\"\\n                Pilih Website Ini\\n              \")])])])]),_vm._v(\" \"),(_vm.previewStatus)?_c('div',{staticClass:\"block-website__modal-preview-iframe block-website__modal-preview-iframe--new\"},[_c('iframe',{staticClass:\"preview-iframe\",class:_vm.currentDevice,attrs:{\"src\":_vm.data.url_preview}}),_vm._v(\" \"),(_vm.data.show_disclaimer == 1)?_c('p',{staticClass:\"block-website__modal-preview-disclaimer\"},[_vm._v(\"\\n            Anda tengah melihat Live Preview dengan contoh konten website. Setelah aktivasi, Anda perlu melakukan personalisasi tampilan sesuai keinginan. Lihat informasi selengkapnya di \"),_c('a',{attrs:{\"href\":_vm.niaga_url + 'syarat-dan-ketentuan'}},[_vm._v(\"Syarat & Ketentuan\")]),_vm._v(\".\\n          \")]):_vm._e()]):_vm._e()])])])])}\nvar PreviewDiyModalThirdvue_type_template_id_35292f18_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-12\"},[_c('button',{staticClass:\"close pr-2\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyModalThird.vue?vue&type=template&id=35292f18&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyModalThird.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PreviewDiyModalThirdvue_type_script_lang_js_ = ({\n  name: \"PreviewDiyModal\",\n\n  data() {\n    return {\n      niaga_url: CommonVar.niaga_url,\n      showModal: false,\n      data: [],\n      currentDevice: \"desktop\",\n      dataList: [],\n      currentDataPosition: 0,\n      lastDataPosition: 0,\n      prevData: [],\n      nextData: []\n    };\n  },\n\n  methods: {\n    setView(device) {\n      this.currentDevice = device;\n    },\n\n    showOrder(data) {\n      this.$emit(\"order\", {\n        status: true,\n        data: this.data\n      });\n    },\n\n    setDataList(data) {\n      let dataList = [];\n\n      for (var i in data) {\n        dataList.push(data[i].item);\n      }\n\n      this.dataList = dataList;\n    },\n\n    getDataPosition(data) {\n      let dataList = this.dataList;\n\n      for (var i in dataList) {\n        if (dataList[i].title == data.title) {\n          this.currentDataPosition = parseInt(i);\n          break;\n        }\n      }\n\n      this.lastDataPosition = dataList.length - 1;\n    },\n\n    setArrowData() {\n      let dataList = this.dataList;\n      let currentDataPosition = this.currentDataPosition;\n\n      if (currentDataPosition) {\n        this.prevData = dataList[currentDataPosition - 1];\n      }\n\n      if (currentDataPosition < this.lastDataPosition) {\n        this.nextData = dataList[currentDataPosition + 1];\n      }\n    },\n\n    updatePreviewData(data) {\n      this.$emit(\"update-preview-data\", data);\n    },\n\n    goToDetail(data) {\n      if (typeof data.gtm_detail_fitur !== 'undefined' && data.gtm_detail_fitur !== '') {\n        trackingClickCTA('CTA Detail Fitur ' + data.title, data.gtm_detail_fitur);\n      }\n\n      let configs = JSON.parse(data.configs);\n      let url = '/membuat-website/' + data.slug;\n\n      if (configs.custom_slug != \"\") {\n        url = '/pembuatan-website-' + configs.custom_slug;\n      }\n\n      window.location.href = url;\n    }\n\n  },\n  props: [\"previewStatus\", \"previewData\", \"listWebsite\"],\n  watch: {\n    previewStatus: function (value) {\n      this.showModal = value;\n    },\n    previewData: function (value) {\n      this.data = { ...value,\n        url_preview: ''\n      };\n      setTimeout(() => {\n        this.data.url_preview = value.url_preview;\n      }, 100);\n\n      if (screen.width < 767) {\n        this.setView('mobile');\n      }\n\n      this.getDataPosition(value);\n      this.setArrowData();\n    },\n    listWebsite: function (value) {\n      this.setDataList(value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyModalThird.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_PreviewDiyModalThirdvue_type_script_lang_js_ = (PreviewDiyModalThirdvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyModalThird.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PreviewDiyModalThird_component = normalizeComponent(\n  OrderFlowWebsite_PreviewDiyModalThirdvue_type_script_lang_js_,\n  PreviewDiyModalThirdvue_type_template_id_35292f18_render,\n  PreviewDiyModalThirdvue_type_template_id_35292f18_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const PreviewDiyModalThird = (PreviewDiyModalThird_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyDemo.vue?vue&type=template&id=0f44af5e&\nvar PreviewDiyDemovue_type_template_id_0f44af5e_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade block-website__modal-preview\",attrs:{\"id\":\"preview-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"previewModal\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered modal-xl\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-body\",staticStyle:{\"padding\":\"0px\"}},[_c('div',{staticClass:\"block-website__modal-preview-header\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-4\"},[_c('div',{staticStyle:{\"margin\":\"24px 0px 15px 36px\"}},[_c('h4',[_vm._v(_vm._s(_vm.data.name))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.data.category))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4 d-none d-sm-block\"},[_c('div',{staticClass:\"d-flex block-website__modal-preview-device\"},[_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-desktop\",class:{'active' : _vm.currentDevice === 'desktop'},on:{\"click\":function($event){return _vm.setView('desktop')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-desktop.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'desktop'}},[_vm._v(\"\\n                    Desktop\\n                  \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-tablet\",class:{'active' : _vm.currentDevice === 'tablet'},on:{\"click\":function($event){return _vm.setView('tablet')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-tablet.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'tablet'}},[_vm._v(\"\\n                    Tablet\\n                  \")])]),_vm._v(\" \"),_c('div',{staticClass:\"flex-fill block-website__modal-preview-device-icon-mobile\",class:{'active' : _vm.currentDevice === 'mobile'},on:{\"click\":function($event){return _vm.setView('mobile')}}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-mobile.svg\"}}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-device-icon-title\",class:{'active active--orange' : _vm.currentDevice === 'mobile'}},[_vm._v(\"\\n                    Mobile\\n                  \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-4\"},[_c('a',{staticClass:\"nh-btn nh-btn--center nh-btn--orange block-website__modal-preview-btn-select\",attrs:{\"onclick\":(\"trackingClickCTA('CTA Click', 'pilih_website_\" + (_vm.data.cta) + \"_clicked')\"),\"href\":\"javascript:void(0)\",\"data-dismiss\":\"modal\"},on:{\"click\":function($event){return _vm.showOrder()}}},[_vm._v(\"\\n                Pilih Website\\n              \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-preview-iframe block-website__modal-preview-iframe--new\"},[_c('iframe',{staticClass:\"preview-iframe\",class:_vm.currentDevice,attrs:{\"src\":_vm.data.url_preview}})])])])])])}\nvar PreviewDiyDemovue_type_template_id_0f44af5e_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyDemo.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PreviewDiyDemovue_type_script_lang_js_ = ({\n  name: \"PreviewDiyModal\",\n\n  data() {\n    return {\n      data: [],\n      currentDevice: \"desktop\"\n    };\n  },\n\n  methods: {\n    setData() {\n      this.data = this.previewData;\n    },\n\n    setView(device) {\n      this.currentDevice = device;\n    },\n\n    showOrder() {\n      this.$emit(\"order\");\n    }\n\n  },\n  props: [\"previewData\"],\n  watch: {\n    previewData: function () {\n      this.setData();\n\n      if (screen.width < 767) {\n        this.setView('mobile');\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyDemo.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_PreviewDiyDemovue_type_script_lang_js_ = (PreviewDiyDemovue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyDemo.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PreviewDiyDemo_component = normalizeComponent(\n  OrderFlowWebsite_PreviewDiyDemovue_type_script_lang_js_,\n  PreviewDiyDemovue_type_template_id_0f44af5e_render,\n  PreviewDiyDemovue_type_template_id_0f44af5e_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const PreviewDiyDemo = (PreviewDiyDemo_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyNavigation.vue?vue&type=template&id=38c594f6&\nvar PreviewDiyNavigationvue_type_template_id_38c594f6_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"theme-website-preview\"},[_c('div',{staticClass:\"theme-website-preview__nav\"},[_c('div',{staticClass:\"container-fluid\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-xl-4\"},[_c('div',{staticClass:\"theme-website-preview__box\"},[_vm._m(0),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"theme-website-preview__box-title\"},[_vm._v(_vm._s(_vm.data.name))]),_vm._v(\" \"),_c('div',{staticClass:\"theme-website-preview__box-category\"},[_vm._v(_vm._s(_vm.data.category))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-xl-4 d-none d-sm-block\"},[_c('div',{staticClass:\"theme-website-preview__box justify-content-center\"},[_c('div',{staticClass:\"theme-website-preview__box-device theme-website-preview__box-device--desktop\",class:{'theme-website-preview__box-device--active' : _vm.currentDevice === 'desktop'},on:{\"click\":function($event){return _vm.setView('desktop')}}},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-desktop.svg\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"Desktop\")]),_vm._v(\" \"),_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"theme-website-preview__box-device theme-website-preview__box-device--tablet\",class:{'theme-website-preview__box-device--active' : _vm.currentDevice === 'tablet'},on:{\"click\":function($event){return _vm.setView('tablet')}}},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-tablet.svg\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"Tablet\")]),_vm._v(\" \"),_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"theme-website-preview__box-device theme-website-preview__box-device--mobile\",class:{'theme-website-preview__box-device--active' : _vm.currentDevice === 'mobile'},on:{\"click\":function($event){return _vm.setView('mobile')}}},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/icon-mobile.svg\"}}),_vm._v(\" \"),_c('div',[_vm._v(\"Mobile\")]),_vm._v(\" \"),_c('hr')])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-xl-4\"},[_c('div',{staticClass:\"theme-website-preview__box justify-content-end theme-website-preview__box--third-box\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"theme-website-preview__box-order d-flex justify-content-center\"},[_c('a',{staticClass:\"nh-btn nh-btn--orange\",attrs:{\"href\":\"javascript:void(0);\"},on:{\"click\":function($event){return _vm.showOrder()}}},[_vm._v(\"PILIH WEBSITE INI\")])])])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"theme-website-preview__iframe\"},[_c('iframe',{class:_vm.currentDevice,attrs:{\"src\":_vm.data.url_preview,\"frameborder\":\"0\"}})])])}\nvar PreviewDiyNavigationvue_type_template_id_38c594f6_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"theme-website-preview__box-logo\"},[_c('a',{attrs:{\"href\":\"/v2/membuat-website\"}},[_c('img',{staticClass:\"img-fluid\",attrs:{\"src\":\"/assets/images/2020/membuat-website/logo-niagahoster.svg\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"theme-website-preview__box-price d-flex justify-content-center\"},[_c('div',[_c('sub',[_vm._v(\"Rp 100.000 / Bulan\")]),_c('br'),_vm._v(\"\\n                Rp 62.500 \"),_c('sub',[_vm._v(\"/ Bulan\")])])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyNavigation.vue?vue&type=template&id=38c594f6&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PreviewDiyNavigation.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PreviewDiyNavigationvue_type_script_lang_js_ = ({\n  name: \"PreviewDiyNavigation\",\n\n  created() {\n    this.setData();\n\n    if (screen.width < 767) {\n      this.setView('mobile');\n    }\n  },\n\n  data() {\n    return {\n      data: [],\n      currentDevice: \"desktop\"\n    };\n  },\n\n  methods: {\n    setData() {\n      this.data = this.previewData;\n    },\n\n    setView(device) {\n      this.currentDevice = device;\n    },\n\n    showOrder(data) {\n      this.$emit(\"order\");\n    }\n\n  },\n  props: [\"previewData\"],\n  watch: {\n    previewData: function (value) {\n      this.data = value;\n\n      if (screen.width < 767) {\n        this.setView('mobile');\n      }\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyNavigation.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_PreviewDiyNavigationvue_type_script_lang_js_ = (PreviewDiyNavigationvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PreviewDiyNavigation.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PreviewDiyNavigation_component = normalizeComponent(\n  OrderFlowWebsite_PreviewDiyNavigationvue_type_script_lang_js_,\n  PreviewDiyNavigationvue_type_template_id_38c594f6_render,\n  PreviewDiyNavigationvue_type_template_id_38c594f6_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const PreviewDiyNavigation = (PreviewDiyNavigation_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/OrderDiyModal.vue?vue&type=template&id=01294eb6&\nvar OrderDiyModalvue_type_template_id_01294eb6_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade block-website__modal-diy\",attrs:{\"id\":\"diy-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"diyModal\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered modal-lg\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content block-website__modal-diy-content\",staticStyle:{\"border-radius\":\".8rem\"}},[_c('div',{staticClass:\"modal-body\"},[_c('button',{ref:\"closeOrderDiyModalTrigger\",staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]),_vm._v(\" \"),_c('h4',{staticClass:\"block-website__modal-diy-title\"},[_vm._v(\"Apa Nama Website Anda\")]),_vm._v(\" \"),_c('p',{staticClass:\"block-website__modal-diy-desc\"},[_vm._v(\"Pilih nama terbaik untuk website Anda.\")]),_vm._v(\" \"),_c('form',{attrs:{\"method\":\"post\",\"action\":\"#\"},on:{\"submit\":_vm.formDiyAction}},[_c('div',[_c('div',{staticClass:\"pretty-radio\"},[_c('input',{attrs:{\"type\":\"radio\",\"name\":\"domain_action\",\"value\":\"register\"}}),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__icon pretty-radio__title\",class:{'checked' : _vm.domainAction == 'register'},on:{\"click\":function($event){return _vm.setDomainAction('register')}}},[_vm._v(\"\\n                                Cari Nama Website (Domain) Anda\\n                            \")]),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__desc\"},[_vm._v(\"Deskripsi : Anda bisa mencari nama website Anda dengan ekstensi domain .com, .net, .org, .info, .sch.id, .or.id, .ac.id, .web.id, .xyz, .website, .space, .site, .online dan .ponpes.id secara gratis.\")])]),_vm._v(\" \"),(_vm.domainAction == 'register')?_c('div',[_c('div',{staticClass:\"block-website__modal-diy-domain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.registerSld),expression:\"registerSld\"}],staticClass:\"block-website__modal-diy-input\",attrs:{\"type\":\"text\",\"placeholder\":\"Tulis Nama Website yang Anda inginkan\",\"required\":_vm.domainAction == 'register'},domProps:{\"value\":(_vm.registerSld)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.registerSld=$event.target.value}}}),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.registerTld),expression:\"registerTld\"}],staticClass:\"block-website__modal-diy-select\",attrs:{\"name\":\"register_tld\",\"required\":\"\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.registerTld=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){return _vm.setDomainID(_vm.registerTld)}]}},_vm._l((_vm.tldList),function(tld){return _c('option',{key:tld.id,domProps:{\"value\":tld.tld}},[_vm._v(\" \"+_vm._s(tld.tld)+\" \")])}),0)]),_vm._v(\" \"),(_vm.domainID)?_c('div',{staticClass:\"pretty-radio__desc\"},[_c('strong',[_vm._v(\"Perhatian:\")]),_vm._v(\" Sebelum mendaftarkan domain dot ID, lihat \"),_vm._m(0),_vm._v(\".\\n                          \")]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"pretty-radio\"},[_c('input',{attrs:{\"type\":\"radio\",\"name\":\"domain_action\",\"value\":\"owndomain\"}}),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__icon pretty-radio__title\",class:{'checked' : _vm.domainAction == 'owndomain'},on:{\"click\":function($event){return _vm.setDomainAction('owndomain')}}},[_vm._v(\"Gunakan Domain Saya Sendiri\")]),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__desc\"},[_vm._v(\"Anda bisa menggunakan nama domain yang sudah Anda beli sebelumnya.\")])]),_vm._v(\" \"),(_vm.domainAction == 'owndomain')?_c('div',{staticClass:\"block-website__modal-diy-domain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ownDomainAddress),expression:\"ownDomainAddress\"}],staticClass:\"block-website__modal-diy-input block-website__modal-diy-input--fullsize\",attrs:{\"type\":\"text\",\"placeholder\":\"Tulis Nama Website Anda\",\"required\":_vm.domainAction == 'owndomain'},domProps:{\"value\":(_vm.ownDomainAddress)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.ownDomainAddress=$event.target.value}}})]):_vm._e()]),_vm._v(\" \"),_c('button',{staticClass:\"nh-btn nh-btn--center nh-btn--orange block-website__modal-diy-btn\",class:{'block-website__modal-diy-btn--disabled': _vm.isButtonDisabled()},attrs:{\"disabled\":_vm.isButtonDisabled()}},[_vm._v(\"Pilih Sekarang\")])])])])])])}\nvar OrderDiyModalvue_type_template_id_01294eb6_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{attrs:{\"href\":\"persyaratan-domain-indonesia\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"title\":\"Persyaratan Domain Indonesia\"}},[_c('strong',[_vm._v(\"Persyaratan Nama Domain Indonesia\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDiyModal.vue?vue&type=template&id=01294eb6&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/OrderDiyModal.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const OrderDiyModalvue_type_script_lang_js_ = ({\n  name: \"OrderDiyModal\",\n\n  created() {\n    this.getTldList();\n  },\n\n  data() {\n    return {\n      data: [],\n      domainAction: \"register\",\n      registerSld: \"\",\n      registerTld: \".com\",\n      owndomainSld: '',\n      owndomainTld: '.com',\n      domainID: false,\n      tldList: []\n    };\n  },\n\n  methods: {\n    setDomainAction(data) {\n      this.domainAction = data;\n    },\n\n    setDomainID(data) {\n      this.domainID = false;\n\n      if (CommonMethods.inArray(this.registerTld, ['.id', '.web.id', '.co.id', '.sch.id', '.or.id', '.ac.id', '.biz.id', '.my.id'])) {\n        this.domainID = true;\n      }\n    },\n\n    setInfoWebsite(data) {\n      let configs = JSON.parse(data.configs);\n      localStorage.setItem(\"website-template-id\", data.id);\n      localStorage.setItem(\"website-template-image\", data.url_img);\n      localStorage.setItem(\"website-template-category\", data.category);\n      localStorage.setItem(\"website-template-name\", data.title);\n      localStorage.setItem(\"website-template-wpstore\", configs.wpstore_id);\n      localStorage.setItem(\"website-template-wpstore\", configs.wpstore_id);\n      localStorage.setItem(\"website-template-currency\", data.currency);\n      localStorage.setItem(\"website-template-price\", data.price);\n    },\n\n    formDiyAction(event) {\n      let configs = JSON.parse(this.data.configs);\n      event.preventDefault();\n      this.$refs.closeOrderDiyModalTrigger.click();\n      this.setInfoWebsite(this.data);\n      this.spinner(true);\n\n      if (this.domainAction == \"register\") {\n        this.checkDomain({\n          sld: this.registerSld,\n          tld: this.registerTld\n        }, result => {\n          if (result) {\n            this.addToCart({\n              selector: null,\n              \"remove-id\": null,\n              domain: {\n                action: \"register\",\n                register_sld: this.registerSld,\n                register_tld: this.registerTld,\n                register_years: 1\n              },\n              free_domain: 1,\n              domain_type: \"register_free\",\n              wpstore: {\n                product_id: \"83\",\n                type: \"wpthemes\",\n                item_id: configs.wpstore_id,\n                wp_domain: this.registerSld + this.registerTld\n              },\n              id: \"84\",\n              period: \"1Y\",\n              multiple: \"1\",\n              auto_force_https: true,\n              auto_install_website: true,\n              install_wp_accelerator: true,\n              \"theme-id\": this.data.id,\n              \"theme-title\": this.data.title,\n              \"theme-currency\": this.data.currency,\n              \"theme-price\": this.data.price\n            });\n          } else {\n            sessionStorage.setItem(\"website-domain\", \"register\");\n            sessionStorage.setItem(\"website-domain-sld\", this.registerSld);\n            sessionStorage.setItem(\"website-domain-tld\", this.registerTld);\n            this.redirectOrder();\n          }\n        });\n      } else {\n        let parsedDomain = psl.parse(this.ownDomainAddress);\n\n        if (psl.isValid(this.ownDomainAddress)) {\n          this.addToCart({\n            selector: null,\n            \"remove-id\": null,\n            domain: {\n              action: \"owndomain\",\n              owndomain_sld: parsedDomain.sld,\n              owndomain_tld: '.' + parsedDomain.tld,\n              register_years: 1\n            },\n            free_domain: 1,\n            domain_type: 'use_existing',\n            wpstore: {\n              product_id: \"83\",\n              type: \"wpthemes\",\n              item_id: configs.wpstore_id,\n              wp_domain: this.ownDomainAddress\n            },\n            id: \"84\",\n            period: \"1Y\",\n            multiple: \"1\",\n            auto_force_https: true,\n            auto_install_website: true,\n            install_wp_accelerator: true,\n            \"theme-id\": this.data.id,\n            \"theme-title\": this.data.title,\n            \"theme-currency\": this.data.currency,\n            \"theme-price\": this.data.price\n          });\n        } else {\n          sessionStorage.setItem(\"website-domain\", \"owndomain\");\n          let explodedDomain = this.ownDomainAddress.split('.');\n          sessionStorage.setItem(\"website-owndomain-sld\", explodedDomain[0]);\n          explodedDomain.splice(0, 1);\n          sessionStorage.setItem(\"website-owndomain-tld\", '.' + explodedDomain.join('.'));\n          this.redirectOrder();\n        }\n      }\n    },\n\n    checkDomain(data, callback) {\n      axios.post(\"/api/guest/domain_check\", data).then(res => {\n        callback(res.data.result);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    addToCart(data) {\n      this.$emit(\"add-to-cart\", {\n        item: data,\n        requestBy: \"diy\"\n      });\n    },\n\n    addToCartResult(data) {\n      if (data.success) {\n        window.location.href = \"/order/checkout\";\n      } else {\n        console.log(\"Error : \" + data.message);\n      }\n    },\n\n    getTldList() {\n      axios.get(\"/api/guest/get-tld-list\").then(res => {\n        if (res.data) {\n          this.tldList = res.data;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    spinner(status) {\n      this.$emit(\"spinner\", status);\n    },\n\n    redirectOrder() {\n      setTimeout(function () {\n        window.location.href = \"/order/website-instant/84\";\n      }, 3000);\n    },\n\n    isButtonDisabled() {\n      if (this.domainAction == 'owndomain' && this.ownDomainAddress == '' || this.domainAction == 'register' && this.registerSld == '') {\n        return true;\n      }\n\n      return false;\n    }\n\n  },\n  props: [\"previewData\", \"addedCartResultDiy\"],\n  watch: {\n    previewData: function (value) {\n      this.data = value;\n    },\n    addedCartResultDiy: function (value) {\n      this.addToCartResult(value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDiyModal.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_OrderDiyModalvue_type_script_lang_js_ = (OrderDiyModalvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDiyModal.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderDiyModal_component = normalizeComponent(\n  OrderFlowWebsite_OrderDiyModalvue_type_script_lang_js_,\n  OrderDiyModalvue_type_template_id_01294eb6_render,\n  OrderDiyModalvue_type_template_id_01294eb6_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const OrderDiyModal = (OrderDiyModal_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/OrderDiyModalSecond.vue?vue&type=template&id=594fbe33&\nvar OrderDiyModalSecondvue_type_template_id_594fbe33_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade block-website__modal-diy\",attrs:{\"id\":\"diy-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"diyModal\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered modal-lg\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content block-website__modal-diy-content\",staticStyle:{\"border-radius\":\".8rem\"}},[_c('div',{staticClass:\"modal-body\"},[_c('button',{ref:\"closeOrderDiyModalTrigger\",staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]),_vm._v(\" \"),_c('h4',{staticClass:\"block-website__modal-diy-title\"},[_vm._v(\"Apa Nama Website Anda\")]),_vm._v(\" \"),_c('p',{staticClass:\"block-website__modal-diy-desc\"},[_vm._v(\"Pilih nama terbaik untuk website Anda.\")]),_vm._v(\" \"),_c('form',{attrs:{\"method\":\"post\",\"action\":\"#\"},on:{\"submit\":_vm.formDiyAction}},[_c('div',[_c('div',{staticClass:\"pretty-radio\"},[_c('input',{attrs:{\"type\":\"radio\",\"name\":\"domain_action\",\"value\":\"register\"}}),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__icon pretty-radio__title\",class:{'checked' : _vm.domainAction == 'register'},on:{\"click\":function($event){return _vm.setDomainAction('register')}}},[_vm._v(\"\\n                Cari Nama Website (Domain) Anda\\n              \")]),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__desc\"},[_vm._v(\"Deskripsi : Anda bisa mencari nama website Anda dengan ekstensi domain .com, .net, .org, .info, .sch.id, .or.id, .ac.id, .web.id, .xyz, .website, .space, .site, .online dan .ponpes.id secara gratis.\")])]),_vm._v(\" \"),(_vm.domainAction == 'register')?_c('div',[_c('div',{staticClass:\"block-website__modal-diy-domain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.registerSld),expression:\"registerSld\"}],staticClass:\"block-website__modal-diy-input\",attrs:{\"type\":\"text\",\"placeholder\":\"Tulis Nama Website yang Anda inginkan\",\"required\":_vm.domainAction == 'register'},domProps:{\"value\":(_vm.registerSld)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.registerSld=$event.target.value}}}),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.registerTld),expression:\"registerTld\"}],staticClass:\"block-website__modal-diy-select\",attrs:{\"name\":\"register_tld\",\"required\":\"\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.registerTld=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},function($event){return _vm.setDomainID(_vm.registerTld)}]}},_vm._l((_vm.tldList),function(tld){return _c('option',{key:tld.id,domProps:{\"value\":tld.tld}},[_vm._v(\" \"+_vm._s(tld.tld)+\" \")])}),0)]),_vm._v(\" \"),(_vm.domainID)?_c('div',{staticClass:\"pretty-radio__desc\"},[_c('strong',[_vm._v(\"Perhatian:\")]),_vm._v(\" Sebelum mendaftarkan domain dot ID, lihat \"),_vm._m(0),_vm._v(\".\\n              \")]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"pretty-radio\"},[_c('input',{attrs:{\"type\":\"radio\",\"name\":\"domain_action\",\"value\":\"owndomain\"}}),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__icon pretty-radio__title\",class:{'checked' : _vm.domainAction == 'owndomain'},on:{\"click\":function($event){return _vm.setDomainAction('owndomain')}}},[_vm._v(\"Gunakan Domain Saya Sendiri\")]),_vm._v(\" \"),_c('p',{staticClass:\"pretty-radio__desc\"},[_vm._v(\"Anda bisa menggunakan nama domain yang sudah Anda beli sebelumnya.\")])]),_vm._v(\" \"),(_vm.domainAction == 'owndomain')?_c('div',{staticClass:\"block-website__modal-diy-domain\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ownDomainAddress),expression:\"ownDomainAddress\"}],staticClass:\"block-website__modal-diy-input block-website__modal-diy-input--fullsize\",attrs:{\"type\":\"text\",\"placeholder\":\"Tulis Nama Website Anda\",\"required\":_vm.domainAction == 'owndomain'},domProps:{\"value\":(_vm.ownDomainAddress)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.ownDomainAddress=$event.target.value}}})]):_vm._e()]),_vm._v(\" \"),_c('button',{staticClass:\"nh-btn nh-btn--center nh-btn--orange block-website__modal-diy-btn\",class:{'block-website__modal-diy-btn--disabled': _vm.isButtonDisabled()},attrs:{\"disabled\":_vm.isButtonDisabled()}},[_vm._v(\"Pilih Sekarang\")])])])])])])}\nvar OrderDiyModalSecondvue_type_template_id_594fbe33_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a',{attrs:{\"href\":\"persyaratan-domain-indonesia\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"title\":\"Persyaratan Domain Indonesia\"}},[_c('strong',[_vm._v(\"Persyaratan Nama Domain Indonesia\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDiyModalSecond.vue?vue&type=template&id=594fbe33&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/OrderDiyModalSecond.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const OrderDiyModalSecondvue_type_script_lang_js_ = ({\n  name: \"OrderDiyModal\",\n\n  created() {\n    this.getTldList();\n    this.setData();\n  },\n\n  data() {\n    return {\n      data: [],\n      domainAction: \"register\",\n      registerSld: \"\",\n      registerTld: \".com\",\n      owndomainSld: '',\n      owndomainTld: '.com',\n      domainID: false,\n      tldList: []\n    };\n  },\n\n  methods: {\n    setData() {\n      this.data = this.previewData;\n    },\n\n    setDomainAction(data) {\n      this.domainAction = data;\n    },\n\n    setDomainID(data) {\n      this.domainID = false;\n\n      if (CommonMethods.inArray(this.registerTld, ['.id', '.web.id', '.co.id', '.sch.id', '.or.id', '.ac.id', '.biz.id', '.my.id'])) {\n        this.domainID = true;\n      }\n    },\n\n    setInfoWebsite(data) {\n      localStorage.setItem(\"website-template-id\", data.id);\n      localStorage.setItem(\"website-template-image\", data.url_img);\n      localStorage.setItem(\"website-template-category\", data.category);\n      localStorage.setItem(\"website-template-name\", data.name);\n      localStorage.setItem(\"website-template-wpstore\", data.wpstore);\n      localStorage.setItem(\"website-template-currency\", data.currency);\n      localStorage.setItem(\"website-template-price\", data.price);\n    },\n\n    formDiyAction(event) {\n      event.preventDefault();\n      this.$refs.closeOrderDiyModalTrigger.click();\n      this.setInfoWebsite(this.data);\n      this.spinner(true);\n\n      if (this.domainAction == \"register\") {\n        this.checkDomain({\n          sld: this.registerSld,\n          tld: this.registerTld\n        }, result => {\n          if (result) {\n            this.addToCart({\n              selector: null,\n              \"remove-id\": null,\n              domain: {\n                action: \"register\",\n                register_sld: this.registerSld,\n                register_tld: this.registerTld,\n                register_years: 1\n              },\n              free_domain: 1,\n              domain_type: \"register_free\",\n              wpstore: {\n                product_id: \"83\",\n                type: \"wpthemes\",\n                item_id: this.data.wpstore,\n                wp_domain: this.registerSld + this.registerTld\n              },\n              id: \"84\",\n              period: \"1Y\",\n              multiple: \"1\",\n              auto_force_https: true,\n              auto_install_website: true,\n              install_wp_accelerator: true,\n              \"theme-id\": this.data.id,\n              \"theme-title\": this.data.name,\n              \"theme-currency\": this.data.currency,\n              \"theme-price\": this.data.price\n            });\n          } else {\n            sessionStorage.setItem(\"website-domain\", \"register\");\n            sessionStorage.setItem(\"website-domain-sld\", this.registerSld);\n            sessionStorage.setItem(\"website-domain-tld\", this.registerTld);\n            this.redirectOrder();\n          }\n        });\n      } else {\n        let parsedDomain = psl.parse(this.ownDomainAddress);\n\n        if (psl.isValid(this.ownDomainAddress)) {\n          this.addToCart({\n            selector: null,\n            \"remove-id\": null,\n            domain: {\n              action: \"owndomain\",\n              owndomain_sld: parsedDomain.sld,\n              owndomain_tld: '.' + parsedDomain.tld,\n              register_years: 1\n            },\n            free_domain: 1,\n            domain_type: 'use_existing',\n            wpstore: {\n              product_id: \"83\",\n              type: \"wpthemes\",\n              item_id: this.data.wpstore,\n              wp_domain: this.ownDomainAddress\n            },\n            id: \"84\",\n            period: \"1Y\",\n            multiple: \"1\",\n            auto_force_https: true,\n            auto_install_website: true,\n            install_wp_accelerator: true,\n            \"theme-id\": this.data.id,\n            \"theme-title\": this.data.name,\n            \"theme-currency\": this.data.currency,\n            \"theme-price\": this.data.price\n          });\n        } else {\n          sessionStorage.setItem(\"website-domain\", \"owndomain\");\n\n          if (parsedDomain.sld === undefined || parsedDomain.tld === undefined) {\n            sessionStorage.setItem(\"website-owndomain-sld\", '');\n            sessionStorage.setItem(\"website-owndomain-tld\", '.com');\n          } else {\n            sessionStorage.setItem(\"website-owndomain-sld\", parsedDomain.sld);\n            sessionStorage.setItem(\"website-owndomain-tld\", parsedDomain.tld);\n          }\n\n          this.redirectOrder();\n        }\n      }\n    },\n\n    checkDomain(data, callback) {\n      axios.post(\"/api/guest/domain_check\", data).then(res => {\n        callback(res.data.result);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    addToCart(data) {\n      this.$emit(\"add-to-cart\", {\n        item: data,\n        requestBy: \"diy\"\n      });\n    },\n\n    addToCartResult(data) {\n      if (data.success) {\n        window.location.href = \"/order/checkout\";\n      } else {\n        console.log(\"Error : \" + data.message);\n      }\n    },\n\n    getTldList() {\n      axios.get(\"/api/guest/get-tld-list\").then(res => {\n        if (res.data) {\n          this.tldList = res.data;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    spinner(status) {\n      this.$emit(\"spinner\", status);\n    },\n\n    redirectOrder() {\n      setTimeout(function () {\n        window.location.href = \"/order/website-instant/84\";\n      }, 3000);\n    },\n\n    isButtonDisabled() {\n      if (this.domainAction == 'owndomain' && this.ownDomainAddress == '' || this.domainAction == 'register' && this.registerSld == '') {\n        return true;\n      }\n\n      return false;\n    }\n\n  },\n  props: [\"previewData\", \"addedCartResultDiy\"],\n  watch: {\n    previewData: function (value) {\n      this.data = value;\n    },\n    addedCartResultDiy: function (value) {\n      this.addToCartResult(value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDiyModalSecond.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_OrderDiyModalSecondvue_type_script_lang_js_ = (OrderDiyModalSecondvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDiyModalSecond.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderDiyModalSecond_component = normalizeComponent(\n  OrderFlowWebsite_OrderDiyModalSecondvue_type_script_lang_js_,\n  OrderDiyModalSecondvue_type_template_id_594fbe33_render,\n  OrderDiyModalSecondvue_type_template_id_594fbe33_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const OrderDiyModalSecond = (OrderDiyModalSecond_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/FilterDiyList.vue?vue&type=template&id=81c41c0e&\nvar FilterDiyListvue_type_template_id_81c41c0e_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__content-category\"},[_c('div',{staticClass:\"block-website__content-category-list\"},_vm._l((_vm.categoryList),function(category,categoryIndex){return _c('div',{key:categoryIndex,staticClass:\"block-website__content-category-list-child\",class:{'block-website__content-category-list-child--active' : _vm.selectedCategory == category},on:{\"click\":function($event){return _vm.setCategory(category)}}},[_vm._v(\"\\n            \"+_vm._s(category)+\"\\n        \")])}),0),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-category-search\"},[_c('div',{staticClass:\"block-website__content-category-search-left\"},[_vm._v(\"Kategori:\")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-category-search-right\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search),expression:\"search\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Temukan website favorit anda\"},domProps:{\"value\":(_vm.search)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchWebsite()},\"input\":function($event){if($event.target.composing){ return; }_vm.search=$event.target.value}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-category-mobile\"},[_c('div',{staticClass:\"block-website__content-category-mobile-label\"},[_vm._v(\"Kategori\")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-category-mobile-dropdown\"},[_c('div',{staticClass:\"block-website__content-category-mobile-dropdown-selected\",on:{\"click\":function($event){return _vm.openDropdown()}}},[_vm._v(_vm._s(_vm.selectedCategory))]),_vm._v(\" \"),_c('ul',{staticClass:\"block-website__content-category-mobile-dropdown-list dropdown\",class:{'d-block' : _vm.dropdownStatus}},_vm._l((_vm.categoryList),function(category,categoryIndex){return _c('li',{key:categoryIndex,on:{\"click\":function($event){return _vm.setCategory(category)}}},[_c('a',{attrs:{\"href\":\"javascript:void(0)\"}},[_vm._v(_vm._s(category))])])}),0)])])])}\nvar FilterDiyListvue_type_template_id_81c41c0e_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/FilterDiyList.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const FilterDiyListvue_type_script_lang_js_ = ({\n  name: \"FilterDiyList\",\n\n  data() {\n    return {\n      categoryList: [\"Semua Website\", \"Profil Usaha\", \"Toko\", \"Institusi\", \"Travel\", \"Blog\"],\n      selectedCategory: \"Semua Website\",\n      search: \"\",\n      dropdownStatus: false\n    };\n  },\n\n  methods: {\n    setCategory(data) {\n      this.search = \"\";\n      this.selectedCategory = data;\n      this.$emit(\"category\", this.selectedCategory);\n      this.dropdownStatus = false;\n    },\n\n    searchWebsite() {\n      this.selectedCategory = \"Semua Website\";\n      this.$emit(\"search\", this.search);\n    },\n\n    openDropdown() {\n      this.dropdownStatus = !this.dropdownStatus;\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/FilterDiyList.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_FilterDiyListvue_type_script_lang_js_ = (FilterDiyListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/FilterDiyList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar FilterDiyList_component = normalizeComponent(\n  OrderFlowWebsite_FilterDiyListvue_type_script_lang_js_,\n  FilterDiyListvue_type_template_id_81c41c0e_render,\n  FilterDiyListvue_type_template_id_81c41c0e_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const FilterDiyList = (FilterDiyList_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/FilterDiyListSecond.vue?vue&type=template&id=dfbc226c&\nvar FilterDiyListSecondvue_type_template_id_dfbc226c_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__filter\"},[_c('div',{staticClass:\"block-website__filter-item flex-fill\"},[_c('div',{staticClass:\"block-website__filter-label\"},[_vm._v(\"Urutkan\")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__filter-item-dropdown\"},[_c('div',{staticClass:\"block-website__filter-item-dropdown-selected\",on:{\"click\":function($event){return _vm.openDropdownSort()}}},[_vm._v(_vm._s(_vm.selectedSort))]),_vm._v(\" \"),_c('ul',{staticClass:\"block-website__filter-item-dropdown-list dropdown\",class:{'d-block' : _vm.dropdownSortStatus}},_vm._l((_vm.sortList),function(sort,sortIndex){return _c('li',{key:sortIndex,on:{\"click\":function($event){return _vm.setSort(sort)}}},[_c('a',{attrs:{\"href\":\"javascript:void(0)\"}},[_vm._v(_vm._s(sort))])])}),0)])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__filter-item flex-fill\"},[_c('div',{staticClass:\"block-website__filter-item-dropdown\"},[_c('div',{staticClass:\"block-website__filter-item-dropdown-selected\",on:{\"click\":function($event){return _vm.openDropdownCategory()}}},[_vm._v(_vm._s(_vm.selectedCategory))]),_vm._v(\" \"),_c('ul',{staticClass:\"block-website__filter-item-dropdown-list dropdown\",class:{'d-block' : _vm.dropdownCategoryStatus}},_vm._l((_vm.categoryList),function(category,categoryIndex){return _c('li',{key:categoryIndex,on:{\"click\":function($event){return _vm.setCategory(category)}}},[_c('a',{attrs:{\"href\":\"javascript:void(0)\"}},[_vm._v(_vm._s(category))])])}),0)])]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__filter-item flex-fill\"},[_c('div',{staticClass:\"block-website__filter-item-search\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search),expression:\"search\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Cari Website\"},domProps:{\"value\":(_vm.search)},on:{\"keyup\":function($event){return _vm.searchWebsite()},\"input\":function($event){if($event.target.composing){ return; }_vm.search=$event.target.value}}})])])])}\nvar FilterDiyListSecondvue_type_template_id_dfbc226c_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/FilterDiyListSecond.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const FilterDiyListSecondvue_type_script_lang_js_ = ({\n  name: \"FilterDiyList\",\n\n  data() {\n    return {\n      categoryList: [\"Semua Website\", \"Profil Usaha\", \"Toko\", \"Institusi\", \"Travel\", \"Blog\"],\n      sortList: [\"Terbaru\", \"A-Z\", \"Z-A\"],\n      selectedCategory: \"Semua Website\",\n      selectedSort: \"Terbaru\",\n      search: \"\",\n      dropdownCategoryStatus: false,\n      dropdownSortStatus: false\n    };\n  },\n\n  methods: {\n    setCategory(data) {\n      this.search = \"\";\n      this.selectedCategory = data;\n      this.$emit(\"category\", this.selectedCategory);\n      this.dropdownCategoryStatus = false;\n    },\n\n    setSort(data) {\n      this.search = \"\";\n      this.selectedSort = data;\n      this.$emit(\"sort\", this.selectedSort);\n      this.dropdownSortStatus = false;\n    },\n\n    searchWebsite() {\n      this.selectedCategory = \"Semua Website\";\n      this.$emit(\"search\", this.search);\n    },\n\n    openDropdownCategory() {\n      this.dropdownSortStatus = false;\n      this.dropdownCategoryStatus = !this.dropdownCategoryStatus;\n    },\n\n    openDropdownSort() {\n      this.dropdownCategoryStatus = false;\n      this.dropdownSortStatus = !this.dropdownSortStatus;\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/FilterDiyListSecond.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_FilterDiyListSecondvue_type_script_lang_js_ = (FilterDiyListSecondvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/FilterDiyListSecond.vue\n\n\n\n\n\n/* normalize component */\n;\nvar FilterDiyListSecond_component = normalizeComponent(\n  OrderFlowWebsite_FilterDiyListSecondvue_type_script_lang_js_,\n  FilterDiyListSecondvue_type_template_id_dfbc226c_render,\n  FilterDiyListSecondvue_type_template_id_dfbc226c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const FilterDiyListSecond = (FilterDiyListSecond_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/FilterDiyListTagGroup.vue?vue&type=template&id=0bda395f&\nvar FilterDiyListTagGroupvue_type_template_id_0bda395f_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__filter-group\"},[_c('div',{class:[_vm.selectedCategory == 'Semua Website' ? 'block-website__filter-group-item block-website__filter-group-item-active': 'block-website__filter-group-item', 'block-website__filter-group-item'],on:{\"click\":function($event){return _vm.setCategory('Semua Website')}}},[_c('span',{staticClass:\"block-website__filter-group-text\"},[_vm._v(\"Semua\")])]),_vm._v(\" \"),_vm._l((_vm.categoryList),function(category,categoryIndex){return _c('div',{key:categoryIndex,class:[_vm.selectedCategory == category ? 'block-website__filter-group-item block-website__filter-group-item-active': 'block-website__filter-group-item', 'block-website__filter-group-item'],on:{\"click\":function($event){return _vm.setCategory(category)}}},[_c('span',{staticClass:\"block-website__filter-group-text\"},[_vm._v(_vm._s(category))])])})],2)}\nvar FilterDiyListTagGroupvue_type_template_id_0bda395f_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/FilterDiyListTagGroup.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const FilterDiyListTagGroupvue_type_script_lang_js_ = ({\n  name: \"FilterDiyList\",\n\n  data() {\n    return {\n      categoryList: [\"Profil Usaha\", \"Toko\", \"Institusi\", \"Travel\", \"Blog\"],\n      sortList: [\"Terbaru\", \"A-Z\", \"Z-A\"],\n      selectedCategory: \"Semua Website\",\n      selectedSort: \"Terbaru\",\n      search: \"\",\n      dropdownCategoryStatus: false,\n      dropdownSortStatus: false\n    };\n  },\n\n  methods: {\n    setCategory(data) {\n      this.search = \"\";\n      this.selectedCategory = data;\n      this.$emit(\"category\", this.selectedCategory);\n      this.dropdownCategoryStatus = false;\n    },\n\n    setSort(data) {\n      this.search = \"\";\n      this.selectedSort = data;\n      this.$emit(\"sort\", this.selectedSort);\n      this.dropdownSortStatus = false;\n    },\n\n    searchWebsite() {\n      this.selectedCategory = \"Semua Website\";\n      this.$emit(\"search\", this.search);\n    },\n\n    openDropdownCategory() {\n      this.dropdownSortStatus = false;\n      this.dropdownCategoryStatus = !this.dropdownCategoryStatus;\n    },\n\n    openDropdownSort() {\n      this.dropdownCategoryStatus = false;\n      this.dropdownSortStatus = !this.dropdownSortStatus;\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/FilterDiyListTagGroup.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_FilterDiyListTagGroupvue_type_script_lang_js_ = (FilterDiyListTagGroupvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/FilterDiyListTagGroup.vue\n\n\n\n\n\n/* normalize component */\n;\nvar FilterDiyListTagGroup_component = normalizeComponent(\n  OrderFlowWebsite_FilterDiyListTagGroupvue_type_script_lang_js_,\n  FilterDiyListTagGroupvue_type_template_id_0bda395f_render,\n  FilterDiyListTagGroupvue_type_template_id_0bda395f_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const FilterDiyListTagGroup = (FilterDiyListTagGroup_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PaginationDiyList.vue?vue&type=template&id=1a8419ac&\nvar PaginationDiyListvue_type_template_id_1a8419ac_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.totalPage > 1)?_c('div',{staticClass:\"block-website__content-paging container\"},[(_vm.isV2())?_c('div',{staticClass:\"block-website__content-paging-words block-website__content-paging-words--new\"},[_vm._v(\"Menampilkan \"+_vm._s(_vm.totalResource)+\" dari \"+_vm._s(_vm.listWebsite)+\" tema\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-paging-arrow\",on:{\"click\":function($event){return _vm.prevPage()}}},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/paging-icon-left.svg\",\"alt\":\"\"}})]),_vm._v(\" \"),_vm._l((_vm.totalPage),function(page,index){return _c('div',{key:index,staticClass:\"block-website__content-paging-number\",class:{'block-website__content-paging-number--active' : page == _vm.currentPage},on:{\"click\":function($event){return _vm.setPage(page)}}},[_vm._v(\"\\n        \"+_vm._s(page)+\"\\n    \")])}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-paging-arrow\",on:{\"click\":function($event){return _vm.nextPage()}}},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/paging-icon-right.svg\",\"alt\":\"\"}})])],2):_vm._e()}\nvar PaginationDiyListvue_type_template_id_1a8419ac_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PaginationDiyList.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PaginationDiyListvue_type_script_lang_js_ = ({\n  name: \"PaginationDiyList\",\n  methods: {\n    isV2() {\n      if (window.location.pathname.includes(\"/v2/\")) {\n        return false;\n      }\n\n      return true;\n    },\n\n    setPage(page) {\n      this.$emit(\"pagination\", {\n        totalPage: this.totalPage,\n        currentPage: page,\n        totalResource: this.setTotalResource(page)\n      });\n    },\n\n    setTotalResource(page) {\n      let totalResource = this.listWebsite - (page - 1) * 9;\n      return totalResource > 9 ? 9 : totalResource;\n    },\n\n    prevPage() {\n      let page = this.currentPage - 1;\n\n      if (!page) {\n        return true;\n      }\n\n      this.setPage(page);\n    },\n\n    nextPage() {\n      let page = this.currentPage + 1;\n\n      if (page > this.totalPage) {\n        return true;\n      }\n\n      this.setPage(page);\n    }\n\n  },\n  props: [\"currentPage\", \"totalPage\", \"totalResource\", \"listWebsite\"]\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PaginationDiyList.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_PaginationDiyListvue_type_script_lang_js_ = (PaginationDiyListvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PaginationDiyList.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PaginationDiyList_component = normalizeComponent(\n  OrderFlowWebsite_PaginationDiyListvue_type_script_lang_js_,\n  PaginationDiyListvue_type_template_id_1a8419ac_render,\n  PaginationDiyListvue_type_template_id_1a8419ac_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const PaginationDiyList = (PaginationDiyList_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PaginationDiyListSecond.vue?vue&type=template&id=637779d8&\nvar PaginationDiyListSecondvue_type_template_id_637779d8_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.totalPage > 1)?_c('div',{staticClass:\"block-website__content-paging container\"},[_c('div',{staticClass:\"block-website__content-paging-arrow\",on:{\"click\":function($event){return _vm.prevPage()}}},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/paging-icon-left.svg\",\"alt\":\"\"}})]),_vm._v(\" \"),_vm._l((_vm.totalPage),function(page,index){return _c('div',{key:index,staticClass:\"block-website__content-paging-number\",class:{'block-website__content-paging-number--active' : page == _vm.currentPage},on:{\"click\":function($event){return _vm.setPage(page)}}},[_vm._v(\"\\n        \"+_vm._s(page)+\"\\n    \")])}),_vm._v(\" \"),_c('div',{staticClass:\"block-website__content-paging-arrow\",on:{\"click\":function($event){return _vm.nextPage()}}},[_c('img',{attrs:{\"src\":\"/assets/images/2020/membuat-website/paging-icon-right.svg\",\"alt\":\"\"}})])],2):_vm._e()}\nvar PaginationDiyListSecondvue_type_template_id_637779d8_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/PaginationDiyListSecond.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const PaginationDiyListSecondvue_type_script_lang_js_ = ({\n  name: \"PaginationDiyList\",\n  methods: {\n    setPage(page) {\n      trackingClickCTA('CTA Pagination Web Instant', 'Click_PaginationWebInstant');\n      this.$emit(\"pagination\", {\n        totalPage: this.totalPage,\n        currentPage: page,\n        totalResource: this.setTotalResource(page)\n      });\n    },\n\n    setTotalResource(page) {\n      let totalResource = this.listWebsite - (page - 1) * 9;\n      return totalResource > 9 ? 9 : totalResource;\n    },\n\n    prevPage() {\n      let page = this.currentPage - 1;\n\n      if (!page) {\n        return true;\n      }\n\n      this.setPage(page);\n    },\n\n    nextPage() {\n      let page = this.currentPage + 1;\n\n      if (page > this.totalPage) {\n        return true;\n      }\n\n      this.setPage(page);\n    }\n\n  },\n  props: [\"currentPage\", \"totalPage\", \"totalResource\", \"listWebsite\"]\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PaginationDiyListSecond.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_PaginationDiyListSecondvue_type_script_lang_js_ = (PaginationDiyListSecondvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/PaginationDiyListSecond.vue\n\n\n\n\n\n/* normalize component */\n;\nvar PaginationDiyListSecond_component = normalizeComponent(\n  OrderFlowWebsite_PaginationDiyListSecondvue_type_script_lang_js_,\n  PaginationDiyListSecondvue_type_template_id_637779d8_render,\n  PaginationDiyListSecondvue_type_template_id_637779d8_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const PaginationDiyListSecond = (PaginationDiyListSecond_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/OrderDifmModal.vue?vue&type=template&id=0ed25f13&\nvar OrderDifmModalvue_type_template_id_0ed25f13_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade block-website__modal-difm\",attrs:{\"id\":\"difm-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"difmModal\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog block-website__modal-difm-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content block-website__modal-difm-dialog-content\"},[_c('div',{staticClass:\"modal-body block-website__modal-difm-dialog-content-body\"},[_c('div',{staticClass:\"block-website__modal-difm-dialog-content-body-title\"},[_vm._v(\"Membuat Website Kini Lebih Mudah\")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-difm-dialog-content-body-description block-website__modal-difm-dialog-content-body-description--new\"},[_vm._v(\"\\n                  Jasa pembuatan website Niagahoster siap mewujudkan impian Anda. Hubungi tim profesional kami dan website langsung dapat digunakan. Anda sangat suka kebebasan? Buat sendiri website Anda dalam beberapa klik saja!.\\n                \")]),_vm._v(\" \"),_c('div',{staticClass:\"block-website__modal-difm-dialog-content-body-item\"},[_c('div',{staticClass:\"row justify-content-center\"},_vm._l((_vm.listWebsite),function(list){return _c('div',{key:list.id,staticClass:\"col-12 col-md-6 col-xl-4\"},[_c('div',{staticClass:\"block-website__modal-difm-dialog-content-body-item-card block-website__modal-difm-dialog-content-body-item-card--new\"},[_c('h5',{staticClass:\"block-website__modal-difm-dialog-content-body-item-card-title\"},[_vm._v(_vm._s(list.title))]),_vm._v(\" \"),_c('p',{staticClass:\"block-website__modal-difm-dialog-content-body-item-card-price\"},[_vm._v(\"Rp \"+_vm._s(_vm.priceFormat(list.price )))]),_vm._v(\" \"),_c('a',{staticClass:\"nh-btn nh-btn--orange no-gutters gtmProductView website-custom\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.order(list)}}},[_vm._v(\"\\n                                    Pilih Sekarang\\n                                \")]),_vm._v(\" \"),_c('p',{staticClass:\"block-website__modal-difm-dialog-content-body-item-card-description\"},[_vm._v(_vm._s(list.desc))]),_vm._v(\" \"),_c('ul',{staticClass:\"block-website__modal-difm-dialog-content-body-item-card-point\"},_vm._l((list.features),function(feature,featureIndex){return _c('li',{key:featureIndex},[_vm._m(0,true),_vm._v(\" \"),_c('p',{staticClass:\"block-website__modal-difm-dialog-content-body-item-card-point-text\"},[_vm._v(_vm._s(feature))])])}),0)])])}),0)])]),_vm._v(\" \"),_c('button',{ref:\"closeOrderDifmModalTrigger\",staticClass:\"d-none\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}})])])])}\nvar OrderDifmModalvue_type_template_id_0ed25f13_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-website__modal-difm-dialog-content-body-item-card-point-icon nh-tooltip\"},[_c('img',{attrs:{\"src\":\"/assets/images/2019/hosting-package/icon-question-mark.svg\"}})])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDifmModal.vue?vue&type=template&id=0ed25f13&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/OrderDifmModal.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const OrderDifmModalvue_type_script_lang_js_ = ({\n  name: \"OrderDifmModal\",\n\n  created() {\n    this.getDifmList();\n  },\n\n  data() {\n    return {\n      listWebsite: []\n    };\n  },\n\n  methods: {\n    getDifmList() {\n      axios.get(\"/api/guest/get-website-custom-list\").then(res => {\n        if (res.data) {\n          this.listWebsite = res.data;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    priceFormat(num) {\n      return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n    },\n\n    order(data) {\n      this.$refs.closeOrderDifmModalTrigger.click();\n      this.$emit(\"spinner\", true);\n      sessionStorage.setItem(\"website-custom\", $(this).data(\"title\"));\n      this.addToCart({\n        selector: null,\n        \"remove-id\": null,\n        domain: \"\",\n        free_domain: 1,\n        domain_type: \"register_free\",\n        id: data.id,\n        period: \"1Y\",\n        multiple: \"1\"\n      });\n    },\n\n    addToCart(data) {\n      this.$emit(\"add-to-cart\", {\n        item: data,\n        requestBy: \"difm\"\n      });\n    },\n\n    addToCartResult(data) {\n      if (data.success) {\n        window.location.href = \"/order/checkout\";\n      } else {\n        console.log(\"Error : \" + data.message);\n      }\n    }\n\n  },\n  props: [\"addedCartResultDifm\"],\n  watch: {\n    addedCartResultDifm: function (value) {\n      this.addToCartResult(value);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDifmModal.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowWebsite_OrderDifmModalvue_type_script_lang_js_ = (OrderDifmModalvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowWebsite/OrderDifmModal.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderDifmModal_component = normalizeComponent(\n  OrderFlowWebsite_OrderDifmModalvue_type_script_lang_js_,\n  OrderDifmModalvue_type_template_id_0ed25f13_render,\n  OrderDifmModalvue_type_template_id_0ed25f13_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const OrderDifmModal = (OrderDifmModal_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SummaryCartV2.vue?vue&type=template&id=199c3dcd&\nvar SummaryCartV2vue_type_template_id_199c3dcd_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{attrs:{\"id\":\"summary-cart-wrapper\"}},[(_vm.new_sidebar)?_c('div',[_c('div',{staticClass:\"as-card-base as-card-base--full-width summary-cart\"},[(_vm.flow !== 'cart_page')?_c('div',{staticClass:\"order-step\"},[(_vm.flow === 'website' || _vm.flow === 'mailhosting' || _vm.flow === 'vps_kvm')?_c('ul',[_c('li',{staticClass:\"order-step__item\",class:{\n                          'order-step__item--active': _vm.orderflow_step == 1,\n                          'order-step__item--complete': _vm.orderflow_step > 1\n                      }},[(_vm.flow === 'website')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Atur Website & Domain\")]):(_vm.flow === 'vps_kvm')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Pilih VPS KVM\")]):_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Pilih Website & Domain\")])]),_vm._v(\" \"),_vm._m(0)]):_vm._e(),_vm._v(\" \"),(_vm.flow !== 'hosting')?_c('ul',[_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 1, 'order-step__item--complete':_vm.orderflow_step > 1}},[(_vm.flow === 'vps' && _vm.plan_type === 'cpanel')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih VPS cPanel\")]):(_vm.flow === 'vps')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Cloud VPS\")]):_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Pilih Hosting & Domain\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 2, 'order-step__item--complete':_vm.orderflow_step > 2}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Tambah Fitur\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 3, 'order-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Metode Pembayaran\")])])]):_c('ul',[_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step <= 2, 'order-step__item--complete':_vm.orderflow_step > 2}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Tambah Paket\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 3, 'order-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Metode Pembayaran\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 4, 'order-step__item--complete':_vm.orderflow_step > 4}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Selesai\")])])])]):_c('div',{staticClass:\"mb-4\"},[_vm._v(\"Ringkasan Order\")]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"summary-cart__item\",attrs:{\"id\":\"summary-cart__item\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.cart.items.length)?_c('div',_vm._l((_vm.cart.items),function(item){return _c('div',{key:item.id},[_c('div',[_c('div',{staticClass:\"row mb-2\"},[_c('div',{staticClass:\"col-10\"},[_c('div',{staticClass:\"summary-cart__item-type text-capitalize\"},[_vm._v(\"\\n                                              \"+_vm._s(_vm.itemType(item))+\"\\n                                              \"),(item.type == 'hosting' && item.product_id != 84 || item.type == 'domain')?_c('div',{staticClass:\"as-card-base__feature--icon as-card-base__feature--icon-exclamation as-tooltip\"},[_c('p',{staticClass:\"as-tooltip__info as-tooltip__info--bottom\",class:{'as-tooltip__domain':item.type == 'domain'}},[_vm._v(\"Besar biaya perpanjangan Anda adalah \"+_vm._s(_vm._f(\"formatPrice\")(item.price)))])]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-6\"},[(item.type == 'domain' && !item.cart_type && item.cart_type == 'tmp_domain')?_c('div',{staticClass:\"summary-cart__item-title\"},[_vm._v(\"\\n                                              \"+_vm._s(_vm.toUpperCase(item[item.action + \"_sld\"]))+_vm._s(_vm.toUpperCase(item[item.action + \"_tld\"]))+\"\\n                                          \")]):_vm._e(),_vm._v(\" \"),(item.type == 'hosting' && _vm.flow === 'website')?_c('div',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.period[item.period].text))]):(item.type === 'custom' && item.title === 'cPanel WHM Admin')?_c('div',{staticClass:\"summary-cart__item-title\"},[_vm._v(\"Gratis \"+_vm._s(item.title))]):_c('div',{staticClass:\"summary-cart__item-title\"},[(item.type == 'hosting' && item.total != item.price)?_c('div',[_vm._v(\"\\n                                                  Diskon \"+_vm._s(_vm.discountPrice(item.total, item.price))+\"%\\n                                              \")]):_vm._e(),_vm._v(\" \"),(item.type == 'domain')?_c('span',[_vm._v(\"Gratis for \")]):(item.type == 'hosting' && item.product_id != 84)?_c('span',[_vm._v(\"Hosting \")]):_vm._e(),_vm._v(\"\\n                                              \"+_vm._s(item.title)+\"\\n                                          \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-6\"},[_c('div',{staticClass:\"summary-cart__item-price text-right\",attrs:{\"id\":\"hosting-package-price\"}},[_c('div',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.total)))]),_vm._v(\" \"),(item.price != undefined && item.total != item.price)?_c('s',{staticClass:\"summary-cart__normal-price\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.price)))]):_vm._e()]),_vm._v(\" \"),(item.vps_cpanel && item.title === 'cPanel WHM Admin')?_c('div',{staticClass:\"summary-cart__item-price\"},[_c('s',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.discount_price)))])]):_vm._e()])]),_vm._v(\" \"),_c('hr')])])}),0):_vm._e()]),_vm._v(\" \"),_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Pajak & Biaya Tambahan\")]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.taxName))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")((_vm.cart.total * _vm.taxRate))))])])])],1),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),(_vm.orderflow_step == 3 || _vm.flow === 'cart_page')?_c('div',{staticClass:\"summary-cart__coupon d-none d-lg-block\"},[(!_vm.show_coupon_status && _vm.additionalDiscountPayGateway == 0)?_c('div',{staticClass:\"input-group mb-3\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.coupon_code),expression:\"coupon_code\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"name\":\"coupon_code\",\"placeholder\":\"Kode Kupon (opsional)\",\"aria-label\":\"Kode Kupon (opsional)\",\"aria-describedby\":\"coupon-code\"},domProps:{\"value\":(_vm.coupon_code)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.coupon_code=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-secondary\",class:{ 'summary-cart__coupon--btn-grey': _vm.coupon_code == '' },attrs:{\"id\":\"coupon-code\",\"type\":\"button\",\"disabled\":_vm.coupon_code == ''},on:{\"click\":_vm.usePromoCode}},[_vm._v(\"\\n                          Gunakan\\n                          \")])])]):_vm._e(),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_coupon_status)?_c('div',{staticClass:\"row as-mb-8\"},[_c('div',{staticClass:\"col-10\"},[(_vm.coupon_status.result)?_c('div',{staticClass:\"summary-cart__item-coupon\"},[_c('div',[_vm._v(\"\\n                                      Kupon \"),_c('span',[_vm._v(_vm._s(_vm.coupon_code))]),_vm._v(\" telah diterapkan.\\n                                      \"),(_vm.extra_point)?_c('span',[_vm._v(\" dan Anda akan mendapatkan Bonus Extra \"),_c('strong',[_vm._v(_vm._s(_vm.extra_point))]),_vm._v(\" Poin pada order ini\")]):_vm._e()])]):_c('div',{staticClass:\"summary-cart__coupon-status--error\"},[_c('div',[_vm._v(_vm._s(_vm.coupon_status.message))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('p',{staticClass:\"font-size-18 text-right\",on:{\"click\":function($event){return _vm.removeCoupon()}}},[_c('span',{staticClass:\"fa fa-times remove-item\"})])])]):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.additionalDiscountPayGateway > 0)?_c('div',{staticClass:\"row as-mb-8\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"summary-cart__item-coupon\"},[_c('div',[_vm._v(\"\\n                                      Pembayaran \"),_c('strong',[_vm._v(_vm._s(_vm.selectedPaymentMethodName))]),_vm._v(\" diterapkan\\n                                  \")])])])]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),(_vm.totalDiscount != 0)?_c('div',{staticClass:\"row as-mb-10\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"summary-cart__item-save\"},[(_vm.additionalDiscountPayGateway > 0)?_c('div',[_vm._v(\"Tambahan diskon \"+_vm._s(_vm.cart.additional_discount_gateway.discount.type == \"percentage\" ? _vm.cart.additional_discount_gateway.discount.value + \"%\" : (_vm.cart.additional_discount_gateway.discount.value | _vm.formatPrice))+\", Anda akan lebih hemat sebesar \"),_c('span',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(Number(_vm.totalDiscount))))])]):_c('div',[_vm._v(\"Selamat! Anda berhasil berhemat \"),_c('span',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(Number(_vm.totalDiscount))))]),_vm._v(\".\")])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"summary-cart__total\"},[_c('div',{staticClass:\"row align-items-center\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"col-9\"},[_c('p',{staticClass:\"summary-cart__total-price\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")(_vm.total)))])])])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row justify-content-beetwen align-items-center summary-cart__payment-method\"},[_c('p',{staticClass:\"col mb-0\"},[_vm._v(\"Metode Pembayaran\")]),_vm._v(\" \"),(_vm.use_balance && _vm.gateway_id == 10)?_c('div',{staticClass:\"col-auto\"},[_vm._m(2)]):(_vm.highlight_payment)?_c('div',{staticClass:\"col-auto\"},[_c('span',[_c('strong',[_vm._v(_vm._s(_vm.highlight_payment)+\" \")])])]):_c('div',{staticClass:\"col-auto\"},_vm._l((_vm.payment_methods),function(method){return _c('strong',{key:method.id},[(method.id == _vm.gateway_id)?_c('span',[_vm._v(_vm._s(method.title))]):_vm._e()])}),0)]),_vm._v(\" \"),_c('tos-text')],1)])]),_vm._v(\" \"),(_vm.orderflow_step == 3 && _vm.client)?_c('div',{staticClass:\"d-none d-lg-block gtmCTA\",staticStyle:{\"height\":\"48px\"},attrs:{\"id\":\"checkout-button-wrapper\"}},[_c('div',{attrs:{\"id\":\"checkout-button\"}},[_c('a',{staticClass:\"button-default button-white-orange button-block nunito-bold PaymentPage_ButtonCheckoutSekarang_Clicked\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.checkoutNow}},[_vm._v(\"\\n                  Checkout Sekarang\\n              \")])])]):(_vm.flow === 'cart_page')?_c('div',{staticClass:\"d-none d-lg-block gtmCTA\",staticStyle:{\"height\":\"48px\"}},[_c('a',{staticClass:\"button-default button-white-orange button-block nunito-bold\",attrs:{\"href\":\"/order/checkout\"}},[_vm._v(\"Checkout Sekarang\")])]):_vm._e(),_vm._v(\" \"),(_vm.popup_login && _vm.orderflow_step == 3 && ! _vm.client)?_c('div',{staticClass:\"d-none d-lg-block gtmCTA\",staticStyle:{\"height\":\"48px\"}},[_c('div',{attrs:{\"id\":\"checkout-button\"}},[_c('a',{staticClass:\"button-default button-white-orange button-block nunito-bold PaymentPage_ButtonLoginUntukBayar_Clicked\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.checkoutNow}},[_vm._v(\"\\n              Masuk untuk Checkout\\n              \")])])]):_vm._e()]):_c('div',{attrs:{\"id\":\"summary-cart\"}},[_c('div',{staticClass:\"summary-cart\"},[(_vm.flow !== 'cart_page')?_c('div',{staticClass:\"orderflow-step\"},[(_vm.flow === 'website' || _vm.flow === 'mailhosting')?_c('ul',[_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{\n              'orderflow-step__item--active': _vm.orderflow_step == 1,\n              'orderflow-step__item--complete': _vm.orderflow_step > 1\n            }},[(_vm.flow === 'website')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Atur Website & Domain\")]):_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Website & Domain\")])]),_vm._v(\" \"),_vm._m(3)]):(_vm.flow === 'vps_kvm')?_c('ul',[_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{\n              'orderflow-step__item--active': _vm.orderflow_step == 1,\n              'orderflow-step__item--complete': _vm.orderflow_step > 1\n            }},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih VPS KVM\")])]),_vm._v(\" \"),_vm._m(4)]):_c('ul',[_c('li',{staticClass:\"orderflow-step__item\",class:{\n              'orderflow-step__item--active': _vm.orderflow_step == 1,\n              'orderflow-step__item--complete': _vm.orderflow_step > 1\n            }},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Hosting & Domain\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item\",class:{\n              'orderflow-step__item--active': _vm.orderflow_step == 2,\n              'orderflow-step__item--complete': _vm.orderflow_step > 2\n            }},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Tambah Fitur\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item\",class:{\n              'orderflow-step__item--active': _vm.orderflow_step == 3,\n              'orderflow-step__item--complete': _vm.orderflow_step > 3\n            }},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"3. Metode Pembayaran\")])])])]):_c('div',{staticClass:\"mb-4\"},[_vm._v(\"Ringkasan Order\")]),_vm._v(\" \"),_c('div',{class:{'d-block': _vm.show_summary_cart, 'd-none d-lg-block': !_vm.show_summary_cart}},[_c('div',{staticClass:\"summary-cart__item\",attrs:{\"id\":\"summary-cart__item\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.cart.items.length)?_c('div',_vm._l((_vm.cart.items),function(item){return _c('div',{key:item.id},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-8\"},[(_vm.flow === 'website' && item.type == 'hosting')?_c('div',[_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(_vm._s(item.title))])]):( _vm.flow === 'mailhosting' && item.type == 'hosting')?_c('div',[_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"\\n                        Mail \"+_vm._s(item.type)+\" \"+_vm._s(_vm.period[item.period].text)+\"\\n                      \")])]):_c('div',[(item.type == 'hosting')?_c('p',{staticClass:\"summary-cart__item-type text-capitalize\"},[_vm._v(\"\\n                        \"+_vm._s(item.type)+\" \"+_vm._s(_vm.period[item.period].text)+\"\\n                      \")]):(item.type == 'ssl')?_c('p',{staticClass:\"summary-cart__item-type text-uppercase\"},[_vm._v(\"\\n                        \"+_vm._s(item.type)+\"\\n                      \")]):(item.type == 'domainprivacy')?_c('p',{staticClass:\"summary-cart__item-type text-capitalize\"},[_vm._v(\"\\n                        \"+_vm._s(item.type.replace(\"domain\", \"domain \"))+\"\\n                      \")]):( item.type == 'domain' && item.action === 'transfer')?_c('p',[_vm._v(\"\\n                        Transfer Domain\\n                      \")]):(item.type == 'kvm')?_c('p',{staticClass:\"summary-cart__item-type text-uppercase\"},[_vm._v(\"\\n                        vps kvm\\n                      \")]):(item.vps_cpanel)?_c('p',{staticClass:\"summary-cart__item-type\"},[(item.type === 'vpsme')?[_vm._v(\"VPS cPanel \"+_vm._s(_vm.period[item.period].text))]:_vm._e(),_vm._v(\" \"),(item.type === 'custom' && item.title === 'cPanel WHM Admin')?[_vm._v(\"Control Panel \"+_vm._s(_vm.period[item.period].text))]:_vm._e()],2):_c('p',{staticClass:\"summary-cart__item-type text-capitalize\"},[_vm._v(\"\\n                        \"+_vm._s(item.type)+\"\\n                      \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-4\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[(_vm.flow === 'website' && item.type == 'hosting')?_c('div',[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.period[item.period].text))])]):_c('div',[(item.type == 'domain')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(\"\\n                        \"+_vm._s(_vm.toUpperCase(item[item.action + \"_sld\"]))+_vm._s(_vm.toUpperCase(item[item.action + \"_tld\"]))+\"\\n                      \")]):(item.type === 'custom' && item.title === 'cPanel WHM Admin')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(\"Gratis \"+_vm._s(item.title))]):_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.title))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.total)))]),_vm._v(\" \"),(item.vps_cpanel && item.title === 'cPanel WHM Admin')?_c('p',{staticClass:\"summary-cart__item-price\"},[_c('s',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.discount_price)))])]):_vm._e()])]),_vm._v(\" \"),_c('hr')])}),0):_vm._e()]),_vm._v(\" \"),_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Pajak & Biaya Tambahan\")]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.taxName))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")((_vm.cart.total * _vm.taxRate))))])])]),_vm._v(\" \"),_c('hr')],1),_vm._v(\" \"),(_vm.orderflow_step == 3 || _vm.flow === 'cart_page')?_c('div',{staticClass:\"summary-cart__coupon d-none d-lg-block\"},[(!_vm.show_coupon_status && _vm.promocode_copyable && _vm.getPackageText())?_c('div',{staticClass:\"as-info\"},[_c('p',{staticClass:\"as-info__content\"},[_vm._v(\"\\n              Tambahan diskon \"),_c('strong',[_vm._v(_vm._s(_vm.promocode_copyable.discount))]),_vm._v(\" pakai kode promo \"),_c('strong',[_vm._v(_vm._s(_vm.promocode_copyable.promocode))]),_vm._v(\" untuk pembelian layanan \"+_vm._s(_vm.getPackageText())+\"!\\n            \")])]):_vm._e(),_vm._v(\" \"),(!_vm.show_coupon_status && _vm.additionalDiscountPayGateway == 0)?_c('div',{staticClass:\"input-group mb-3\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.coupon_code),expression:\"coupon_code\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"name\":\"coupon_code\",\"placeholder\":\"Kode Kupon (opsional)\",\"aria-label\":\"Kode Kupon (opsional)\",\"aria-describedby\":\"coupon-code\"},domProps:{\"value\":(_vm.coupon_code)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.coupon_code=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"input-group-append\"},[_c('button',{staticClass:\"btn btn-secondary\",class:{ 'summary-cart__coupon--btn-grey': _vm.coupon_code == '' },attrs:{\"id\":\"coupon-code\",\"type\":\"button\",\"disabled\":_vm.coupon_code == ''},on:{\"click\":_vm.usePromoCode}},[_vm._v(\"\\n                Gunakan\\n              \")])])]):_vm._e(),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_coupon_status)?_c('div',{staticClass:\"summary-cart__coupon-status\"},[(_vm.coupon_status.result)?_c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col-10\"},[_c('p',[_vm._v(\"\\n                    Kode Kupon \"),_c('strong',[_vm._v(_vm._s(_vm.coupon_code))]),_vm._v(\" berhasil digunakan\\n                    \"),(_vm.extra_point)?_c('span',[_vm._v(\" dan Anda akan mendapatkan Bonus Extra \"),_c('strong',[_vm._v(_vm._s(_vm.extra_point))]),_vm._v(\" Poin pada order ini\")]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('span',{staticClass:\"fa fa-times summary-cart__coupon-status--remove\",on:{\"click\":function($event){return _vm.removeCoupon()}}})])]):(_vm.coupon_status.error != null)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"summary-cart__coupon-status--error\"},[_vm._v(_vm._s(_vm.coupon_status.message))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('span',{staticClass:\"fa fa-times summary-cart__coupon-status--remove\",on:{\"click\":function($event){return _vm.removeCoupon()}}})])]):_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"summary-cart__coupon-status--error\"},[_vm._v(_vm._s(_vm.coupon_status.message))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('span',{staticClass:\"fa fa-times summary-cart__coupon-status--remove\",on:{\"click\":function($event){return _vm.removeCoupon()}}})])])]):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.additionalDiscountPayGateway > 0)?_c('div',[_c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"summary-cart__coupon-check\"},[_c('div',[_vm._v(\"\\n                                  Pembayaran \"),_c('strong',[_vm._v(_vm._s(_vm.selectedPaymentMethodName))]),_vm._v(\" diterapkan\\n                              \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"row as-mb-10\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"summary-cart__save\"},[_c('div',[_vm._v(\"Tambahan diskon \"+_vm._s(_vm.cart.additional_discount_gateway.discount.type == \"percentage\" ? _vm.cart.additional_discount_gateway.discount.value + \"%\" : (_vm.cart.additional_discount_gateway.discount.value | _vm.formatPrice))+\", Anda akan lebih hemat sebesar \"),_c('span',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(Number(_vm.totalDiscount))))])])])])])]):_vm._e()])],1):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[(_vm.orderflow_step == 3 && _vm.payment_methods)?_c('div',{staticClass:\"col-12 order-lg-2\",class:{\n            'd-block': _vm.show_summary_cart,\n            'd-none d-lg-block': !_vm.show_summary_cart\n          }},[_c('div',{staticClass:\"row justify-content-beetwen align-items-center summary-cart__payment-method\"},[_c('p',{staticClass:\"col mb-0\"},[_vm._v(\"Metode Pembayaran\")]),_vm._v(\" \"),(_vm.use_balance && _vm.gateway_id == 10)?_c('div',{staticClass:\"col-auto\"},[_vm._m(5)]):(_vm.highlight_payment)?_c('div',{staticClass:\"col-auto\"},[_c('span',[_c('strong',[_vm._v(_vm._s(_vm.highlight_payment)+\" \")])])]):_c('div',{staticClass:\"col-auto\"},_vm._l((_vm.payment_methods),function(method){return _c('strong',{key:method.id},[(method.id == _vm.gateway_id)?_c('span',[_vm._v(_vm._s(method.title))]):_vm._e()])}),0)]),_vm._v(\" \"),_c('tos-text',{attrs:{\"device-class\":'summary-cart__tos-desktop'}})],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"summary-cart__total\"},[_c('div',{staticClass:\"row justify-content-between\",class:{ 'align-items-center': !_vm.cart.coupon }},[_c('div',{staticClass:\"col pr-0\"},[_c('p',{staticClass:\"summary-cart__total-title\",class:{'summary-cart__total-title--discount': _vm.cart.coupon}},[_vm._v(\"\\n                  TOTAL \"),(_vm.cart.coupon)?_c('span',[_vm._v(\"(-\"+_vm._s(_vm.discount_percentage)+\"%)\")]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"col-auto\"},[(_vm.cart.coupon)?_c('p',{staticClass:\"summary-cart__total-price summary-cart__total-price--discount\"},[_vm._v(\"\\n                  \"+_vm._s(_vm._f(\"formatPrice\")(_vm.total_before_coupon))+\"\\n                \")]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"summary-cart__total-price\"},[_vm._v(\"\\n                  \"+_vm._s(_vm._f(\"formatPrice\")(_vm.total))+\"\\n                  \"),_c('span',{staticClass:\"float-right badge badge-pill badge-light d-inline d-lg-none\"},[_vm._v(_vm._s(_vm.cart.items.length))])])]),_vm._v(\" \"),_c('a',{staticClass:\"summary-cart__total-details col-1 d-block d-lg-none pl-0\",attrs:{\"href\":\"javascript:void(0);\",\"aria-label\":\"cart\"},on:{\"click\":function($event){_vm.show_summary_cart =  true ? _vm.show_summary_cart == false : 0}}},[(_vm.show_summary_cart)?_c('span',{staticClass:\"fa fa-angle-up\"}):_c('span',{staticClass:\"fa fa-angle-down\"})])])]),_vm._v(\" \"),(_vm.client)?_c('tos-text',{attrs:{\"device-class\":'summary-cart__tos-desktop summary-cart__tos-mobile-logged'}}):_vm._e()],1)])]),_vm._v(\" \"),(_vm.orderflow_step == 3 && _vm.client)?_c('div',{staticClass:\"d-none d-lg-block gtmCTA\",attrs:{\"id\":\"checkout-button-wrapper\"}},[_c('div',{attrs:{\"id\":\"checkout-button\"}},[_c('a',{staticClass:\"button-default button-white-orange button-block nunito-bold PaymentPage_ButtonCheckoutSekarang_Clicked\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":_vm.checkoutNow}},[_vm._v(\"Checkout Sekarang\")])])]):(_vm.flow === 'cart_page')?_c('div',{staticClass:\"d-none d-lg-block gtmCTA\"},[_c('a',{staticClass:\"button-default button-white-orange button-block nunito-bold\",attrs:{\"href\":_vm._f(\"link\")('order/checkout')}},[_vm._v(\"Checkout Sekarang\")])]):_vm._e()])])}\nvar SummaryCartV2vue_type_template_id_199c3dcd_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"orderflow-step__item orderflow-step__item--active orderflow-step__item--website\"},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Metode Pembayaran\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-3\"},[_c('p',{staticClass:\"summary-cart__total-title\"},[_vm._v(\"TOTAL\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('strong',[_vm._v(\"Deposit\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"orderflow-step__item orderflow-step__item--active orderflow-step__item--website\"},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Metode Pembayaran\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"orderflow-step__item orderflow-step__item--active orderflow-step__item--website\"},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Metode Pembayaran\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('strong',[_vm._v(\"Deposit\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/SummaryCartV2.vue?vue&type=template&id=199c3dcd&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/SummaryCartV2.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const SummaryCartV2vue_type_script_lang_js_ = ({\n  name: \"SummaryCartV2\",\n  components: {\n    TosText: TosText\n  },\n  props: [\"cart\", \"orderflow_step\", \"client\", \"gateway_id\", \"payment_methods\", \"hosting\", \"flow\", \"use_balance\", \"client_balance\", \"highlight_payment\", \"promo_available\", \"popup_login\", \"new_sidebar\"],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_coupon_status: false,\n      coupon_status: {\n        result: false,\n        message: \"\",\n        error: false\n      },\n      coupon_code: \"\",\n      show_summary_cart: false,\n      user_input_change: false,\n      extra_point: 0,\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n  computed: {\n    promocode() {\n      return this.cart.promocode;\n    },\n\n    total() {\n      let total = this.cart.total * (1 + this.taxRate);\n\n      if (this.use_balance && this.client_balance >= total) {\n        total = 0;\n      } else if (this.use_balance && this.client_balance < total) {\n        total = total - this.client_balance;\n      }\n\n      total -= this.additionalDiscountPayGateway;\n      return total;\n    },\n\n    total_before_coupon() {\n      return this.cart.total_before_coupon * (1 + this.taxRate);\n    },\n\n    discount_percentage() {\n      return Math.round((this.total_before_coupon - this.total) / this.total_before_coupon * 100);\n    },\n\n    auto_install_website() {\n      return this.cart.items.filter(item => {\n        return item.type == \"hosting\" && item.auto_install_website == \"1\";\n      });\n    },\n\n    promocode_copyable() {\n      if (Array.isArray(this.promo_available)) {\n        return this.promo_available.filter(item => {\n          return item.promocode === \"CLOUDMAX\" && this.flow === 'cloudhosting';\n        })[0];\n      }\n\n      return this.promo_available;\n    },\n\n    totalDiscount() {\n      let discount = 0;\n\n      for (let value of this.cart.items) {\n        if (value.price != undefined && value.total != value.price) {\n          discount = discount + (value.price - value.total);\n        }\n      }\n\n      discount += this.additionalDiscountPayGateway;\n      return discount;\n    },\n\n    selectedPaymentMethodName() {\n      for (let pm of this.payment_methods) {\n        if (pm.id == this.gateway_id) {\n          return pm.title;\n        }\n      }\n\n      return \"Unknown\";\n    },\n\n    selectedPaymentMethodCode() {\n      if (this.payment_methods) {\n        for (let pm of this.payment_methods) {\n          if (pm.id == this.gateway_id) {\n            return pm.code;\n          }\n        }\n      }\n\n      return \"Unknown\";\n    },\n\n    additionalDiscountPayGateway() {\n      let additionalDiscount = 0;\n\n      if (this.cart.additional_discount_gateway && this.gateway_id == this.cart.additional_discount_gateway.gateway_id) {\n        if (this.cart.additional_discount_gateway.discount.type == \"percentage\") {\n          additionalDiscount = this.cart.total * (this.cart.additional_discount_gateway.discount.value / 100);\n        } else {\n          additionalDiscount = this.cart.additional_discount_gateway.discount.value;\n        }\n      }\n\n      if (this.orderflow_step == 3 && this.selectedPaymentMethodCode == 'HpaymentsKoinWorks' && this.cart.items.length > 0 && additionalDiscount == 0) {\n        this.$emit(\"popup-failed\", true);\n      }\n\n      return additionalDiscount;\n    }\n\n  },\n  watch: {\n    promocode: function () {\n      if (!this.coupon_code) {\n        if (this.cart.aff_coupon) {\n          this.coupon_code = this.cart.aff_coupon;\n        } else {\n          this.coupon_code = this.cart.promocode;\n        }\n\n        if (this.coupon_code) {\n          this.coupon_status.result = true;\n          this.coupon_status.message = \"Kode Coupon berhasil diaplikasikan\";\n          this.show_coupon_status = true;\n          this.extra_point = CommonMethods.getCookie(this.coupon_code);\n        }\n      }\n    },\n    cart: function () {\n      let key = Object.keys(this.cart.items);\n      let items = this.cart.items;\n      key = parseInt(key[key.length - 1]);\n      items.forEach(item => {\n        if (item.type == \"hosting\" && item.auto_install_website == \"1\") {\n          items[key + 1] = {\n            id: \"\",\n            type: \"wordpress\",\n            title: \"\",\n            total: 0\n          };\n        }\n      });\n      setTimeout(() => {\n        this.$root.$on(\"remove-wordpress\", () => {\n          this.removeWordPress();\n          bus.$emit(\"refresh-cart\");\n        });\n      }, 100);\n    }\n  },\n  methods: {\n    itemType(item) {\n      let itemType = item.type;\n\n      if (this.flow === 'website' && item.type == 'hosting') {\n        itemType = item.title;\n      } else if (this.flow === 'mailhosting' && item.type == 'hosting') {\n        itemType = 'Mail ' + item.type + ' ' + this.period[item.period].text;\n      } else {\n        if (item.type == 'hosting') {\n          itemType = 'Hosting ' + this.period[item.period].text;\n        } else if (item.type == 'ssl') {\n          itemType = item.type;\n        } else if (item.type == 'domainprivacy') {\n          itemType = item.type.replace(\"domain\", \"domain \");\n        } else if (item.type == 'domain' && item.action === 'transfer') {\n          itemType = 'Transfer Domain';\n        } else if (item.type == 'kvm') {\n          itemType = 'VPS KVM';\n        } else if (item.vps_cpanel) {\n          if (item.type === 'vpsme') {\n            itemType = 'VPS cPanel ' + this.period[item.period].text;\n          }\n\n          if (item.type === 'custom' && item.title === 'cPanel WHM Admin') {\n            itemType = 'Control Panel ' + this.period[item.period].text;\n          }\n        }\n      }\n\n      return itemType;\n    },\n\n    discountPrice(discount, price) {\n      let discountPrice;\n      discountPrice = Math.round((1 - discount / price) * 100);\n      return discountPrice;\n    },\n\n    checkoutNow() {\n      this.$emit(\"checkout-now\", true);\n    },\n\n    checkUrlPath(path) {\n      let urlPath;\n      urlPath = window.location.pathname.split(\"/\");\n      return urlPath.includes(path);\n    },\n\n    usePromoCode() {\n      bus.$emit(\"show-spinner\", true);\n      let email = \"\";\n      let password = \"\";\n\n      if (this.client) {\n        email = this.client.email;\n        password = this.client.password;\n      }\n\n      axios.post(\"/api/guest/use_promo_code\", {\n        promo_code: this.coupon_code,\n        email: email,\n        password: password\n      }).then(res => {\n        let result = res.data.result;\n        let error = res.data.error;\n\n        if (error != null) {\n          this.coupon_status.result = false;\n          this.coupon_status.message = error.message;\n        } else {\n          this.coupon_status.result = result.result;\n          this.coupon_status.message = result.message;\n          this.coupon_status.error = error;\n          this.extra_point = 0;\n\n          if (result.extra_point) {\n            this.extra_point = result.extra_point;\n            CommonMethods.setCookie(this.coupon_code, this.extra_point, 30);\n          }\n        }\n\n        this.show_coupon_status = true;\n\n        if (result != null && result.result) {\n          if (result.is_affiliate) {\n            CommonMethods.setCookie(\"coupon_code\", this.coupon_code, 30);\n            CommonMethods.setCookie(\"coupon_affiliate\", true, 30);\n            CommonMethods.removeCookie(\"inv_id\");\n            CommonMethods.removeCookie('PIXEL_AFF');\n            let url = CommonVar.bb_url + \"/set-promo-code-session?referral_id=\" + result.referral_id + \"&aff_coupon=\" + this.coupon_code;\n            let iframe = document.createElement(\"iframe\");\n            iframe.setAttribute(\"src\", url);\n            iframe.setAttribute(\"id\", \"set-promo-code-session\");\n            iframe.style.display = \"none\";\n            document.body.appendChild(iframe);\n          }\n\n          bus.$emit(\"refresh-cart\");\n        } else {\n          bus.$emit(\"show-spinner\", false);\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n    },\n\n    removeCoupon() {\n      bus.$emit(\"show-spinner\", true);\n\n      if (this.coupon_status.result == false) {\n        this.show_coupon_status = false;\n        this.coupon_code = \"\";\n        bus.$emit(\"show-spinner\", false);\n        return;\n      }\n\n      axios.post(\"/api/guest/remove_coupon\", {\n        remove_coupon: true\n      }).then(res => {\n        CommonMethods.removeCookie(CommonMethods.getCookie(\"coupon_code\"));\n        CommonMethods.removeCookie(\"coupon_code\");\n        this.show_coupon_status = false;\n        this.coupon_status.result = false;\n        this.coupon_code = false;\n        bus.$emit(\"refresh-cart\");\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n    },\n\n    removeFromCart(item, bundling = false) {\n      bus.$emit(\"show-spinner\", true);\n      axios.post(\"/api/guest/remove_from_cart\", {\n        id: item.id\n      }).then(res => {\n        if (this.flow == \"vps\" || this.flow == \"vps_kvm\") {\n          const key = item.type === 'vpsme' || item.type === 'kvm' ? 'tmp_cart' : 'tmp_additional';\n          bus.$emit('remove-from-cart', key);\n          bus.$emit('show-spinner', false);\n        } else {\n          bus.$emit(\"refresh-cart\");\n          /* It will uncheck additional feature checkbox, the listener is on AdditionalFeature.vue */\n\n          bus.$emit(\"remove-item\", item);\n\n          if (item.type == \"wordpress\") {\n            this.$root.$emit(\"remove-wordpress\");\n          }\n\n          if (item.is_added_to_cart) {\n            item.is_added_to_cart = false;\n          }\n\n          let action;\n          let tld;\n\n          if (item.type == \"domain\") {\n            action = item.action;\n            tld = item[action + \"_tld\"];\n          } else {\n            action = item.domain.action;\n            tld = item.domain[action + \"_tld\"];\n          }\n\n          if (CommonVar.allow_mkt_script == true) {\n            Gtm.gtmRemoveFromCart(item.type, item.title, tld);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n      sessionStorage.removeItem(\"tmp_cart\");\n    },\n\n    removeWordPress() {\n      axios.post(\"/api/guest/add_remove_auto_install_website\", {\n        is_add: false\n      }).catch(err => {\n        console.log(err);\n      });\n      axios.post(\"/api/guest/add_remove_install_wp_accelerator\", {\n        is_add: false\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    toUpperCase(str) {\n      return str.toUpperCase();\n    },\n\n    onScrollListener() {\n      let cartWrapper = document.getElementById(\"summary-cart-wrapper\");\n      let cartElement = document.getElementById(\"summary-cart\");\n\n      if (this.cart.items.length && screen.width > 991) {\n        if (Math.floor(window.scrollY) - 50 > cartWrapper.offsetTop) {\n          cartElement.classList.add(\"sticky-cart\");\n          this.adjustResize();\n        } else {\n          cartElement.classList.remove(\"sticky-cart\");\n        }\n      } else {\n        cartElement.classList.remove(\"sticky-cart\");\n      }\n    },\n\n    adjustResize() {\n      let cartWrapper = document.getElementById(\"summary-cart-wrapper\");\n      let cartElement = document.getElementById(\"summary-cart\");\n      let itemElement = document.getElementById(\"summary-cart__item\");\n\n      if (screen.width > 991) {\n        /*For Desktop*/\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n\n        if (screen.height < 810) {\n          itemElement.classList.add(\"summary-cart__item--max-height\");\n        } else {\n          itemElement.classList.remove(\"summary-cart__item--max-height\");\n        }\n      } else {\n        /*For Mobile*/\n        cartElement.classList.remove(\"sticky-cart\");\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n        itemElement.classList.remove(\"summary-cart__item--max-height\");\n      }\n    },\n\n    checkUserInputChange() {\n      this.$root.$on(\"user-input-change\", status => {\n        return this.user_input_change = status;\n      });\n    },\n\n    setCouponStatus() {\n      this.$root.$on(\"set-coupon-status\", status => {\n        this.coupon_status = status;\n      });\n    },\n\n    getPackageText() {\n      if (!this.cart.items.length) {\n        return false;\n      }\n\n      let loop = true;\n      let packageText = false;\n      let promoId = this.promocode_copyable.checkout.id;\n      this.cart.items.forEach(item => {\n        Object.keys(promoId).forEach(key => {\n          if (promoId[key].indexOf(parseInt(item.product_id)) != -1) {\n            packageText = this.promocode_copyable.package_text[key];\n            loop = false;\n          }\n\n          if (!loop) return;\n        });\n        if (!loop) return;\n      });\n      return packageText;\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n        bus.$emit('show-spinner', false);\n      }).catch(err => {\n        console.log(err);\n        bus.$emit('show-spinner', false);\n      });\n    }\n\n  },\n  mounted: function () {\n    setTimeout(() => {\n      bus.$on(\"change-coupon-status\", (msg, err) => {\n        this.coupon_status.result = false;\n        this.coupon_status.message = msg;\n        this.coupon_status.error = err;\n      });\n      bus.$on(\"refresh-coupon-status\", () => {\n        this.coupon_code = false;\n        this.show_coupon_status = false;\n      });\n    }, 100);\n  },\n\n  created() {\n    this.getTaxRate();\n    this.checkUserInputChange();\n\n    if (sessionStorage.getItem(\"flow\")) {\n      this.$emit(\"update-flow\", sessionStorage.getItem(\"flow\"));\n      this.flow = sessionStorage.getItem(\"flow\");\n    }\n\n    this.setCouponStatus();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/SummaryCartV2.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_SummaryCartV2vue_type_script_lang_js_ = (SummaryCartV2vue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/SummaryCartV2.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SummaryCartV2_component = normalizeComponent(\n  components_SummaryCartV2vue_type_script_lang_js_,\n  SummaryCartV2vue_type_template_id_199c3dcd_render,\n  SummaryCartV2vue_type_template_id_199c3dcd_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const SummaryCartV2 = (SummaryCartV2_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ModalCompleteUserProfile.vue?vue&type=template&id=4d1fc970&\nvar ModalCompleteUserProfilevue_type_template_id_4d1fc970_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"profile-modal modal fade\",attrs:{\"id\":\"modalCompleteUserProfile\",\"tabindex\":\"-1\",\"aria-labelledby\":\"modalSignuppLabel\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog profile-modal__dialog\"},[_c('button',{ref:\"modalCompleteUserProfileClose\",staticClass:\"close hide\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]),_vm._v(\" \"),_c('div',{staticClass:\"modal-content profile-modal__content\"},[_c('h5',{staticClass:\"profile-modal__title\",attrs:{\"id\":\"modalSignuppLabel\"}},[_vm._v(\"Lengkapi Data Anda\")]),_vm._v(\" \"),_c('p',{staticClass:\"profile-modal__subtitle\"},[_vm._v(\"Silahkan lengkapi data anda untuk menyelesaikan proses checkout\")]),_vm._v(\" \"),_c('form',{staticClass:\"profile-modal__form\",on:{\"submit\":function($event){$event.preventDefault();return _vm.save.apply(null, arguments)}}},[(_vm.use_hdomains)?_c('div',[_vm._l((_vm.requirements.whois_details),function(item,index){return _c('div',{key:item.id},[(item.slug != 'country_code' && item.slug != 'email')?_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":item.slug}},[_vm._v(_vm._s(item.title))]),_vm._v(\" \"),(item.type == 'select')?_c('select',{staticClass:\"form-control profile-modal__form-control\",attrs:{\"id\":item.slug,\"name\":item.slug},domProps:{\"value\":_vm.getField(item.slug)},on:{\"input\":_vm.updateField}},[_c('div',{attrs:{\"slot\":\"no-options\"},slot:\"no-options\"},[_vm._v(\"Opsi tidak tersedia\")]),_vm._v(\" \"),_vm._l((item.possible_values),function(option,index){return _c('option',{key:option.id,domProps:{\"value\":index,\"selected\":index == _vm.getField(item.slug)}},[_vm._v(_vm._s(option))])})],2):_vm._e(),_vm._v(\" \"),(item.type == 'input')?_c('input',{staticClass:\"form-control profile-modal__form-control\",attrs:{\"type\":item.type,\"name\":item.slug,\"id\":item.slug,\"placeholder\":item.example},domProps:{\"value\":_vm.getField(item.slug)},on:{\"input\":_vm.updateField}}):_vm._e(),_vm._v(\" \"),((!_vm.isValidField(_vm.getField(item.slug), item.regular_expression) && item.type == 'input') || _vm.getError(item.slug))?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"\\n                \"+_vm._s(_vm.validationMessage(_vm.requirements.whois_details[index].constraints))+\"\\n              \")]):_vm._e()]):_vm._e()])}),_vm._v(\" \"),_vm._l((_vm.tld_fields),function(item,index){return _c('div',{key:item.id},[_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":item.field_constraint.slug}},[_vm._v(_vm._s(item.field_constraint.title))]),_vm._v(\" \"),(item.field_constraint.type == 'select')?_c('select',{staticClass:\"form-control profile-modal__form-control\",attrs:{\"id\":item.field_constraint.slug,\"name\":item.field_constraint.slug},domProps:{\"value\":item.field_value},on:{\"input\":function($event){return _vm.updateTldField(index)}}},[_c('div',{attrs:{\"slot\":\"no-options\"},slot:\"no-options\"},[_vm._v(\"Opsi tidak tersedia\")]),_vm._v(\" \"),_vm._l((item.field_constraint.possible_values),function(option,index){return _c('option',{key:option.id,domProps:{\"value\":index,\"selected\":index == (item.field_value || 1)}},[_vm._v(_vm._s(option))])})],2):_vm._e(),_vm._v(\" \"),(item.field_constraint.type == 'input')?_c('input',{staticClass:\"form-control profile-modal__form-control\",attrs:{\"type\":item.field_constraint.type,\"name\":item.field_constraint.slug,\"id\":item.field_constraint.slug,\"placeholder\":item.field_constraint.example},domProps:{\"value\":item.field_value},on:{\"input\":function($event){return _vm.updateTldField(index)}}}):_vm._e(),_vm._v(\" \"),(!_vm.isValidField(item.field_value, item.field_constraint.regular_expression))?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"\\n                \"+_vm._s(_vm.validationMessage(_vm.requirements.tld_details[index].constraints))+\"\\n              \")]):_vm._e()])])}),_vm._v(\" \"),_vm._l((_vm.domain_fields),function(item,index){return _c('div',{key:item.id},[_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":item.field_constraint.slug}},[_vm._v(_vm._s(item.field_constraint.title))]),_vm._v(\" \"),(item.field_constraint.type == 'select')?_c('select',{staticClass:\"form-control profile-modal__form-control\",attrs:{\"id\":item.field_constraint.slug,\"name\":item.field_constraint.slug},domProps:{\"value\":item.field_value},on:{\"input\":function($event){return _vm.updateDomainFields(index)}}},[_c('div',{attrs:{\"slot\":\"no-options\"},slot:\"no-options\"},[_vm._v(\"Opsi tidak tersedia\")]),_vm._v(\" \"),_vm._l((item.field_constraint.possible_values),function(option,index){return _c('option',{key:option.id,domProps:{\"value\":index,\"selected\":index == (item.field_value || 1)}},[_vm._v(_vm._s(option))])})],2):_vm._e(),_vm._v(\" \"),(item.field_constraint.type == 'input')?_c('input',{staticClass:\"form-control profile-modal__form-control\",attrs:{\"type\":item.field_constraint.type,\"name\":item.field_constraint.slug,\"id\":item.field_constraint.slug,\"placeholder\":item.field_constraint.example},domProps:{\"value\":item.field_value},on:{\"input\":function($event){return _vm.updateDomainFields(index)}}}):_vm._e(),_vm._v(\" \"),(!_vm.isValidField(item.field_value, item.field_constraint.regular_expression))?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"\\n                \"+_vm._s(_vm.validationMessage(_vm.requirements.domain_requirements[index].constraints))+\"\\n              \")]):_vm._e()])])})],2):_vm._e(),_vm._v(\" \"),(!_vm.use_hdomains)?_c('div',[_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":\"company\"}},[_vm._v(\"Nama Perusahaan\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.company),expression:\"company\"}],staticClass:\"form-control profile-modal__form-control\",class:{'profile-modal__form-control--error': _vm.err.company},attrs:{\"type\":\"text\",\"name\":\"company\",\"id\":\"company\",\"placeholder\":\"Nama Perusahaan\"},domProps:{\"value\":(_vm.company)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.company=$event.target.value}}}),_vm._v(\" \"),(_vm.err.company)?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"Nama perusahaan tidak boleh kosong\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":\"address_1\"}},[_vm._v(\"Alamat\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.address_1),expression:\"address_1\"}],staticClass:\"form-control profile-modal__form-control\",class:{'profile-modal__form-control--error': _vm.err.address_1},attrs:{\"type\":\"text\",\"name\":\"address_1\",\"id\":\"address_1\",\"placeholder\":\"Masukkan Jalan atau Gang, RT atau RW\",\"maxlength\":\"50\"},domProps:{\"value\":(_vm.address_1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.address_1=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"form-text\",attrs:{\"id\":\"address-1-help\"}},[_c('span',{staticClass:\"mb-4 p-0\",class:{'text-danger' : (_vm.validation.address_1.valid === false), 'text-success': _vm.validation.address_1.valid}},[_vm._v(_vm._s(_vm.validation.address_1.message))]),_vm._v(\" \"),_c('div',{staticClass:\"pull-right text-reset\",attrs:{\"id\":\"address-1-help-counter\"}},[_vm._v(_vm._s(_vm.address_1.length)+\"/50\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":\"city\"}},[_vm._v(\"Kota\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.city),expression:\"city\"}],staticClass:\"form-control profile-modal__form-control\",class:{'profile-modal__form-control--error': _vm.err.city},attrs:{\"type\":\"text\",\"name\":\"city\",\"id\":\"city\",\"placeholder\":\"Masukan Kota Anda\"},domProps:{\"value\":(_vm.city)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.city=$event.target.value}}}),_vm._v(\" \"),(_vm.err.city)?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"Nama kota tidak boleh kosong\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":\"postcode\"}},[_vm._v(\"Kode Pos\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.postcode),expression:\"postcode\"}],staticClass:\"form-control profile-modal__form-control\",class:{'profile-modal__form-control--error': _vm.err.postcode},attrs:{\"type\":\"text\",\"name\":\"postcode\",\"id\":\"postcode\",\"placeholder\":\"Kode Pos\"},domProps:{\"value\":(_vm.postcode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.postcode=$event.target.value}}}),_vm._v(\" \"),(_vm.err.postcode)?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"Kode Pos tidak boleh kosong\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":\"state\"}},[_vm._v(\"Provinsi\")]),_vm._v(\" \"),_c('v-select',{staticClass:\"form-control profile-modal__form-control\",class:{'profile-modal__form-control--error': _vm.err.state},attrs:{\"options\":_vm.list_state,\"clearable\":false,\"placeholder\":\"Pilih Provinsi\",\"id\":\"state\"},model:{value:(_vm.state),callback:function ($$v) {_vm.state=$$v},expression:\"state\"}},[_c('div',{attrs:{\"slot\":\"no-options\"},slot:\"no-options\"},[_vm._v(\"Provinsi tidak tersedia\")])]),_vm._v(\" \"),(_vm.err.state)?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"Provinsi tidak boleh kosong\")]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":\"phone\"}},[_vm._v(\"Telepon / No. HP\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.phone),expression:\"phone\"}],staticClass:\"form-control profile-modal__form-control\",class:{'profile-modal__form-control--error': _vm.err.phone},attrs:{\"type\":\"text\",\"name\":\"phone\",\"id\":\"phone\",\"placeholder\":\"Telepon / No. HP\"},domProps:{\"value\":(_vm.phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.phone=$event.target.value}}}),_vm._v(\" \"),(_vm.err.phone)?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(\"Telepon / No. HP tidak boleh kosong\")]):_vm._e()])]):_vm._e(),_vm._v(\" \"),_c('button',{staticClass:\"profile-modal__button profile-modal__button--save\",class:{'profile-modal__button--disabled' : _vm.loading},attrs:{\"type\":\"submit\",\"disabled\":_vm.loading}},[(_vm.loading)?_c('span',[_vm._v(\"Menyimpan Data Anda\")]):_c('span',[_vm._v(\"Selesai\")])])])])])])}\nvar ModalCompleteUserProfilevue_type_template_id_4d1fc970_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ModalCompleteUserProfile.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const ModalCompleteUserProfilevue_type_script_lang_js_ = ({\n  name: \"ModalCompleteUserProfile\",\n  props: ['list_state'],\n  data: function () {\n    return {\n      loading: false,\n      use_hdomains: false,\n      first_name: '',\n      last_name: '',\n      postcode: '',\n      address_1: '',\n      city: '',\n      company: '',\n      phone: '',\n      phone_cc: '',\n      state: '',\n      empty_fields: [],\n      requirements: [],\n      tld_fields: [],\n      domain_fields: [],\n      err: {\n        first_name: false,\n        last_name: false,\n        phone_cc: false,\n        postcode: false,\n        address_1: false,\n        city: false,\n        company: false,\n        phone: false,\n        state: false\n      },\n      validation: {\n        address_1: {\n          valid: null,\n          message: 'Maksimal 50 karakter',\n          message_default: \"Maksimal 50 karakter\",\n          message_success: \"Alamat sudah valid\",\n          regexps: [{\n            regexp: new RegExp(/^.{2,50}$/u),\n            message_error: \"Alamat harus memiliki maksimal 50 karakter dengan minimal 1 angka dan 1 huruf\"\n          }, {\n            regexp: new RegExp(/^(?=.*?[0-9])(?=.*?[^0-9 ]).{2,50}$/u),\n            message_error: \"Alamat harus memiliki minimal 1 angka dan 1 huruf\"\n          }, {\n            regexp: new RegExp(/^(?=.*?[0-9])(?=.*?[^0-9 ])(?!.*?[<>~°º!@#$%^&*+_=()|\\\\\\/'\"\\]\\[\\{\\}]).{2,50}$/u),\n            message_error: `Alamat tidak dapat memiliki karakter khusus berikut <>~°º!@#$%^&*+_=()|\\/'\"[]{}`\n          }]\n        }\n      },\n      constraintsReq: [{\n        keyword: 'First name',\n        message: 'Karakter pada nama depan tidak valid.'\n      }, {\n        keyword: 'Last name',\n        message: 'Karakter pada nama belakang tidak valid.'\n      }, {\n        keyword: 'e-mail address',\n        message: 'E-mail tidak valid.'\n      }, {\n        keyword: 'Company name',\n        message: 'Karakter pada nama perusahaan tidak valid.'\n      }, {\n        keyword: 'At least one number and one letter and no special characters',\n        message: 'KAlamat harus memiliki maksimal 50 karakter dengan minimal terdapat 1 angka dan 1 huruf, serta tidak memiliki karakter khusus.'\n      }, {\n        keyword: 'City',\n        message: 'Karakter pada nama kota tidak valid.'\n      }, {\n        keyword: 'Country',\n        message: 'Pilih salah satu dari negara yang ada.'\n      }, {\n        keyword: 'Phone number country code',\n        message: 'Kode nomor telepon tidak valid.'\n      }, {\n        keyword: 'numeric phone number',\n        message: 'Nomor telepon tidak valid.'\n      }, {\n        keyword: 'region',\n        message: 'Provinsi tidak valid.'\n      }, {\n        keyword: 'Postal Code',\n        message: 'Koda Pos harus 5 angka.'\n      }, {\n        keyword: 'Valid category',\n        message: 'Pilih salah satu dari kategori yang ada.'\n      }]\n    };\n  },\n  mounted: function () {\n    this.$root.$on('set-user-profile-modal', fields => {\n      this.use_hdomains = fields.use_hdomains;\n      this.empty_fields = fields.empty_fields;\n      this.requirements = fields.requirements;\n      this.first_name = fields.first_name || '';\n      this.last_name = fields.last_name || '';\n      this.postcode = fields.postcode || '';\n      this.phone_cc = fields.phone_cc || '';\n      this.address_1 = fields.address_1 || '';\n      this.city = fields.city || '';\n      this.company = fields.company || '';\n      this.phone = fields.phone || '';\n      this.state = fields.state || '';\n\n      if (this.requirements) {\n        this.requirements.tld_details.forEach(value => {\n          this.tld_fields.push({\n            field_constraint: value,\n            field_value: ''\n          });\n        });\n        this.requirements.domain_requirements.forEach(value => {\n          this.domain_fields.push({\n            field_constraint: value,\n            field_value: ''\n          });\n        });\n      }\n    });\n  },\n  watch: {\n    address_1(value) {\n      this.address_1 = value;\n      this.validate(value, 'address_1');\n    },\n\n    city(value) {\n      this.city = value;\n      this.notEmpty(value, 'city');\n    },\n\n    postcode(value) {\n      this.postcode = value;\n      this.notEmpty(value, 'postcode');\n    },\n\n    phone(value) {\n      this.phone = value;\n      this.notEmpty(value, 'phone');\n    },\n\n    state(value) {\n      this.state = value;\n      this.notEmpty(value, 'state');\n    }\n\n  },\n  methods: {\n    updateField(event) {\n      let attribute = event.target.getAttribute('name');\n      this[this.convertSlug(attribute)] = event.target.value;\n      this.empty_fields[this.convertSlug(attribute)] = null;\n    },\n\n    updateTldField(index) {\n      this.tld_fields[index].field_value = event.target.value;\n    },\n\n    updateDomainFields(index) {\n      this.domain_fields[index].field_value = event.target.value;\n    },\n\n    getField(slug) {\n      switch (slug) {\n        case 'address':\n          return this.address_1;\n\n        case 'phone_number':\n          return this.phone;\n\n        case 'zip_id':\n          return this.postcode;\n\n        case 'state_id':\n          return this.state;\n\n        case 'company_name':\n          return this.company;\n\n        default:\n          return this[slug];\n      }\n    },\n\n    convertSlug(slug) {\n      switch (slug) {\n        case 'address':\n          return 'address_1';\n\n        case 'phone_number':\n          return 'phone';\n\n        case 'zip_id':\n          return 'postcode';\n\n        case 'state_id':\n          return 'state';\n\n        case 'company_name':\n          return 'company';\n\n        default:\n          return slug;\n      }\n    },\n\n    getError(slug) {\n      return this.empty_fields[this.convertSlug(slug)];\n    },\n\n    isValidField(value, regular_expression) {\n      let regEx = regular_expression;\n      regEx = new RegExp(regEx.replaceAll(/^\\/|\\/[a-z]$|\\/$/g, ''));\n\n      if (regEx.test(value)) {\n        return true;\n      }\n\n      return false;\n    },\n\n    notEmpty(value, field) {\n      this.err[field] = false;\n\n      if (value === \"\") {\n        this.err[field] = true;\n      }\n    },\n\n    validate(value, field) {\n      this.validation[field].valid = null;\n      this.validation[field].message = this.validation[field].message_default;\n      this.validation[field].regexps.every(rg => {\n        if (!value.match(rg.regexp)) {\n          this.validation[field].valid = false;\n          this.validation[field].message = rg.message_error;\n          this.err[field] = true;\n          return false;\n        }\n\n        this.validation[field].valid = true;\n        this.validation[field].message = this.validation[field].message_success;\n        this.err[field] = false;\n        return true;\n      });\n    },\n\n    validationMessage(msg) {\n      for (let constraint of this.constraintsReq) {\n        if (msg.toLowerCase().includes(constraint.keyword.toLowerCase())) {\n          return constraint.message;\n        }\n      }\n\n      return msg;\n    },\n\n    save(e) {\n      if (!this.use_hdomains) {\n        if (!this.postcode) {\n          this.err.postcode = true;\n        }\n\n        if (!this.address_1) {\n          this.err.address_1 = true;\n        }\n\n        if (!this.city) {\n          this.err.city = true;\n        }\n\n        if (!this.phone) {\n          this.err.phone = true;\n        }\n\n        if (!this.state) {\n          this.err.state = true;\n        }\n\n        const hasError = Object.keys(this.err).filter(key => this.err[key] === true);\n\n        if (hasError.length > 0) {\n          return false;\n        }\n      } else {\n        let isValidationFail = false;\n        this.requirements.whois_details.forEach(requirement => {\n          if (requirement.slug != 'country_code' && requirement.slug != 'email' && !this.isValidField(this[this.convertSlug(requirement.slug)], requirement.regular_expression)) {\n            isValidationFail = true;\n          }\n        });\n        this.tld_fields.forEach(field => {\n          if (!this.isValidField(field.field_value, field.field_constraint.regular_expression)) {\n            isValidationFail = true;\n          }\n        });\n        this.domain_fields.forEach(field => {\n          if (!this.isValidField(field.field_value, field.field_constraint.regular_expression)) {\n            isValidationFail = true;\n          }\n        });\n\n        if (isValidationFail) {\n          alert('Mohon periksa kembali data diri Anda');\n          return false;\n        }\n      }\n\n      this.loading = true;\n      axios.post(\"/api/guest/complete-user\", {\n        use_hdomains: this.use_hdomains,\n        tld_fields: this.tld_fields,\n        domain_fields: this.domain_fields,\n        first_name: this.first_name,\n        last_name: this.last_name,\n        postcode: this.postcode,\n        phone_cc: this.phone_cc,\n        postcode: this.postcode,\n        address_1: this.address_1,\n        city: this.city,\n        company: this.company,\n        phone: this.phone,\n        state: this.state\n      }).then(res => {\n        const data = JSON.parse(JSON.stringify(res));\n        const result = data.data.result;\n\n        if (result.status === 'failed') {\n          alert(result.message);\n          this.loading = false;\n          return false;\n        }\n\n        this.loading = false;\n        this.$refs.modalCompleteUserProfileClose.click();\n        this.$emit(\"checkout-now\", true, false);\n      });\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/ModalCompleteUserProfile.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_ModalCompleteUserProfilevue_type_script_lang_js_ = (ModalCompleteUserProfilevue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/ModalCompleteUserProfile.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ModalCompleteUserProfile_component = normalizeComponent(\n  components_ModalCompleteUserProfilevue_type_script_lang_js_,\n  ModalCompleteUserProfilevue_type_template_id_4d1fc970_render,\n  ModalCompleteUserProfilevue_type_template_id_4d1fc970_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ModalCompleteUserProfile = (ModalCompleteUserProfile_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ModalSosmed2Fa.vue?vue&type=template&id=8b78cdd6&\nvar ModalSosmed2Favue_type_template_id_8b78cdd6_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"profile-modal modal fade\",attrs:{\"id\":\"ModalSosmed2Fa\",\"tabindex\":\"-1\",\"role\":\"dialog\",\"aria-labelledby\":\"modalSignuppLabel\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog profile-modal__dialog\"},[_c('div',{staticClass:\"modal-content profile-modal__content\"},[_c('h5',{staticClass:\"profile-modal__title\",attrs:{\"id\":\"modalSignuppLabel\"}},[_vm._v(\"2FA Authentication\")]),_vm._v(\" \"),_c('form',{staticClass:\"profile-modal__form\"},[_c('div',{staticClass:\"form-group profile-modal__form-group\"},[_c('label',{staticClass:\"profile-modal__form-label\",attrs:{\"for\":\"code2va\"}},[_vm._v(\"Authentication Code\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.code),expression:\"code\"}],staticClass:\"form-control profile-modal__form-control\",class:{'profile-modal__form-control--error': _vm.err.status},attrs:{\"type\":\"text\",\"placeholder\":\"123456\",\"disabled\":_vm.loading},domProps:{\"value\":(_vm.code)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.code=$event.target.value}}}),_vm._v(\" \"),(_vm.err.status)?_c('p',{staticClass:\"text-danger mb-4 p-0\"},[_vm._v(_vm._s(_vm.err.msg))]):_vm._e()]),_vm._v(\" \"),_c('button',{staticClass:\"profile-modal__button profile-modal__button--save\",attrs:{\"type\":\"button\",\"disabled\":_vm.loading},on:{\"click\":function($event){return _vm.verify()}}},[(_vm.loading)?_c('span',{staticClass:\"profile-modal__button--loading\"},[_vm._v(\"\\n            Loading...\\n          \")]):_c('span',[_vm._v(\"\\n            Verify\\n          \")])])])])])])}\nvar ModalSosmed2Favue_type_template_id_8b78cdd6_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ModalSosmed2Fa.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const ModalSosmed2Favue_type_script_lang_js_ = ({\n  name: \"ModalSosmed2Fa\",\n  props: ['hash', 'sosmedloginurl'],\n  data: function () {\n    return {\n      loading: false,\n      code: '',\n      err: {\n        status: false,\n        msg: ''\n      }\n    };\n  },\n  methods: {\n    verify() {\n      if (!this.code) {\n        this.err.status = true;\n        this.err.msg = 'Authentication Code tidak boleh kosong';\n      } else {\n        this.err.status = false;\n        this.err.msg = '';\n        this.loading = true;\n        let requestData = {\n          'hash': this.hash,\n          'step': 2,\n          '2fa_code': this.code\n        };\n        axios.post('/api/guest/verify_two_fa_authentication', requestData).then(res => {\n          try {\n            var resp = JSON.parse(res.data);\n          } catch {\n            var resp = res.data;\n          }\n\n          if (!resp.result && resp.error) {\n            this.err.status = true;\n            this.err.msg = resp.error.message;\n          } else {\n            this.err.status = false;\n            this.err.msg = '';\n            window.location.href = this.sosmedloginurl;\n          }\n        }).catch(err => {\n          if (err.data) {\n            var data = JSON.parse(err.data);\n\n            if (data.error) {\n              this.err.status = true;\n              this.err.msg = data.error.message;\n            } else {\n              this.err.status = true;\n              this.err.msg = 'Invalid/Expired login token. Please log in again.';\n            }\n          } else {\n            this.err.status = true;\n            this.err.msg = 'Invalid/Expired login token. Please log in again.';\n          }\n        });\n        this.loading = false;\n      }\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/ModalSosmed2Fa.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_ModalSosmed2Favue_type_script_lang_js_ = (ModalSosmed2Favue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/ModalSosmed2Fa.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ModalSosmed2Fa_component = normalizeComponent(\n  components_ModalSosmed2Favue_type_script_lang_js_,\n  ModalSosmed2Favue_type_template_id_8b78cdd6_render,\n  ModalSosmed2Favue_type_template_id_8b78cdd6_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ModalSosmed2Fa = (ModalSosmed2Fa_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/VpsPlan.vue?vue&type=template&id=b0d6dcec&\nvar VpsPlanvue_type_template_id_b0d6dcec_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vps-package\"},[(_vm.plan_type === 'cyberpanel')?_c('p',{staticClass:\"vps-package__title\"},[_vm._v(\"Paket CyberPanel VPS\")]):(_vm.plan_type === 'cpanel')?_c('p',{staticClass:\"vps-package__title\"},[_vm._v(\"Paket VPS cPanel\")]):_c('p',{staticClass:\"vps-package__title\"},[_vm._v(\"Paket VPS\")]),_vm._v(\" \"),_c('div',{staticClass:\"vps-select\",class:{'select--disabled': _vm.tmp_cart.items.length}},[_c('div',{ref:\"select-plan\",staticClass:\"vps-select__item\",class:{'vps-select--show-option':_vm.show_vps_plan_select_option},on:{\"click\":function($event){return _vm.VpsPlanToogle()}}},[_c('p',[(_vm.plan_type === 'cpanel')?_c('strong',[_vm._v(\"Paket \"+_vm._s(_vm.vps.selected.plan.title))]):_c('strong',[_vm._v(\"Paket \"+_vm._s(_vm.vps.selected.plan.title)+\" - \"+_vm._s(_vm.vps.selected.plan.description))])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_vps_plan_select_option)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-plan'], handler: 'onClose'}),expression:\"{exclude: ['select-plan'], handler: 'onClose'}\"}],staticClass:\"vps-select__option\"},_vm._l((_vm.vps.plans),function(plan){return _c('li',{key:plan.id,on:{\"click\":function($event){return _vm.choosevpsPlan(plan)}}},[(_vm.plan_type === 'cpanel')?_c('strong',[_vm._v(\"Paket \"+_vm._s(plan.title)+\" - Diskon \"+_vm._s(plan.discounts)+\"%\")]):_c('strong',[_vm._v(\"Paket \"+_vm._s(plan.title)+\" - \"+_vm._s(plan.description))])])}),0):_vm._e()])],1),_vm._v(\" \"),_c('h3',{staticClass:\"vps-package__title mt-2\"},[_vm._v(\"Pilih Durasi Paket\")]),_vm._v(\" \"),_c('div',{staticClass:\"row no-gutters align-items-end ml-0 mr-0\",class:{'select--disabled': _vm.tmp_cart.items.length}},[_vm._l((_vm.vps.plan_period),function(periodPrice,x){return [(_vm.period[x])?_c('div',{key:x,staticClass:\"col-lg-3 vps-duration gtmvpsPlan mb-4\",attrs:{\"data-product\":_vm.vps.selected.plan.title,\"data-period\":x},on:{\"click\":function($event){return _vm.choosevpsPeriod(x)}}},[_c('div',{staticClass:\"vps-duration__list\",class:{'vps-duration--selected':_vm.vps.selected.period == x}},[(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__discount\",class:{'vps-duration__discount--normal': _vm.discountPercent}},[_vm._v(\"\\n                        Diskon \"+_vm._s(_vm.discountPrice(periodPrice.discount_price, periodPrice.price))+\"%\\n                    \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"vps-duration__period\"},[_c('p',{staticClass:\"vps-duration__period-year vps-duration--half\"},[_vm._v(_vm._s(_vm.period[x].text))]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__period-price vps-duration__period-price--light d-none d-lg-block\"},[_c('s',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(periodPrice.price)))])]):_vm._e(),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__period-price vps-duration__period-price--bold vps-duration--half\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price / _vm.period[x].num_of_month))+\"/bln\\n                        \")]):_c('p',{staticClass:\"vps-duration__period-price vps-duration__period-price--bold vps-duration--half\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price / _vm.period[x].num_of_month))+\"/bln\\n                        \")]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price))+\"\\n                        \")]):_c('p',{staticClass:\"vps-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price))+\"\\n                        \")])])])]):_vm._e()]})],2)])}\nvar VpsPlanvue_type_template_id_b0d6dcec_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/VpsPlan.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const VpsPlanvue_type_script_lang_js_ = ({\n  name: \"VpsPlan\",\n  props: ['vps', 'tmp_cart', 'plan_type'],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_vps_plan_select_option: false\n    };\n  },\n  methods: {\n    setVpsPlanByParams() {\n      let path = window.location.pathname;\n      path = path.split(\"/\");\n\n      if (path.length == 3) {\n        let productId = path[2];\n        this.vps.plans.forEach(plan => {\n          if (plan.id == productId) {\n            this.choosevpsPlan(plan);\n            this.show_vps_plan_select_option = false;\n            setTimeout(() => {\n              bus.$emit('virtual-page-view', 'package-selection');\n            }, 500);\n            return;\n          }\n        });\n        const urlParams = new URLSearchParams(window.location.search);\n        let period = urlParams.get('period') ? urlParams.get('period') : \"1Y\";\n        this.choosevpsPeriod(period);\n      }\n    },\n\n    VpsPlanToogle() {\n      this.show_vps_plan_select_option = !this.show_vps_plan_select_option;\n    },\n\n    choosevpsPlan(plan) {\n      this.vps.plan_period = plan.pricing.recurrent;\n      this.vps.selected.product_id = plan.id;\n      this.vps.selected.plan = plan;\n      this.vps.selected.period = '1Y';\n      this.VpsPlanToogle();\n      this.$emit('update-vps-plan', this.vps);\n      this.sendTracking();\n    },\n\n    choosevpsPeriod(period) {\n      this.vps.selected.period = period;\n      this.$emit('update-vps-plan', this.vps);\n      this.sendTracking();\n    },\n\n    sendTracking() {\n      const cyberpanelIds = ['95', '96', '97', '98', '99', '100', '103', '104'];\n      const cpanelIds = ['117', '118', '119', '120', '121', '122', '123'];\n\n      if (cyberpanelIds.includes(this.vps.selected.plan.id)) {\n        let title = this.vps.selected.plan.title.replace('CyberPanel', '').replace('VPS', '');\n        title = this.capitalize(title);\n        Gtm.trackingClickCTA('Click CTA', 'OrderVPSCyberpanel_Choose_' + title + '_Period_' + this.vps.selected.period);\n      } else if (cpanelIds.includes(this.vps.selected.plan.id)) {\n        let title = this.vps.selected.plan.title.replace('cPanel', '');\n        title = this.capitalize(title);\n        Gtm.trackingClickCTA('Click CTA', 'OrderVPScpanel_Choose_' + title + '_Period_' + this.vps.selected.period);\n      } else {\n        let title = this.capitalize(this.vps.selected.plan.title);\n        Gtm.trackingClickCTA('Click CTA', 'OrderVPSOVZ_Choose_' + title + '_Period_' + this.vps.selected.period);\n      }\n    },\n\n    capitalize(str) {\n      str = str.trim().replace(' ', '').toLowerCase();\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    onClose() {\n      this.show_vps_plan_select_option = false;\n    },\n\n    discountPrice(discount, price) {\n      let discountPrice;\n      discountPrice = Math.round((1 - discount / price) * 100);\n      return discountPrice;\n    },\n\n    prepareVpsCpanel() {\n      if (this.plan_type !== 'cpanel') {\n        return;\n      }\n\n      let selfInstance = this;\n      let vpsPlans = this.vps.plans;\n      Object.keys(vpsPlans).forEach(function (keys) {\n        let discounts = 0;\n        let pricing = vpsPlans[keys].pricing.recurrent;\n        Object.keys(pricing).forEach(function (key) {\n          if (pricing[key].discount_enabled == 1) {\n            let discount = selfInstance.discountPrice(pricing[key].discount_price, pricing[key].price);\n\n            if (discount > discounts) {\n              discounts = discount;\n            }\n          }\n        });\n        selfInstance.vps.plans[keys].discounts = discounts;\n      });\n    }\n\n  },\n  computed: {},\n  mounted: function () {\n    this.prepareVpsCpanel();\n    this.setVpsPlanByParams();\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/VpsPlan.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowVps_VpsPlanvue_type_script_lang_js_ = (VpsPlanvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/VpsPlan.vue\n\n\n\n\n\n/* normalize component */\n;\nvar VpsPlan_component = normalizeComponent(\n  OrderFlowVps_VpsPlanvue_type_script_lang_js_,\n  VpsPlanvue_type_template_id_b0d6dcec_render,\n  VpsPlanvue_type_template_id_b0d6dcec_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const VpsPlan = (VpsPlan_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/VpsKvmPlan.vue?vue&type=template&id=99bd45f0&\nvar VpsKvmPlanvue_type_template_id_99bd45f0_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vps-package\"},[_c('p',{staticClass:\"vps-package__title\"},[_vm._v(\"Paket VPS KVM\")]),_vm._v(\" \"),_c('div',{staticClass:\"vps-select\",class:{'select--disabled': _vm.tmp_cart.items.length}},[_c('div',{ref:\"select-plan\",staticClass:\"vps-select__item\",class:{'vps-select--show-option':_vm.show_vps_plan_select_option},on:{\"click\":function($event){return _vm.VpsPlanToogle()}}},[_c('p',[_c('strong',[_vm._v(\"Paket \"+_vm._s(_vm.vps_kvm.selected.plan.title)+\" -\")]),_vm._v(\" \"+_vm._s(_vm.description(_vm.vps_kvm.selected.plan.id)))])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.show_vps_plan_select_option)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-plan'], handler: 'onClose'}),expression:\"{exclude: ['select-plan'], handler: 'onClose'}\"}],staticClass:\"vps-select__option\"},_vm._l((_vm.vps_kvm.plans),function(plan){return _c('li',{key:plan.id,on:{\"click\":function($event){return _vm.choosevpsPlan(plan)}}},[_c('strong',[_vm._v(\"Paket \"+_vm._s(plan.title)+\" -\")]),_vm._v(\" \"+_vm._s(_vm.description(plan.id))+\"\\n                \")])}),0):_vm._e()])],1),_vm._v(\" \"),_c('h3',{staticClass:\"vps-package__title mt-2 text-capitalize\"},[_vm._v(\"pilih durasi paket\")]),_vm._v(\" \"),_c('div',{staticClass:\"row no-gutters align-items-end ml-0 mr-0\",class:{'select--disabled': _vm.tmp_cart.items.length}},[_vm._l((_vm.vps_kvm.plan_period),function(periodPrice,x){return [(_vm.period[x])?_c('div',{key:x,staticClass:\"col-lg-3 vps-duration gtmvpsPlan mb-4\",attrs:{\"data-product\":_vm.vps_kvm.selected.plan.title,\"data-period\":x},on:{\"click\":function($event){return _vm.choosevpsPeriod(x)}}},[_c('div',{staticClass:\"vps-duration__list\",class:{'vps-duration--selected':_vm.vps_kvm.selected.period == x}},[(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__discount\",class:{'vps-duration__discount--normal': _vm.discountPercent}},[_vm._v(\"\\n                        Diskon \"+_vm._s(_vm.discountPrice(periodPrice.discount_price, periodPrice.price))+\"%\\n                    \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"vps-duration__period\"},[_c('p',{staticClass:\"vps-duration__period-year vps-duration--half\"},[_vm._v(_vm._s(_vm.period[x].text))]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__period-price vps-duration__period-price--light d-none d-lg-block\"},[_c('s',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(periodPrice.price)))])]):_vm._e(),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__period-price vps-duration__period-price--bold vps-duration--half\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price / _vm.period[x].num_of_month))+\"/bln\\n                        \")]):_c('p',{staticClass:\"vps-duration__period-price vps-duration__period-price--bold vps-duration--half\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price / _vm.period[x].num_of_month))+\"/bln\\n                        \")]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"vps-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price))+\"\\n                        \")]):_c('p',{staticClass:\"vps-duration__period-price d-none d-lg-block\"},[_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price))+\"\\n                        \")])])])]):_vm._e()]})],2)])}\nvar VpsKvmPlanvue_type_template_id_99bd45f0_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/VpsKvmPlan.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const VpsKvmPlanvue_type_script_lang_js_ = ({\n  name: \"VpsPlan\",\n  props: ['vps_kvm', 'tmp_cart'],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_vps_plan_select_option: false\n    };\n  },\n  methods: {\n    setVpsPlanByParams() {\n      let path = window.location.pathname;\n      path = path.split(\"/\");\n\n      if (path.length == 3) {\n        let productId = path[2];\n        this.vps_kvm.plans.forEach(plan => {\n          if (plan.id == productId) {\n            this.choosevpsPlan(plan);\n            this.show_vps_plan_select_option = false;\n            setTimeout(() => {\n              bus.$emit('virtual-page-view', 'package-selection');\n            }, 500);\n            return;\n          }\n        });\n        const urlParams = new URLSearchParams(window.location.search);\n        let period = urlParams.get('period') ? urlParams.get('period') : \"1Y\";\n        this.choosevpsPeriod(period);\n      }\n    },\n\n    VpsPlanToogle() {\n      this.show_vps_plan_select_option = !this.show_vps_plan_select_option;\n    },\n\n    choosevpsPlan(plan) {\n      this.vps_kvm.plan_period = plan.pricing.recurrent;\n      this.vps_kvm.selected.product_id = plan.id;\n      this.vps_kvm.selected.plan = plan;\n      this.vps_kvm.selected.period = '1Y';\n      this.VpsPlanToogle();\n      this.$emit('update-vps-plan', this.vps_kvm);\n      this.sendTracking();\n    },\n\n    choosevpsPeriod(period) {\n      this.vps_kvm.selected.period = period;\n      this.$emit('update-vps-plan', this.vps_kvm);\n      this.sendTracking();\n    },\n\n    sendTracking() {\n      const windowsIds = ['124', '125', '126', '127', '128', '129'];\n      let tracking = 'OrderVPSKVM_ChooseLinux_';\n\n      if (windowsIds.includes(this.vps_kvm.selected.plan.id)) {\n        tracking = 'OrderVPSKVM_ChooseWindows_';\n      }\n\n      let title = this.vps_kvm.selected.plan.title.replace('VPS', '').replace('Windows', '').replace('Premium', '').replace('Power', '').trim().replace(' ', '').toLowerCase();\n      title = title.charAt(0).toUpperCase() + title.slice(1);\n      Gtm.trackingClickCTA('Click CTA', tracking + title + '_Period_' + this.vps_kvm.selected.period);\n    },\n\n    onClose() {\n      this.show_vps_plan_select_option = false;\n    },\n\n    discountPrice(discount, price) {\n      return Math.round((1 - discount / price) * 100);\n    },\n\n    description(productId) {\n      let desc;\n      this.vps_kvm.plans.forEach(plan => {\n        if (plan.id == productId) {\n          let core = 'CPU ' + plan.config.plan.core + ' Core';\n          let memory = 'RAM ' + plan.config.plan.memory + ' GB';\n          let ssd = 'SSD ' + plan.config.plan.disk_space + 'GB';\n          desc = core + ', ' + memory + ', ' + ssd;\n        }\n      });\n      return desc;\n    }\n\n  },\n  computed: {},\n  mounted: function () {\n    this.setVpsPlanByParams();\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/VpsKvmPlan.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowVps_VpsKvmPlanvue_type_script_lang_js_ = (VpsKvmPlanvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/VpsKvmPlan.vue\n\n\n\n\n\n/* normalize component */\n;\nvar VpsKvmPlan_component = normalizeComponent(\n  OrderFlowVps_VpsKvmPlanvue_type_script_lang_js_,\n  VpsKvmPlanvue_type_template_id_99bd45f0_render,\n  VpsKvmPlanvue_type_template_id_99bd45f0_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const VpsKvmPlan = (VpsKvmPlan_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/SelectImages.vue?vue&type=template&id=8bbc2894&\nvar SelectImagesvue_type_template_id_8bbc2894_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.images)?_c('div',{staticClass:\"kvm-images\",class:{'select--disabled': _vm.tmp_cart.items.length}},[_c('h3',{staticClass:\"kvm-images__title text-capitalize\"},[_vm._v(\"pilih sistem operasi anda: \")]),_vm._v(\" \"),_c('div',{staticClass:\"select-images\"},[_c('div',{ref:\"select-image\",staticClass:\"select-images__item\",class:{'select-images--show-option':_vm.show_options},on:{\"click\":function($event){_vm.show_options = !_vm.show_options}}},[_c('div',[_c('strong',[_vm._v(_vm._s(_vm.image.name))])]),_vm._v(\" \"),((_vm.os_type == 'windows'))?_c('span',{staticClass:\"select-images__badge--new pull-right\"},[_vm._v(\"New\")]):_vm._e()]),_vm._v(\" \"),_c('transition',[(_vm.show_options)?_c('div',{staticClass:\"select-images__wrapper\",class:{'select-images__wrapper--long': (_vm.os_type != 'windows')}},[_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-image'], handler: 'onClose'}),expression:\"{exclude: ['select-image'], handler: 'onClose'}\"}],staticClass:\"select-images__option\"},_vm._l((_vm.kvm_images),function(image,index){return _c('li',{key:index,on:{\"click\":function($event){return _vm.chooseImage(index, image)}}},[_c('strong',[_vm._v(_vm._s(image))]),((_vm.os_type == 'windows'))?_c('span',{staticClass:\"select-images__badge--new\"},[_vm._v(\"New\")]):_vm._e()])}),0)]):_vm._e()])],1),_vm._v(\" \"),_c('div',{staticClass:\"kvm-images__button mt-4\"},[_c('a',{staticClass:\"button-default button-white-orange\",attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.setImage()}}},[_vm._v(\"Tambahkan ke Cart\")])])]):_vm._e()}\nvar SelectImagesvue_type_template_id_8bbc2894_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/SelectImages.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const SelectImagesvue_type_script_lang_js_ = ({\n  name: 'selectImages',\n  props: ['kvm_images', 'tmp_cart'],\n  data: function () {\n    return {\n      show_options: false,\n      os_type: 'linux',\n      image: {\n        id: '',\n        name: ''\n      }\n    };\n  },\n  computed: {\n    images() {\n      return Object.keys(this.kvm_images).length > 0;\n    }\n\n  },\n  methods: {\n    listImages() {\n      if (this.images) {\n        const imageKeys = Object.keys(this.kvm_images);\n\n        if (this.kvm_images[imageKeys[0]].toLowerCase().includes('windows')) {\n          this.os_type = 'windows';\n        }\n\n        return imageKeys.forEach(key => {\n          if (this.kvm_images[key].toLowerCase().includes('alibaba')) {\n            delete this.kvm_images[key];\n          }\n        });\n      }\n    },\n\n    chooseImage(id, name) {\n      this.image.id = id;\n      this.image.name = name;\n      this.show_options = false;\n      sessionStorage.setItem('selected_kvm_image_id', id);\n    },\n\n    setImage() {\n      bus.$emit('set-kvm-image', this.image.id);\n      bus.$emit('virtual-page-view', 'image-selection');\n      Gtm.trackingClickCTA('Click CTA', 'add_to_cart_clicked');\n    },\n\n    onClose() {\n      this.show_options = false;\n    },\n\n    init() {\n      for (const [key, value] of Object.entries(this.kvm_images)) {\n        this.chooseImage(key, value);\n        return;\n      }\n    }\n\n  },\n\n  mounted() {\n    this.init();\n    this.listImages();\n    setTimeout(() => {\n      bus.$on('refresh-selected-image', (id, name) => {\n        this.chooseImage(id, name);\n      });\n    }, 100);\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/SelectImages.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowVps_SelectImagesvue_type_script_lang_js_ = (SelectImagesvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/SelectImages.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SelectImages_component = normalizeComponent(\n  OrderFlowVps_SelectImagesvue_type_script_lang_js_,\n  SelectImagesvue_type_template_id_8bbc2894_render,\n  SelectImagesvue_type_template_id_8bbc2894_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const SelectImages = (SelectImages_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/ModalSelectOs.vue?vue&type=template&id=c525876c&\nvar ModalSelectOsvue_type_template_id_c525876c_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"select-os fade modal\",attrs:{\"id\":\"selectOs\",\"tabindex\":\"-1\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog select-os__dialog\"},[_c('div',{staticClass:\"modal-content select-os__content\"},[_c('h5',{staticClass:\"select-os__title text-left\"},[_vm._v(\"Pilih Sistem Operasi Anda: \")]),_vm._v(\" \"),_c('p'),_vm._v(\" \"),_c('div',{staticClass:\"select-os__form\"},[_c('div',{staticClass:\"form-group select-os__form-group\"},[_c('div',{ref:\"select-plan\",staticClass:\"select-os__select\",class:{'select-os__select--show': _vm.show_options},on:{\"click\":function($event){_vm.show_options = !_vm.show_options}}},[_c('p',{staticClass:\"select-os__select-title\"},[_c('strong',[_vm._v(_vm._s(_vm.template.name))])])]),_vm._v(\" \"),(_vm.show_options)?_c('div',{staticClass:\"select-os__wrapper\"},[_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-plan'], handler: 'onClose'}),expression:\"{exclude: ['select-plan'], handler: 'onClose'}\"}],staticClass:\"select-os__os-options\"},_vm._l((_vm.os_templates),function(template,index){return _c('li',{key:index,staticClass:\"text-capitalize\",on:{\"click\":function($event){return _vm.chooseTemplate(index, template)}}},[_c('strong',[_vm._v(_vm._s(template))])])}),0)]):_vm._e(),_vm._v(\" \"),(_vm.show_error)?_c('p',{staticClass:\"text-danger\"},[_vm._v(\"Silahkan pilih sistem operasi Anda\")]):_vm._e(),_vm._v(\" \"),_c('button',{staticClass:\"select-os__button select-os__button--save\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.setOs()}}},[_vm._v(\"\\n              Install\\n            \")])])])])])])}\nvar ModalSelectOsvue_type_template_id_c525876c_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/ModalSelectOs.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const ModalSelectOsvue_type_script_lang_js_ = ({\n  name: 'modalSelectOs',\n  props: ['os_templates'],\n  data: function () {\n    return {\n      show_options: false,\n      show_error: false,\n      template: {\n        id: 0,\n        name: ''\n      }\n    };\n  },\n  methods: {\n    chooseTemplate(id, name) {\n      this.template.id = id;\n      this.template.name = name;\n      this.show_options = false;\n    },\n\n    setOs() {\n      if (!this.template.id && !this.template.name) {\n        this.show_error = true;\n        return;\n      }\n\n      bus.$emit('set-os-template', this.template.id);\n      bus.$emit('next-orderflow-step');\n    },\n\n    init() {\n      for (const [key, value] of Object.entries(this.os_templates)) {\n        if (Number(key) === 195) {\n          this.chooseTemplate(Number(key), value);\n          return;\n        }\n      }\n    }\n\n  },\n\n  created() {\n    this.init();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/ModalSelectOs.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowVps_ModalSelectOsvue_type_script_lang_js_ = (ModalSelectOsvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/ModalSelectOs.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ModalSelectOs_component = normalizeComponent(\n  OrderFlowVps_ModalSelectOsvue_type_script_lang_js_,\n  ModalSelectOsvue_type_template_id_c525876c_render,\n  ModalSelectOsvue_type_template_id_c525876c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ModalSelectOs = (ModalSelectOs_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/ModalUpgradeVpsNano.vue?vue&type=template&id=1f7f6635&\nvar ModalUpgradeVpsNanovue_type_template_id_1f7f6635_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"popup-upgrade fade modal\",attrs:{\"id\":\"upgradeConfirm\",\"tabindex\":\"-1\",\"aria-hidden\":\"true\"}},[_c('div',{staticClass:\"modal-dialog popup-upgrade__dialog\"},[_c('div',{staticClass:\"modal-content popup-upgrade__content\"},[_c('h5',{staticClass:\"popup-upgrade__title text-center\"},[_vm._v(\"Konfirmasi Perubahan Paket\")]),_vm._v(\" \"),_c('p'),_vm._v(\" \"),_c('div',{staticClass:\"popup-upgrade__form\"},[_c('div',{staticClass:\"form-group popup-upgrade__form-group\"},[_vm._m(0),_vm._v(\" \"),_c('div',[_c('button',{staticClass:\"popup-upgrade__button popup-upgrade__button--cancel\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"},on:{\"click\":function($event){return _vm.cancel()}}},[_vm._v(\"\\n                Tidak, Terima Kasih\\n              \")]),_vm._v(\" \"),_c('button',{staticClass:\"popup-upgrade__button popup-upgrade__button--save\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"},on:{\"click\":function($event){return _vm.upgrade()}}},[_vm._v(\"\\n                Ganti Paket\\n              \")])])])])])])])}\nvar ModalUpgradeVpsNanovue_type_template_id_1f7f6635_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"text-center\"},[_vm._v(\"Dibutuhkan minimum Paket Cloud VPS Mikro untuk dapat menambahkan Addons cPanel WHM di dasbor Anda.\"),_c('br'),_vm._v(\"Apakah Anda ingin mengganti paket layanan sebelumnya menjadi Paket Cloud VPS Mikro?\")])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/ModalUpgradeVpsNano.vue?vue&type=template&id=1f7f6635&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/ModalUpgradeVpsNano.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const ModalUpgradeVpsNanovue_type_script_lang_js_ = ({\n  name: 'modalUpgradeVpsNano',\n  props: ['vps', 'tmp_cart'],\n  data: function () {\n    return {};\n  },\n  methods: {\n    upgrade() {\n      bus.$emit('upgrade-nano', 'upgrade');\n    },\n\n    cancel() {\n      bus.$emit('reset-selected-addon');\n    }\n\n  },\n\n  created() {}\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/ModalUpgradeVpsNano.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowVps_ModalUpgradeVpsNanovue_type_script_lang_js_ = (ModalUpgradeVpsNanovue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/ModalUpgradeVpsNano.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ModalUpgradeVpsNano_component = normalizeComponent(\n  OrderFlowVps_ModalUpgradeVpsNanovue_type_script_lang_js_,\n  ModalUpgradeVpsNanovue_type_template_id_1f7f6635_render,\n  ModalUpgradeVpsNanovue_type_template_id_1f7f6635_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ModalUpgradeVpsNano = (ModalUpgradeVpsNano_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ItemCart.vue?vue&type=template&id=07332914&\nvar ItemCartvue_type_template_id_07332914_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"item-cart\"},_vm._l((_vm.cart.items),function(item){return _c('div',{key:item.id,staticClass:\"row no-gutters item-cart__list\"},[_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"item-cart__list-title\"},[_vm._v(\"\\n        \"+_vm._s(_vm.itemTitle(item))+\"\\n      \")]),_vm._v(\" \"),(_vm.inArray(item.type, ['hosting', 'vpsme', 'cloudhosting']))?_c('p',[(item.discount)?_c('span',[_c('strike',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.price)))]),_vm._v(\" \"+_vm._s(_vm._f(\"formatPrice\")(item.total))+\" (\"+_vm._s(_vm._f(\"formatPrice\")(item.total / _vm.period[item.period].num_of_month))+\"/bulan)\\n        \")],1):_c('span',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.total))+\" (\"+_vm._s(_vm._f(\"formatPrice\")(item.total / _vm.period[item.period].num_of_month))+\"/bulan)\")])]):(item.type === 'domain')?_c('p',[(item.discount)?_c('span',[_c('strike',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.price)))]),_vm._v(\" \"+_vm._s(_vm._f(\"formatPrice\")(item.total))+\"\\n        \")],1):_c('span',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.total)))])]):_c('p',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(item.total))+\"\\n        \"),(item.period)?_c('span',[_vm._v(\"/\\n          \"),(item.period === '1Y')?_c('span',[_vm._v(\"tahun\")]):_c('span',[_vm._v(_vm._s(_vm.period[item.period].text))])]):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item)}}})])])])}),0)}\nvar ItemCartvue_type_template_id_07332914_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/ItemCart.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const ItemCartvue_type_script_lang_js_ = ({\n  name: \"ItemCart\",\n  props: [\"cart\"],\n  data: function () {\n    return {\n      period: CommonVar.period\n    };\n  },\n  watch: {\n    cart: function () {\n      if (!this.cart.items.length) {\n        window.location.href = \"cart-kosong\";\n      }\n    }\n  },\n  methods: {\n    itemTitle(item) {\n      let title = item.title;\n      let periodText = false;\n\n      if (item.period) {\n        periodText = this.period[item.period].text;\n        title = `${title} - ${periodText}`;\n      }\n\n      switch (item.type) {\n        case 'hosting':\n        case 'cloudhosting':\n          title = `${item.title.replace(/[\\(\\)']+/g, '')} - ${periodText}`;\n          break;\n\n        case 'vpsme':\n          title = `VPS ${item.title} - ${periodText}`;\n          break;\n\n        case 'wordpress':\n          title = 'Auto Install WordPress - 1 Tahun';\n          break;\n\n        case 'ssl':\n          title = `COMODO Positive SSL - ${periodText}`;\n          break;\n\n        case 'domainprivacy':\n          title = `WHOIS - ${periodText}`;\n          break;\n\n        case 'domain':\n          if (item.action === 'transfer') {\n            title = `Transfer Domain ${this.toUpperCase(item[item.action + \"_sld\"])}${this.toUpperCase(item[item.action + \"_tld\"])} - ${periodText}`;\n          }\n\n          break;\n\n        default:\n          title = title;\n          break;\n      }\n\n      return title;\n    },\n\n    removeFromCart(item) {\n      bus.$emit(\"show-spinner\", true);\n      axios.post(\"/api/guest/remove_from_cart\", {\n        id: item.id\n      }).then(res => {\n        bus.$emit(\"show-spinner\", false);\n        bus.$emit(\"refresh-cart\");\n\n        if (item.type == \"wordpress\") {\n          this.$root.$emit(\"remove-wordpress\");\n        }\n      }).catch(err => {\n        console.log(err);\n        bus.$emit(\"show-spinner\", false);\n      });\n    },\n\n    inArray(needle, haystack) {\n      return js_CommonMethods/* default.inArray */.Z.inArray(needle, haystack);\n    },\n\n    toUpperCase(str) {\n      return str.toUpperCase();\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/ItemCart.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_ItemCartvue_type_script_lang_js_ = (ItemCartvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/ItemCart.vue\n\n\n\n\n\n/* normalize component */\n;\nvar ItemCart_component = normalizeComponent(\n  components_ItemCartvue_type_script_lang_js_,\n  ItemCartvue_type_template_id_07332914_render,\n  ItemCartvue_type_template_id_07332914_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const ItemCart = (ItemCart_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowJasaWebsite/QuestionBox.vue?vue&type=template&id=7bf7d8c7&\nvar QuestionBoxvue_type_template_id_7bf7d8c7_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hosting-package mt-lg-0 mt-5\"},[_c('form',{ref:\"questions-form\",on:{\"submit\":function($event){$event.preventDefault();return _vm.submit.apply(null, arguments)}}},[_c('h2',{staticClass:\"hosting-package__title question-box-header\"},[_vm._v(\"\\n      Pemesanan Paket \"+_vm._s(_vm.package_name)+\"\\n    \")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),(_vm.questionStep == 1)?_c('div',{staticClass:\"question-box\"},[_c('div',{staticClass:\"question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n        Apakah Anda sudah pernah menggunakan jasa Niagaweb sebelumnya?\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers container-fluid\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-6 px-0 pl-lg-0 pr-lg-1\"},[_c('div',{staticClass:\"answer--radio\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.first_time),expression:\"order_model.first_time\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"id\":\"notFirstTimeRadio\",\"value\":\"no\",\"checked\":\"\"},domProps:{\"checked\":_vm._q(_vm.order_model.first_time,\"no\")},on:{\"change\":function($event){return _vm.$set(_vm.order_model, \"first_time\", \"no\")}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"notFirstTimeRadio\"}},[_vm._v(\"\\n                    Belum, ini pertama kali\\n                  \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-6 px-0 px-0 pr-lg-0 pl-lg-1\"},[_c('div',{staticClass:\"answer--radio\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.first_time),expression:\"order_model.first_time\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"id\":\"yesFirstTimeRadio\",\"value\":\"yes\"},domProps:{\"checked\":_vm._q(_vm.order_model.first_time,\"yes\")},on:{\"change\":function($event){return _vm.$set(_vm.order_model, \"first_time\", \"yes\")}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"yesFirstTimeRadio\"}},[_vm._v(\"\\n                    Sudah pernah\\n                  \")])])])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n        Dalam bidang apa bisnis Anda bergerak?\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"answer--textarea\"},[_c('div',{staticClass:\"form-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.business_field),expression:\"order_model.business_field\"}],staticClass:\"form-control\",attrs:{\"rows\":\"6\",\"placeholder\":\"Misal: Jasa Properti, Firma Hukum, Perusahaan IT, dan sebagainya.\"},domProps:{\"value\":(_vm.order_model.business_field)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_model, \"business_field\", $event.target.value)}}})])])])]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n        Apa nama website yang Anda inginkan?\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"answer--input-dropdown\"},[_c('div',{staticClass:\"col-8 px-0\",class:'col-8 col-md-9'},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.sld),expression:\"order_model.sld\"}],staticClass:\"orderflow-domain__register-sld border-right-0\",attrs:{\"type\":\"text\",\"placeholder\":'namadomainbaru'},domProps:{\"value\":(_vm.order_model.sld)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_model, \"sld\", $event.target.value)}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-4 col-md-3 px-0\"},[_c('v-select',{staticClass:\"orderflow-domain__register-tld border-left-0 vs--single vs--searchable\",attrs:{\"options\":_vm.tlds,\"clearable\":false,\"placeholder\":_vm.order_model.tld},model:{value:(_vm.order_model.tld),callback:function ($$v) {_vm.$set(_vm.order_model, \"tld\", $$v)},expression:\"order_model.tld\"}},[_c('div',{attrs:{\"slot\":\"no-options\"},slot:\"no-options\"},[_vm._v(\"Ekstensi domain tidak ada\")])])],1)])])]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n        Apakah Anda punya referensi desain website yang diinginkan?\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"answer--input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.reference),expression:\"order_model.reference\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Misal: tokohepi.com, niagahoster.com, dan sebagainya.\"},domProps:{\"value\":(_vm.order_model.reference)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_model, \"reference\", $event.target.value)}}})])])])]):_vm._e(),_vm._v(\" \"),(_vm.questionStep == 2)?_c('div',{staticClass:\"question-box\"},_vm._l((_vm.questionSet),function(question_set,index){return _c('div',{key:index},[(_vm.package_id == question_set.id)?_c('div',_vm._l((question_set.questions),function(q,i){return _c('div',{key:i},[_c('div',{staticClass:\"question-box__item\",attrs:{\"data-product-id\":question_set.id}},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n                \"+_vm._s(q.question)+\"\\n              \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_vm._l((q.answers),function(answer,num){return _c('div',{key:num,class:'answer--' + q.type},[_c('div',{staticClass:\"form-check\"},[(q.type == 'multi-radio')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_questions[question_set.id][i]['answer']),expression:\"order_questions[question_set.id][i]['answer']\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\"},domProps:{\"value\":answer.price ? answer.text + ' [+ Rp' + answer.price + ']' : answer.text,\"checked\":_vm._q(_vm.order_questions[question_set.id][i]['answer'],answer.price ? answer.text + ' [+ Rp' + answer.price + ']' : answer.text)},on:{\"click\":function($event){return _vm.addToAdditionals(i, answer, true)},\"change\":function($event){return _vm.$set(_vm.order_questions[question_set.id][i], 'answer', answer.price ? answer.text + ' [+ Rp' + answer.price + ']' : answer.text)}}}):_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_questions[question_set.id][i]['answer']),expression:\"order_questions[question_set.id][i]['answer']\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"checkbox\"},domProps:{\"value\":answer.price ? answer.text + ' [+ Rp' + answer.price + ']' : answer.text,\"checked\":Array.isArray(_vm.order_questions[question_set.id][i]['answer'])?_vm._i(_vm.order_questions[question_set.id][i]['answer'],answer.price ? answer.text + ' [+ Rp' + answer.price + ']' : answer.text)>-1:(_vm.order_questions[question_set.id][i]['answer'])},on:{\"click\":function($event){(num != 0) ? _vm.addToAdditionals(i, answer, false) : _vm.addToAdditionals(i, answer, true)},\"change\":function($event){var $$a=_vm.order_questions[question_set.id][i]['answer'],$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=answer.price ? answer.text + ' [+ Rp' + answer.price + ']' : answer.text,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.order_questions[question_set.id][i], 'answer', $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.order_questions[question_set.id][i], 'answer', $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.order_questions[question_set.id][i], 'answer', $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label form-check-label--flex\",attrs:{\"id\":'question-' + i}},[_c('div',[_vm._v(\"\\n                        \"+_vm._s(answer.text)+\"\\n                      \")]),_vm._v(\" \"),(answer.price)?_c('div',{staticClass:\"form-check-label__price\"},[_vm._v(\"\\n                        + Rp\"+_vm._s(_vm._f(\"formatPrice\")(answer.price))+\"\\n                        \"),(answer.unit)?_c('span',[_vm._v(\"/ \"+_vm._s(answer.unit))]):_vm._e()]):_vm._e()])])])}),_vm._v(\" \"),(q.accept_custom)?_c('div',{class:'answer--' + q.type},[(q.type == 'multi-radio')?_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_questions[question_set.id][i]['answer']),expression:\"order_questions[question_set.id][i]['answer']\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"value\":\"custom\"},domProps:{\"checked\":_vm._q(_vm.order_questions[question_set.id][i]['answer'],\"custom\")},on:{\"change\":function($event){return _vm.$set(_vm.order_questions[question_set.id][i], 'answer', \"custom\")}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":'question-' + i}},[_vm._v(\"\\n                      Yang lain:\\n                    \")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_questions[question_set.id][i]['other']),expression:\"order_questions[question_set.id][i]['other']\"}],staticClass:\"form-check-field\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.order_questions[question_set.id][i]['other'])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_questions[question_set.id][i], 'other', $event.target.value)}}})]):_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_questions[question_set.id][i]['answer']),expression:\"order_questions[question_set.id][i]['answer']\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"checkbox\",\"value\":\"custom\"},domProps:{\"checked\":Array.isArray(_vm.order_questions[question_set.id][i]['answer'])?_vm._i(_vm.order_questions[question_set.id][i]['answer'],\"custom\")>-1:(_vm.order_questions[question_set.id][i]['answer'])},on:{\"change\":function($event){var $$a=_vm.order_questions[question_set.id][i]['answer'],$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"custom\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.order_questions[question_set.id][i], 'answer', $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.order_questions[question_set.id][i], 'answer', $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.order_questions[question_set.id][i], 'answer', $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":'question-' + i}},[_vm._v(\"\\n                      Yang lain:\\n                    \")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_questions[question_set.id][i]['other']),expression:\"order_questions[question_set.id][i]['other']\"}],staticClass:\"form-check-field\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.order_questions[question_set.id][i]['other'])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_questions[question_set.id][i], 'other', $event.target.value)}}})])]):_vm._e()],2)])])}),0):_vm._e()])}),0):_vm._e(),_vm._v(\" \"),(_vm.questionStep == 3)?_c('div',{staticClass:\"question-box\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"container-fluid px-0\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-6 question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n          Nama Anda\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"answer--input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.name),expression:\"order_model.name\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Nama Anda\"},domProps:{\"value\":(_vm.order_model.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_model, \"name\", $event.target.value)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-6 question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n          Alamat Email Anda\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"answer--input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.email),expression:\"order_model.email\"}],staticClass:\"form-control\",attrs:{\"type\":\"email\",\"placeholder\":\"mail@mail.com\"},domProps:{\"value\":(_vm.order_model.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_model, \"email\", $event.target.value)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n          Nomor yang bisa dihubungi (Telepon/WhatsApp)\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"answer--input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.phone),expression:\"order_model.phone\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"081234567890\"},domProps:{\"value\":(_vm.order_model.phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_model, \"phone\", $event.target.value)}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n          Lebih suka dihubungi melalui:\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"col-12 col-lg-4 px-0 pl-lg-0 pr-lg-1 mb-1 mb-lg-0\"},[_c('div',{staticClass:\"answer--radio\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.contact_by),expression:\"order_model.contact_by\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"id\":\"phoneRadio\",\"value\":\"phone\"},domProps:{\"checked\":_vm._q(_vm.order_model.contact_by,\"phone\")},on:{\"change\":function($event){return _vm.$set(_vm.order_model, \"contact_by\", \"phone\")}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"phoneRadio\"}},[_vm._v(\"\\n                Telepon\\n                \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-4 px-0 px-lg-1 mb-1 mb-lg-0\"},[_c('div',{staticClass:\"answer--radio\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.contact_by),expression:\"order_model.contact_by\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"id\":\"whatsappRadio\",\"value\":\"whatsapp\"},domProps:{\"checked\":_vm._q(_vm.order_model.contact_by,\"whatsapp\")},on:{\"change\":function($event){return _vm.$set(_vm.order_model, \"contact_by\", \"whatsapp\")}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"whatsappRadio\"}},[_vm._v(\"\\n                WhatsApp\\n                \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-4 px-0 pr-lg-0 pl-lg-1 mb-1 mb-lg-0\"},[_c('div',{staticClass:\"answer--radio\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.contact_by),expression:\"order_model.contact_by\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"id\":\"emailRadio\",\"value\":\"email\"},domProps:{\"checked\":_vm._q(_vm.order_model.contact_by,\"email\")},on:{\"change\":function($event){return _vm.$set(_vm.order_model, \"contact_by\", \"email\")}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"emailRadio\"}},[_vm._v(\"\\n                Email\\n                \")])])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 question-box__item\"},[_c('div',{staticClass:\"question-box__item__question\"},[_vm._v(\"\\n          Pertanyaan dan Komentar\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-box__item__answers\"},[_c('div',{staticClass:\"answer--textarea\"},[_c('div',{staticClass:\"form-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.order_model.comment_question),expression:\"order_model.comment_question\"}],staticClass:\"form-control\",attrs:{\"rows\":\"6\",\"placeholder\":\"Ada saran atau pertanyaan untuk kami? Tulis saja disini!\"},domProps:{\"value\":(_vm.order_model.comment_question)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.order_model, \"comment_question\", $event.target.value)}}})])])])])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"question-footer\"},[_c('div',{staticClass:\"question-footer-left\"},[_c('div',{staticClass:\"question-footer__step\"},[_vm._v(\"\\n          Langkah \"+_vm._s(this.questionStep)+\" dari 3\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"question-footer__progress\"},[(this.questionStep == 1)?_c('div',{staticClass:\"question-footer__progress-text\"},[_vm._v(\"\\n            Detail Bisnis Anda\\n          \")]):_vm._e(),_vm._v(\" \"),(this.questionStep == 2)?_c('div',{staticClass:\"question-footer__progress-text\"},[_vm._v(\"\\n            Tambahan\\n          \")]):_vm._e(),_vm._v(\" \"),(this.questionStep == 3)?_c('div',{staticClass:\"question-footer__progress-text\"},[_vm._v(\"\\n            Data Diri dan Kontak\\n          \")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"question-footer__progress-bar\"},[_c('div',{staticClass:\"progress-bar__background\",staticStyle:{\"width\":\"100%\"}}),_vm._v(\" \"),_c('div',{staticClass:\"progress-bar__overlay\",style:('width:' + _vm.progressPercentage + '%')})])])]),_vm._v(\" \"),_c('div',{staticClass:\"question-footer-right\"},[(_vm.questionStep > 1)?_c('button',{staticClass:\"jasa-website-button jasa-website-button--previous\",on:{\"click\":function($event){$event.preventDefault();return _vm.previous()}}},[_vm._v(\"Sebelumnya\")]):_vm._e(),_vm._v(\" \"),(_vm.questionStep < 3)?_c('button',{staticClass:\"jasa-website-button\",on:{\"click\":function($event){$event.preventDefault();return _vm.next()}}},[_vm._v(\"Lanjutkan\")]):_vm._e(),_vm._v(\" \"),(_vm.questionStep == 3)?_c('button',{staticClass:\"jasa-website-button\"},[_vm._v(\"Kirim Jawaban\")]):_vm._e()])])])])}\nvar QuestionBoxvue_type_template_id_7bf7d8c7_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"question-box__note mb-5\"},[_c('p',[_vm._v(\"\\n          Terima kasih sebelumnya telah mengisi formulir untuk kebutuhan website Anda. Pada tahap terakhir ini, kami membutuhkan data diri Anda berupa nama, e-mail, dan nomor telepon yang dapat dihubungi oleh Account Manager kami.\\n        \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n          Jika lebih dari 3 hari kerja setelah mengirimkan formulir Account Manager kami belum menghubungi Anda, Anda bisa menghubungi Account Manager kami di nomor berikut ini:\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"container-fluid px-0\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-4 mb-1 mb-lg-0\"},[_c('div',{staticClass:\"phone-box\"},[_vm._v(\"\\n                Dimas: 0852-2822-7582\\n              \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-4 mb-1 mb-lg-0\"},[_c('div',{staticClass:\"phone-box\"},[_vm._v(\"\\n                Danang: 0851-5900-7472\\n              \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-4 mb-1 mb-lg-0\"},[_c('div',{staticClass:\"phone-box\"},[_vm._v(\"\\n                Brian: 0822-3253-8778\\n              \")])])])])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowJasaWebsite/QuestionBox.vue?vue&type=template&id=7bf7d8c7&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowJasaWebsite/QuestionBox.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const QuestionBoxvue_type_script_lang_js_ = ({\n  name: \"QuestionBox\",\n  emits: ['update-cart', 'update-step'],\n  props: ['tlds', 'package_id', 'package_name', 'package_price', 'checkout_gtm_name', 'checkout_gtm_tag'],\n\n  data() {\n    return {\n      additionals: {},\n      order_model: {\n        'business_field': '',\n        'first_time': 'no',\n        'sld': '',\n        'tld': '.com',\n        'reference': '',\n        'name': '',\n        'email': '',\n        'phone': '',\n        'contact_by': '',\n        'comment_question': ''\n      },\n      order_questions: [],\n      progressPercentage: 0,\n      questionStep: 1,\n      questionSet: [{\n        'id': '90',\n        'questions': [{\n          'accept_custom': false,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin mengupgrade hosting Anda?',\n          'answers': [{\n            'text': 'Tidak, gunakan yang standar saja.'\n          }, {\n            'text': 'Upgrade ke Paket Personal',\n            'price': 250000\n          }, {\n            'text': 'Update ke Paket Bisnis',\n            'price': 500000\n          }, {\n            'text': 'Upgrade ke Paket Cloud Hosting Bisnis',\n            'price': 2500000\n          }, {\n            'text': 'Gunakan hosting saya sendiri (Pastikan Anda sudah punya hosting sendiri untuk opsi ini)'\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin menambahkan kesempatan revisi untuk website Anda?',\n          'answers': [{\n            'text': 'Tidak, gunakan kesempatan sekali revisi saja.'\n          }, {\n            'text': 'Tambah 1 kali revisi - Total 2 Kali Revisi',\n            'price': 300000\n          }, {\n            'text': 'Tambah 2 kali revisi - Total 3 Kali Revisi',\n            'price': 600000\n          }, {\n            'text': 'Tambah 3 kali revisi - Total 4 Kali Revisi',\n            'price': 900000\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin menambahkan jumlah halaman awal pada website Anda?',\n          'answers': [{\n            'text': 'Tidak, cukup dengan jatah halaman awal saat ini saja'\n          }, {\n            'text': 'Tambah 1 Halaman Awal - Rp 250.000 per Halaman',\n            'price': 250000\n          }, {\n            'text': 'Tambah 3 Halaman Awal - Rp 225.000 per Halaman',\n            'price': 675000\n          }, {\n            'text': 'Tambah 5 Halaman Awal - Rp 200.000 per Halaman',\n            'price': 1000000\n          }, {\n            'text': 'Tambah 10 Halaman Awal - Rp 150.000 per Halaman',\n            'price': 1500000\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-checkbox',\n          'question': 'Apakah ada Plugin & Widgets yang ingin Anda tambahkan?',\n          'answers': [{\n            'text': 'Tidak perlu tambah plugin.'\n          }, {\n            'text': 'Click to Chat WhatsApp',\n            'price': 100000\n          }, {\n            'text': 'GTranslate untuk penerjemah otomatis pada website Anda',\n            'price': 30000\n          }, {\n            'text': 'Live Chat via Tawk.to',\n            'price': 30000\n          }, {\n            'text': 'Buttonizer',\n            'price': 30000\n          }, {\n            'text': 'WP Mail SMTP',\n            'price': 75000\n          }, {\n            'text': 'Halaman Coming Soon',\n            'price': 30000\n          }]\n        }]\n      }, {\n        'id': '91',\n        'questions': [{\n          'accept_custom': false,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin mengupgrade hosting Anda?',\n          'answers': [{\n            'text': 'Tidak, gunakan yang standar saja.'\n          }, {\n            'text': 'Upgrade ke Paket Personal',\n            'price': 250000\n          }, {\n            'text': 'Update ke Paket Bisnis',\n            'price': 500000\n          }, {\n            'text': 'Upgrade ke Paket Cloud Hosting Bisnis',\n            'price': 2500000\n          }, {\n            'text': 'Gunakan hosting saya sendiri (Pastikan Anda sudah punya hosting sendiri untuk opsi ini)'\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin menambahkan kesempatan revisi untuk website Anda?',\n          'answers': [{\n            'text': 'Tidak, gunakan kesempatan sekali revisi saja.'\n          }, {\n            'text': 'Tambah 1 kali revisi - Total 2 Kali Revisi',\n            'price': 300000\n          }, {\n            'text': 'Tambah 2 kali revisi - Total 3 Kali Revisi',\n            'price': 600000\n          }, {\n            'text': 'Tambah 3 kali revisi - Total 4 Kali Revisi',\n            'price': 900000\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin menambahkan jumlah halaman awal pada website Anda?',\n          'answers': [{\n            'text': 'Tidak, cukup dengan jatah halaman awal saat ini saja'\n          }, {\n            'text': 'Tambah 1 Halaman Awal - Rp 250.000 per Halaman',\n            'price': 250000\n          }, {\n            'text': 'Tambah 3 Halaman Awal - Rp 225.000 per Halaman',\n            'price': 675000\n          }, {\n            'text': 'Tambah 5 Halaman Awal - Rp 200.000 per Halaman',\n            'price': 1000000\n          }, {\n            'text': 'Tambah 10 Halaman Awal - Rp 150.000 per Halaman',\n            'price': 1500000\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-checkbox',\n          'question': 'Apakah ada Plugin & Widgets yang ingin Anda tambahkan?',\n          'answers': [{\n            'text': 'Tidak perlu tambah plugin.'\n          }, {\n            'text': 'Click to Chat WhatsApp',\n            'price': 100000\n          }, {\n            'text': 'Live Chat via Tawk.to',\n            'price': 30000\n          }, {\n            'text': 'GTranslate penerjemah otomatis di website Anda ',\n            'price': 30000\n          }, {\n            'text': 'Plugin untuk Ongkos Kirim dengan Ongkoskirim.id',\n            'price': 25000\n          }, {\n            'text': 'Pengecekan Resi dari Cekresi.com',\n            'price': 30000\n          }, {\n            'text': 'Setup Plugin Harga Grosir',\n            'price': 110000\n          }, {\n            'text': 'Buttonizer',\n            'price': 30000\n          }, {\n            'text': 'WP Mail SMTP',\n            'price': 75000\n          }, {\n            'text': 'Halaman Coming Soon',\n            'price': 30000\n          }, {\n            'text': 'Member Area dengan plugin Qode Membership',\n            'price': 100000\n          }]\n        }, {\n          'accept_custom': false,\n          'type': 'multi-radio',\n          'question': 'Saat ini Anda memilki jatah untuk setup 5 produk yang akan ditampilkan pada website Anda. Namun apakah Anda ingin menambahkan setup produk lagi?',\n          'answers': [{\n            'text': 'Ya, bantu saya untuk setup beberapa produk lagi',\n            'price': 20000,\n            'unit': 'Produk'\n          }, {\n            'text': 'Tidak perlu'\n          }]\n        }]\n      }, {\n        'id': '92',\n        'questions': [{\n          'accept_custom': false,\n          'type': 'multi-radio',\n          'question': 'Apa hosting yang ingin Anda gunakan?',\n          'answers': [{\n            'text': 'Paket Bayi Niagahoster',\n            'price': 300000\n          }, {\n            'text': 'Paket Pelajar Niagahoster',\n            'price': 600000\n          }, {\n            'text': 'Paket Personal Niagahoster',\n            'price': 700000\n          }, {\n            'text': 'Paket Bisnis Niagahoster',\n            'price': 1100000\n          }, {\n            'text': 'Saya sudah memiliki paket Hosting di Niagahoster'\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin menambahkan kesempatan revisi untuk website Anda?',\n          'answers': [{\n            'text': 'Tidak, gunakan kesempatan sekali revisi saja.'\n          }, {\n            'text': 'Tambah 1 kali revisi - Total 2 Kali Revisi',\n            'price': 300000\n          }, {\n            'text': 'Tambah 2 kali revisi - Total 3 Kali Revisi',\n            'price': 600000\n          }, {\n            'text': 'Tambah 3 kali revisi - Total 4 Kali Revisi',\n            'price': 900000\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-radio',\n          'question': 'Apakah Anda ingin menambahkan jumlah halaman awal pada website Anda?',\n          'answers': [{\n            'text': 'Tidak, cukup dengan jatah halaman awal saat ini saja'\n          }, {\n            'text': 'Tambah 1 Halaman Awal - Rp 250.000 per Halaman',\n            'price': 250000\n          }, {\n            'text': 'Tambah 3 Halaman Awal - Rp 225.000 per Halaman',\n            'price': 675000\n          }, {\n            'text': 'Tambah 5 Halaman Awal - Rp 200.000 per Halaman',\n            'price': 1000000\n          }, {\n            'text': 'Tambah 10 Halaman Awal - Rp 150.000 per Halaman',\n            'price': 1500000\n          }]\n        }, {\n          'accept_custom': true,\n          'type': 'multi-checkbox',\n          'question': 'Plugin & Widgets yang ingin Anda tambahkan',\n          'answers': [{\n            'text': 'Tidak perlu tambah plugin.'\n          }, {\n            'text': 'Click to Chat WhatsApp',\n            'price': 100000\n          }, {\n            'text': 'GTranslate untuk penerjemah otomatis pada website Anda',\n            'price': 30000\n          }, {\n            'text': 'Live Chat via Tawk.to',\n            'price': 30000\n          }, {\n            'text': 'Buttonizer',\n            'price': 30000\n          }, {\n            'text': 'WP Mail SMTP',\n            'price': 75000\n          }, {\n            'text': 'Halaman Coming Soon',\n            'price': 30000\n          }]\n        }]\n      }],\n      totalPrice: 0\n    };\n  },\n\n  computed: {},\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  methods: {\n    addToAdditionals(group, value, replaceGroup = false) {\n      if (replaceGroup) {\n        this.additionals[group] = [value];\n        this.order_questions[this.package_id][group].answer = [value];\n      } else {\n        this.order_questions[this.package_id][group].answer = this.order_questions[this.package_id][group].answer.filter(selected => selected !== 'Tidak perlu tambah plugin.');\n\n        if (!this.additionals[group]) {\n          this.additionals[group] = [];\n        }\n\n        this.additionals[group].push(value);\n      }\n\n      this.calculateTotal();\n      this.$forceUpdate();\n      this.$emit('update-cart', this.additionals);\n    },\n\n    calculateTotal() {\n      let temporary = this.additionals;\n      let tempPrice = 0;\n      Object.keys(this.additionals).forEach(function (key) {\n        temporary[key].forEach((item, index) => {\n          if (item.price) {\n            tempPrice += item.price;\n          }\n        });\n      });\n      this.totalPrice = tempPrice;\n      this.totalPrice = tempPrice + this.package_price;\n    },\n\n    allFieldValid() {\n      let isValid = true;\n      let fields = {\n        '1': ['business_field', 'first_time', 'sld', 'tld'],\n        '3': ['name', 'email', 'phone', 'contact_by', 'comment_question']\n      };\n\n      if (this.questionStep == 1 || this.questionStep == 3) {\n        let model = this.order_model;\n        fields[this.questionStep].some(function (field) {\n          if (model[field] == '') {\n            isValid = false;\n            return false;\n          }\n        });\n      } else {\n        this.order_questions[this.package_id].some(function (question) {\n          if (typeof question.answer === 'string' || question.answer instanceof String) {\n            if (question.answer == '' || question.answer == 'custom' && question.other == '') {\n              isValid = false;\n              return false;\n            }\n          } else if (question.answer instanceof Array) {\n            if (question.answer.length == 0) {\n              // Validate if checkbox is selected\n              isValid = false;\n              return false;\n            } else {\n              let tempOther = question.other; // Look for value 'custom'. \n              // If there is value 'custom' and 'other' var is empty, mark as invalid.\n\n              question.answer.some(function (value) {\n                if (value == 'custom' && tempOther == '') {\n                  isValid = false;\n                  return false;\n                }\n              });\n            }\n          }\n        });\n      } // Prevent Showing Double Alert Popup\n\n\n      if (!isValid) {\n        alert('Mohon periksa kembali data Anda');\n      }\n\n      return isValid;\n    },\n\n    recalculateProgress() {\n      window.scrollTo(0, 0);\n      this.progressPercentage = Math.ceil(this.questionStep / 3 * 100);\n    },\n\n    previous() {\n      this.questionStep = this.questionStep - 1;\n      this.recalculateProgress();\n      this.$emit('update-step', this.questionStep);\n    },\n\n    next() {\n      if (this.allFieldValid()) {\n        this.questionStep = this.questionStep + 1;\n        this.recalculateProgress();\n        this.$emit('update-step', this.questionStep);\n      }\n    },\n\n    submit() {\n      if (this.allFieldValid()) {\n        Gtm.trackingClickCTA(this.checkout_gtm_name, this.checkout_gtm_tag);\n        this.$emit('show-spinner', true);\n        this.order_questions[this.package_id].forEach(function (q) {\n          if (q.answer instanceof String || typeof q.answer === 'string') {\n            if (q.answer == 'custom') {\n              q.answer = q.other;\n            }\n          } else if (q.answer instanceof Array) {\n            let temp = q.answer;\n            let tempCustom = q.other;\n            q.answer.some(function (option, indexVal) {\n              if (option == 'custom') {\n                temp[indexVal] = tempCustom;\n                return; // break\n              }\n            });\n            q.answer = temp;\n          }\n        });\n        axios.post('/api/v2/difm_order/submit', {\n          'difm-estimate': this.totalPrice,\n          'difm-product-id': this.package_id,\n          'difm-business-field-p1': this.order_model.business_field,\n          'difm-first-time-p1': this.order_model.first_time,\n          'difm-sld-p1': this.order_model.sld,\n          'difm-tld-p1': this.order_model.tld,\n          'difm-reference-p1': this.order_model.reference,\n          'difm-name-p3': this.order_model.name,\n          'difm-email-p3': this.order_model.email,\n          'difm-phone-p3': this.order_model.phone,\n          'difm-contact-by-p3': this.order_model.contact_by,\n          'difm-comment-question-p3': this.order_model.comment_question,\n          'order_questions': this.order_questions\n        }).then(response => {\n          if (response.data.success) {\n            window.location.href = \"/order/jasa-pembuatan-website/thank-you\";\n          }\n        }).catch(error => {\n          this.$emit('show-spinner', false);\n\n          if (error.response.data.error.message) {\n            alert(error.response.data.error.message);\n          } else {\n            alert('Mohon periksa kembali data Anda');\n          }\n        });\n      }\n    }\n\n  },\n  mounted: function () {\n    this.progressPercentage = Math.ceil(this.questionStep / 3 * 100);\n    let questions = {};\n    let tempPackageId = this.package_id;\n    this.questionSet.forEach(function (questionSet) {\n      if (questionSet.id == tempPackageId) {\n        questions[tempPackageId] = [];\n        questionSet.questions.forEach(function (questionObject, index) {\n          questions[tempPackageId][index] = {\n            'question': questionObject.question,\n            'answer': questionObject.type == 'multi-checkbox' ? [] : '',\n            'other': ''\n          };\n        });\n      }\n    });\n    this.order_questions = questions;\n    this.calculateTotal();\n  },\n\n  created() {}\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowJasaWebsite/QuestionBox.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowJasaWebsite_QuestionBoxvue_type_script_lang_js_ = (QuestionBoxvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowJasaWebsite/QuestionBox.vue\n\n\n\n\n\n/* normalize component */\n;\nvar QuestionBox_component = normalizeComponent(\n  OrderFlowJasaWebsite_QuestionBoxvue_type_script_lang_js_,\n  QuestionBoxvue_type_template_id_7bf7d8c7_render,\n  QuestionBoxvue_type_template_id_7bf7d8c7_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const QuestionBox = (QuestionBox_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowJasaWebsite/SectionSummary.vue?vue&type=template&id=49da3b70&\nvar SectionSummaryvue_type_template_id_49da3b70_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{attrs:{\"id\":\"summary-cart-wrapper\"}},[_c('div',{attrs:{\"id\":\"summary-cart\"}},[_c('div',{staticClass:\"summary-cart\"},[_c('div',{staticClass:\"orderflow-step\"},[_c('ul',[_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.step == 1, 'orderflow-step__item--complete':_vm.step > 1}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Detail Bisnis Anda\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.step == 2, 'orderflow-step__item--complete':_vm.step > 2}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"2. Tambahan\")])]),_vm._v(\" \"),_c('li',{staticClass:\"orderflow-step__item orderflow-step__item--website\",class:{'orderflow-step__item--active':_vm.step == 3, 'orderflow-step__item--complete':_vm.step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"3. Data diri dan Kontak\")])])])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"summary-cart__item\",attrs:{\"id\":\"summary-cart__item\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-8\"},[_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Estimasi Harga Jasa\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.package_name))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\"},[_vm._v(\"Rp\"+_vm._s(_vm._f(\"formatPrice\")(_vm.package_price)))])])]),_vm._v(\" \"),_c('hr')])]),_vm._v(\" \"),_c('transition',[_c('div',[_c('div',{staticClass:\"row mb-2\"},[_c('div',{staticClass:\"col-10\"},[_c('p',{staticClass:\"text-capitalize summary-cart__item-type\"},[_vm._v(\"\\n                                        Biaya Tambahan\\n                                    \")])])]),_vm._v(\" \"),(_vm.totalPrice == _vm.package_price)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 summary-cart__item-title\"},[_vm._v(\"\\n                                    Tidak Ada Tambahan\\n                                \")])]):_c('div',_vm._l((_vm.additionals),function(group,groupIndex){return _c('div',{key:groupIndex},_vm._l((group),function(item,index){return _c('div',{key:index},[(item.price && item.price != 0)?_c('div',{staticClass:\"row mb-4\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.text))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\"},[_vm._v(\"Rp\"+_vm._s(_vm._f(\"formatPrice\")(item.price)))])])]):_vm._e()])}),0)}),0)])]),_vm._v(\" \"),_c('hr')],1),_vm._v(\" \"),_c('div',{staticClass:\"summary-cart__total\"},[_c('div',{staticClass:\"row align-items-center\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-8 col-lg-9\"},[_c('p',{staticClass:\"summary-cart__total-price text-right\"},[_vm._v(\"\\n                                ~Rp\"+_vm._s(_vm._f(\"formatPrice\")(_vm.totalPrice))+\"\\n                            \")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"summary-cart__disclaimer\"},[_vm._v(\"\\n                    Harga diatas masih estimasi dan belum harga final. Info lebih lanjut terkait biaya akan diinfokan oleh Account Manager kami\\n                \")])])])])])}\nvar SectionSummaryvue_type_template_id_49da3b70_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-4 col-lg-3\"},[_c('p',{staticClass:\"summary-cart__total-title\"},[_vm._v(\"ESTIMASI BIAYA\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowJasaWebsite/SectionSummary.vue?vue&type=template&id=49da3b70&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowJasaWebsite/SectionSummary.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const OrderFlowJasaWebsite_SectionSummaryvue_type_script_lang_js_ = ({\n  name: \"JasaWebsiteSectionSummary\",\n  props: ['additionals', 'flow', 'package_id', 'package_name', 'package_price', 'step'],\n\n  data() {\n    return {\n      totalPrice: 0\n    };\n  },\n\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n\n  mounted() {\n    let temporary = this.additionals;\n    let tempPrice = 0;\n    Object.keys(this.additionals).forEach(function (key) {\n      temporary[key].forEach((item, index) => {\n        if (item.price) {\n          tempPrice += item.price;\n        }\n      });\n    });\n    this.totalPrice = tempPrice;\n    this.totalPrice = tempPrice + this.package_price;\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowJasaWebsite/SectionSummary.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_OrderFlowJasaWebsite_SectionSummaryvue_type_script_lang_js_ = (OrderFlowJasaWebsite_SectionSummaryvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowJasaWebsite/SectionSummary.vue\n\n\n\n\n\n/* normalize component */\n;\nvar OrderFlowJasaWebsite_SectionSummary_component = normalizeComponent(\n  components_OrderFlowJasaWebsite_SectionSummaryvue_type_script_lang_js_,\n  SectionSummaryvue_type_template_id_49da3b70_render,\n  SectionSummaryvue_type_template_id_49da3b70_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const OrderFlowJasaWebsite_SectionSummary = (OrderFlowJasaWebsite_SectionSummary_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Rafle/Vps/VpsFlow.vue?vue&type=template&id=388637d9&\nvar VpsFlowvue_type_template_id_388637d9_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"row winner-form--dekstop\"},[_c('div',{staticClass:\"col-md-3\"},[_c('div',{staticClass:\"nav flex-columns\",attrs:{\"id\":\"v-pills-tab\",\"role\":\"tablist\",\"aria-orientation\":\"vertical\"}},[_c('a',{class:'as-nav-col pb-3 ' + (_vm.step == 1 ? 'show active' : '')},[_c('a',{staticClass:\"d-none\",attrs:{\"id\":\"v-pills-one-tab\",\"data-toggle\":\"pill\",\"href\":\"#v-pills-one\",\"role\":\"tab\",\"aria-controls\":\"v-pills-one\",\"aria-selected\":\"true\"}}),_vm._v(\" \"),_vm._m(0)]),_vm._v(\" \"),_c('a',{class:'as-nav-col ' + (_vm.step == 2 ? 'active' : '')},[_c('a',{staticClass:\"d-none\",attrs:{\"id\":\"v-pills-two-tab\",\"data-toggle\":\"pill\",\"href\":\"#v-pills-two\",\"role\":\"tab\",\"aria-controls\":\"v-pills-two\",\"aria-selected\":\"true\"}}),_vm._v(\" \"),_vm._m(1)]),_vm._v(\" \"),_c('a',{class:'as-nav-col ' + (_vm.step == 3 ? 'active' : '')},[_c('a',{attrs:{\"id\":\"v-pills-three-tab\",\"data-toggle\":\"pill\",\"href\":\"#v-pills-three\",\"role\":\"tab\",\"aria-controls\":\"v-pills-three\",\"aria-selected\":\"true\"}}),_vm._v(\" \"),_vm._m(2)])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-9 ps-lg-5\"},[_c('div',{staticClass:\"tab-content text-left pl-4\",attrs:{\"id\":\"v-pills-tabContent\"}},[_c('div',{staticClass:\"tab-pane as-nav-col__pane fade show active\",attrs:{\"id\":\"v-pills-one\",\"role\":\"tabpanel\",\"aria-labelledby\":\"v-pills-one-tab\"}},[_c('vps-flow-step-one',{on:{\"onButtonNext\":_vm.onStepChangeEvent}})],1),_vm._v(\" \"),_c('div',{staticClass:\"tab-pane as-nav-col__pane fade\",attrs:{\"id\":\"v-pills-two\",\"role\":\"tabpanel\",\"aria-labelledby\":\"v-pills-two-tab\"}},[_c('vps-flow-step-two',{on:{\"onButtonNext\":_vm.onStepChangeEvent}})],1),_vm._v(\" \"),_c('div',{staticClass:\"tab-pane as-nav-col__pane fade\",attrs:{\"id\":\"v-pills-three\",\"role\":\"tabpanel\",\"aria-labelledby\":\"v-pills-three-tab\"}},[_c('div',{staticClass:\"as-nav-col__content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('p',{staticClass:\"mb-4\"},[_vm._v(\"Langkah 3: Isi data diri Anda dengan data secara lengkap dengan informasi alamat email yang valid dan masih aktif.\")]),_vm._v(\" \"),(_vm.status.msg)?_c('p',{class:'alert alert-' + (_vm.status.type)},[_vm._v(_vm._s(_vm.status.msg))]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.vpsType),expression:\"vpsType\"}],attrs:{\"type\":\"hidden\",\"name\":\"vps_type\",\"value\":\"KVM\"},domProps:{\"value\":(_vm.vpsType)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.vpsType=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"contact_name\"}},[_vm._v(\"Nama Anda\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.contact_name),expression:\"contact_name\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"text\",\"required\":\"required\",\"id\":\"contact_name\",\"aria-describedby\":\"contact_name\",\"placeholder\":\"Contoh : Budi Saputra\"},domProps:{\"value\":(_vm.contact_name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.contact_name=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"email\"}},[_vm._v(\"Email\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"email\",\"required\":\"required\",\"id\":\"email\",\"placeholder\":\"Contoh : emailbudi@gmail.com\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"company\"}},[_vm._v(\"Nama Perusahaan\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.company),expression:\"company\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"text\",\"required\":\"required\",\"id\":\"company\",\"placeholder\":\"Contoh : PT Budi Sejahtera\"},domProps:{\"value\":(_vm.company)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.company=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"email\"}},[_vm._v(\"Nomor Telepon *\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.contact_phone),expression:\"contact_phone\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"text\",\"required\":\"required\",\"id\":\"contact_phone\",\"placeholder\":\"Contoh: 081234567890\"},domProps:{\"value\":(_vm.contact_phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.contact_phone=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 mt-5\"},[_c('button',{class:'as-btn--rounded go-daftar-sekarang ' + (!_vm.loading ? 'as-btn--primary' : 'as-btn--disabled'),attrs:{\"disabled\":_vm.loading},on:{\"click\":_vm.formSubmit}},[_vm._v(\"Dapatkan VPS Gratis\")])])])])])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"row winner-form--mobile\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"accordion\",attrs:{\"id\":\"navigationMobileTwo\"}},[_c('div',[_c('a',{class:'as-nav-col pb-3 ' + (_vm.step == 1 ? 'show active' : '')},[_c('a',{staticClass:\"d-none\",attrs:{\"id\":\"v-pills-mobile-one-tab\",\"data-toggle\":\"pill\",\"href\":\"#v-pills-mobile-one\",\"role\":\"tab\",\"aria-controls\":\"v-pills-mobile-one\",\"aria-selected\":\"true\"}}),_vm._v(\" \"),_vm._m(3)]),_vm._v(\" \"),_c('div',{class:'tab-pane as-nav-col-sm__pane collapse p-3 ' +(_vm.step == 1 ? 'show':''),attrs:{\"id\":\"v-pills-mobile-one\",\"aria-labelledby\":\"v-pills-mobile-one\"}},[_c('div',{staticClass:\"as-nav-col-sm__content\"},[_c('vps-flow-step-one',{on:{\"onButtonNext\":_vm.onStepChangeEvent}})],1)])]),_vm._v(\" \"),_c('div',[_c('a',{class:'as-nav-col ' + (_vm.step == 2 ? 'active' : '')},[_c('a',{staticClass:\"d-none\",attrs:{\"id\":\"v-pills-mobile-two-tab\",\"data-toggle\":\"pill\",\"href\":\"#v-pills-mobile-two\",\"role\":\"tab\",\"aria-controls\":\"v-pills-mobile-two\",\"aria-selected\":\"false\"}}),_vm._v(\" \"),_vm._m(4)]),_vm._v(\" \"),_c('div',{class:'tab-pane as-nav-col-sm__pane collapse p-3 ' + (_vm.step == 2 ? 'show':''),attrs:{\"id\":\"v-pills-mobile-two\",\"aria-labelledby\":\"v-pills-mobile-two\"}},[_c('div',{staticClass:\"as-nav-col-sm__content\"},[_c('vps-flow-step-two',{on:{\"onButtonNext\":_vm.onStepChangeEvent}})],1)])]),_vm._v(\" \"),_c('div',[_c('a',{class:'as-nav-col ' + (_vm.step == 3 ? 'active' : '')},[_c('a',{attrs:{\"id\":\"v-pills-mobile-three-tab\",\"data-toggle\":\"pill\",\"href\":\"#v-pills-mobile-three\",\"role\":\"tab\",\"aria-controls\":\"v-pills-mobile-three\",\"aria-selected\":\"false\"}}),_vm._v(\" \"),_vm._m(5)]),_vm._v(\" \"),_c('div',{class:'tab-pane as-nav-col-sm__pane collapse p-3 ' + (_vm.step == 3 ? 'show':''),attrs:{\"id\":\"v-pills-mobile-three\",\"aria-labelledby\":\"v-pills-mobile-three\"}},[_c('div',{staticClass:\"as-nav-col-sm__content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('p',{staticClass:\"mb-4\"},[_vm._v(\"Langkah 3: Isi data diri Anda dengan data secara lengkap dengan informasi alamat email yang valid dan masih aktif.\")]),_vm._v(\" \"),(_vm.status.msg)?_c('p',{class:'alert alert-' + (_vm.status.type)},[_vm._v(_vm._s(_vm.status.msg))]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.vpsType),expression:\"vpsType\"}],attrs:{\"type\":\"hidden\",\"name\":\"vps_type\",\"value\":\"KVM\"},domProps:{\"value\":(_vm.vpsType)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.vpsType=$event.target.value}}}),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"contact_name\"}},[_vm._v(\"Nama Anda\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.contact_name),expression:\"contact_name\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"text\",\"required\":\"required\",\"id\":\"contact_name\",\"aria-describedby\":\"contact_name\",\"placeholder\":\"Contoh : Budi Saputra\"},domProps:{\"value\":(_vm.contact_name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.contact_name=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"email\"}},[_vm._v(\"Email\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"email\",\"required\":\"required\",\"id\":\"email\",\"placeholder\":\"Contoh : emailbudi@gmail.com\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"company\"}},[_vm._v(\"Nama Perusahaan\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.company),expression:\"company\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"text\",\"required\":\"required\",\"id\":\"company\",\"placeholder\":\"Contoh : PT Budi Sejahtera\"},domProps:{\"value\":(_vm.company)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.company=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"mb-3\"},[_c('label',{staticClass:\"form-label\",attrs:{\"for\":\"email\"}},[_vm._v(\"Nomor Telepon *\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.contact_phone),expression:\"contact_phone\"}],staticClass:\"form-control rounded-pill\",attrs:{\"disabled\":_vm.loading,\"type\":\"text\",\"required\":\"required\",\"id\":\"contact_phone\",\"placeholder\":\"Contoh: 081234567890\"},domProps:{\"value\":(_vm.contact_phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.contact_phone=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 mt-5\"},[_c('button',{class:'as-btn--rounded go-daftar-sekarang ' + (!_vm.loading ? 'as-btn--primary' : 'as-btn--disabled'),attrs:{\"disabled\":_vm.loading},on:{\"click\":_vm.formSubmit}},[_vm._v(\"Dapatkan VPS Gratis\")])])])])])])])])])])])}\nvar VpsFlowvue_type_template_id_388637d9_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"d-flex justify-content-start align-items-center col-12\"},[_c('img',{staticClass:\"img-fluid mr-3\",attrs:{\"src\":\"/assets/images/2021/arunika/free-vps/ico/step-1.svg\",\"loading\":\"lazy\",\"alt\":\"icon\"}}),_vm._v(\" \"),_c('span',{staticClass:\"as-nav-col__title mt-2\"},[_vm._v(\"Step 1\")])]),_vm._v(\" \"),_c('p',{staticClass:\"as-nav-col__description ml-2 mt-2\"},[_vm._v(\"Like, Share, dan Subscribe\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"d-flex justify-content-start align-items-center col-12\"},[_c('img',{staticClass:\"img-fluid mr-3\",attrs:{\"src\":\"/assets/images/2021/arunika/free-vps/ico/step-2.svg\",\"loading\":\"lazy\",\"alt\":\"icon\"}}),_vm._v(\" \"),_c('span',{staticClass:\"as-nav-col__title\"},[_vm._v(\"Step 2\")])]),_vm._v(\" \"),_c('p',{staticClass:\"as-nav-col__description ml-2 mt-2\"},[_vm._v(\"Pilih Layanan VPS\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"d-flex justify-content-start align-items-center col-12\"},[_c('img',{staticClass:\"img-fluid mr-3\",attrs:{\"src\":\"/assets/images/2021/arunika/free-vps/ico/step-3.svg\",\"loading\":\"lazy\",\"alt\":\"icon\"}}),_vm._v(\" \"),_c('span',{staticClass:\"as-nav-col__title\"},[_vm._v(\"Step 3\")])]),_vm._v(\" \"),_c('p',{staticClass:\"as-nav-col__description ml-2 mt-2\"},[_vm._v(\"Isi Data Diri Anda\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"d-flex justify-content-start align-items-center col-12\"},[_c('img',{staticClass:\"img-fluid mr-3\",attrs:{\"src\":\"/assets/images/2021/arunika/free-vps/icon/step-1.svg\",\"loading\":\"lazy\",\"alt\":\"icon\"}}),_vm._v(\" \"),_c('span',{staticClass:\"as-nav-col__title mt-2\"},[_vm._v(\"Step 1\")])]),_vm._v(\" \"),_c('p',{staticClass:\"as-nav-col__description ml-2 mt-2\"},[_vm._v(\"Like, Share, dan Subscribe\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"d-flex justify-content-start align-items-center col-12\"},[_c('img',{staticClass:\"img-fluid mr-3\",attrs:{\"src\":\"/assets/images/2021/arunika/free-vps/icon/step-2.svg\",\"loading\":\"lazy\",\"alt\":\"icon\"}}),_vm._v(\" \"),_c('span',{staticClass:\"as-nav-col__title\"},[_vm._v(\"Step 2\")])]),_vm._v(\" \"),_c('p',{staticClass:\"as-nav-col__description ml-2 mt-2\"},[_vm._v(\"Pilih Layanan VPS\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"d-flex justify-content-start align-items-center col-12\"},[_c('img',{staticClass:\"img-fluid mr-3\",attrs:{\"src\":\"/assets/images/2021/arunika/free-vps/icon/step-3.svg\",\"loading\":\"lazy\",\"alt\":\"icon\"}}),_vm._v(\" \"),_c('span',{staticClass:\"as-nav-col__title\"},[_vm._v(\"Step 3\")])]),_vm._v(\" \"),_c('p',{staticClass:\"as-nav-col__description ml-2 mt-2\"},[_vm._v(\"Isi Data Diri Anda\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/VpsFlow.vue?vue&type=template&id=388637d9&\n\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Rafle/Vps/partial/StepOne.vue?vue&type=template&id=037716cc&\nvar StepOnevue_type_template_id_037716cc_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{attrs:{\"id\":\"fb-root\"}}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 col-12 mb-5\"},[_c('p',[_vm._v(\"Facebook\")]),_vm._v(\" \"),_c('div',{staticClass:\"fb-like\",attrs:{\"data-href\":\"https://www.facebook.com/Niagahoster\",\"data-width\":\"\",\"data-layout\":\"button\",\"data-action\":\"like\",\"data-size\":\"large\",\"data-show-faces\":\"true\",\"data-share\":\"false\"}}),_vm._v(\" \"),_c('a',{staticClass:\"fb-share\",attrs:{\"href\":\"javascript:void(0);\"},on:{\"click\":function($event){return _vm.onShare()}}},[_vm._v(\"Share\")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 col-12 mb-5\"},[_c('p',[_vm._v(\"Youtube\")]),_vm._v(\" \"),_c('div',{staticClass:\"d-flex align-items-center\"},[_c('a',{staticClass:\"as-btn-sosmed as-btn-sosmed--youtube\",attrs:{\"href\":\"https://www.youtube.com/NiagahosterIndonesia\",\"target\":\"__blank\"},on:{\"click\":function($event){return _vm.onButtonClick('youtube')}}},[_c('span',{staticClass:\"as-btn-sosmed-icon as-btn-sosmed-icon--youtube\"}),_vm._v(\"Subscribe\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 col-12 mb-5\"},[_c('p',[_vm._v(\"Tiktok\")]),_vm._v(\" \"),_c('div',{staticClass:\"d-flex\"},[_c('a',{staticClass:\"as-btn-sosmed as-btn-sosmed--tiktok\",attrs:{\"href\":\"https://www.tiktok.com/@niagahoster\",\"target\":\"__blank\"},on:{\"click\":function($event){return _vm.onButtonClick('tiktok')}}},[_c('span',{staticClass:\"as-btn-sosmed-icon as-btn-sosmed-icon--tiktok\"}),_vm._v(\"Follow\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 col-12 mb-5\"},[_c('p',[_vm._v(\"Instagram\")]),_vm._v(\" \"),_c('div',{staticClass:\"d-flex\"},[_c('a',{staticClass:\"as-btn-sosmed as-btn-sosmed--instagram\",attrs:{\"href\":\"https://www.instagram.com/niagahoster.id/\",\"target\":\"__blank\"},on:{\"click\":function($event){return _vm.onButtonClick('instagram')}}},[_c('span',{staticClass:\"as-btn-sosmed-icon as-btn-sosmed-icon--instagram\"}),_vm._v(\"Follow\")])])]),_vm._v(\" \"),(!_vm.next)?_c('div',{staticClass:\"col-12 mb-4\"},[_c('p',{staticClass:\"text-danger\"},[_vm._v(\"Like, Share, dan Subscribe terlebih dahulu untuk bisa meneruskan proses.\")])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"col-12\"},[_c('a',{class:'as-btn--rounded go-daftar-sekarang ' +( _vm.next ? 'as-btn--primary' : 'as-btn--disabled'),attrs:{\"href\":\"javascript:void(0);\",\"disabled\":!_vm.next},on:{\"click\":function($event){return _vm.onButtonNext()}}},[_vm._v(\"Selanjutnya\")])])])])}\nvar StepOnevue_type_template_id_037716cc_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"mb-4\"},[_vm._v(\"Langkah 1: \"),_c('strong',[_vm._v(\"Like\")]),_vm._v(\" Facebook Page Niagahoster, \"),_c('strong',[_vm._v(\"Share\")]),_vm._v(\" halaman ini ke Facebook, dan \"),_c('strong',[_vm._v(\"Subscribe\")]),_vm._v(\" YouTube channel Niagahoster.\")])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/partial/StepOne.vue?vue&type=template&id=037716cc&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Rafle/Vps/partial/StepOne.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const StepOnevue_type_script_lang_js_ = ({\n  name: 'VpsFlowStepOne',\n  props: [\"step\"],\n\n  data() {\n    return {\n      facebookLikes: 0,\n      facebookShare: 0,\n      youtube: 0,\n      tiktok: 0,\n      instagram: 0,\n      next: false\n    };\n  },\n\n  methods: {\n    onShare() {\n      FB.ui({\n        display: 'popup',\n        method: 'share_open_graph',\n        action_type: 'og.likes',\n        action_properties: JSON.stringify({\n          object: window.location.href\n        })\n      });\n      this.facebookShare = 1;\n      this.facebookLikes = 1;\n      this.checkButtonClick();\n    },\n\n    onButtonClick(type) {\n      this[type] = 1;\n      this.checkButtonClick();\n    },\n\n    checkButtonClick() {\n      if (this.facebookLikes && this.facebookShare && this.youtube && this.tiktok && this.instagram) {\n        this.next = true;\n      }\n    },\n\n    onButtonNext() {\n      this.$emit('onButtonNext', 2, '');\n      document.querySelector('#v-pills-two-tab').click();\n      document.querySelector('#v-pills-mobile-two-tab').click();\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/partial/StepOne.vue?vue&type=script&lang=js&\n /* harmony default export */ const partial_StepOnevue_type_script_lang_js_ = (StepOnevue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/partial/StepOne.vue\n\n\n\n\n\n/* normalize component */\n;\nvar StepOne_component = normalizeComponent(\n  partial_StepOnevue_type_script_lang_js_,\n  StepOnevue_type_template_id_037716cc_render,\n  StepOnevue_type_template_id_037716cc_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const StepOne = (StepOne_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Rafle/Vps/partial/StepTwo.vue?vue&type=template&id=42305c3c&\nvar StepTwovue_type_template_id_42305c3c_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"as-nav-col__content\"},[_c('div',{staticClass:\"row\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\"},[_c('ul',{class:'as-card-select ' + (_vm.type == 'KVM' ? 'selected': 'unselected'),on:{\"click\":function($event){return _vm.onVpsChange('KVM')}}},[_c('li',{staticClass:\"as-card-select__title\"},[_vm._v(\"VPS KVM\")]),_vm._v(\" \"),_c('li',{staticClass:\"as-card-select__description\"},[_vm._v(\"Teknologi virtualisasi VPS memungkinkan Anda untuk memiliki alamat IP dedicated dan mampu digunakan di berbagai jenis OS Linux.\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-12\"},[_c('ul',{class:'as-card-select ' + (_vm.type == 'CYBER_PANEL' ? 'selected': 'unselected'),on:{\"click\":function($event){return _vm.onVpsChange('CYBER_PANEL')}}},[_c('li',{staticClass:\"as-card-select__title\"},[_vm._v(\"VPS Cyberpanel\")]),_vm._v(\" \"),_c('li',{staticClass:\"as-card-select__description\"},[_vm._v(\"Layanan VPS yang dilengkapi dengan CyberPanel, memberikan kemudahan lebih untuk mengatur website dengan cepat, aman dan efisien.\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 mt-5\"},[_c('a',{class:'as-btn--rounded go-daftar-sekarang ' + (_vm.type ? 'as-btn--primary' : 'as-btn--disabled '),attrs:{\"href\":\"javascript:void(0)\",\"disabled\":\"disabled\"},on:{\"click\":_vm.onButtonNext}},[_vm._v(\"Selanjutnya\")])])])])}\nvar StepTwovue_type_template_id_42305c3c_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-12\"},[_c('p',{staticClass:\"mb-4\"},[_vm._v(\"Langkah 2: Pilih layanan VPS gratis Anda\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/partial/StepTwo.vue?vue&type=template&id=42305c3c&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Rafle/Vps/partial/StepTwo.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const StepTwovue_type_script_lang_js_ = ({\n  name: \"VpsFlowStepTwo\",\n\n  data() {\n    return {\n      type: 'KVM'\n    };\n  },\n\n  methods: {\n    onButtonNext() {\n      document.querySelector('#v-pills-three-tab').click();\n      document.querySelector('#v-pills-mobile-three-tab').click();\n      this.$emit('onButtonNext', 3, this.type);\n    },\n\n    onVpsChange(type) {\n      this.type = type;\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/partial/StepTwo.vue?vue&type=script&lang=js&\n /* harmony default export */ const partial_StepTwovue_type_script_lang_js_ = (StepTwovue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/partial/StepTwo.vue\n\n\n\n\n\n/* normalize component */\n;\nvar StepTwo_component = normalizeComponent(\n  partial_StepTwovue_type_script_lang_js_,\n  StepTwovue_type_template_id_42305c3c_render,\n  StepTwovue_type_template_id_42305c3c_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const StepTwo = (StepTwo_component.exports);\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Rafle/Vps/VpsFlow.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ const VpsFlowvue_type_script_lang_js_ = ({\n  name: \"vpsFLow\",\n  components: {\n    'vps-flow-step-one': StepOne,\n    'vps-flow-step-two': StepTwo\n  },\n\n  data() {\n    return {\n      contact_name: '',\n      contact_phone: '',\n      email: '',\n      company: '',\n      step: 1,\n      vpsType: 'KVM',\n      loading: false,\n      status: {\n        type: 'warning',\n        msg: ''\n      }\n    };\n  },\n\n  methods: {\n    onStepChangeEvent(step, type) {\n      this.vpsType = type;\n      this.step = step;\n    },\n\n    formSubmit() {\n      this.loading = true;\n      axios.post('/api/guest/raffle_free_vps', {\n        name: this.contact_name,\n        phone: this.contact_phone,\n        email: this.email,\n        company: this.company,\n        vps_type: this.vpsType\n      }).then(res => {\n        var data = res.data;\n\n        if (data.error && data.error.message) {\n          this.status.type = 'warning';\n          this.status.msg = data.error.message;\n        } else {\n          this.status.type = 'success';\n          this.status.msg = 'Terimakasih karena sudah mendaftar program VPS Gratis';\n          setTimeout(() => {\n            window.location.reload();\n          }, 1000);\n        }\n      }).catch(err => {\n        this.status.type = 'danger';\n        this.status.msg = String(err);\n      }).then(() => {\n        this.loading = false;\n      });\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/VpsFlow.vue?vue&type=script&lang=js&\n /* harmony default export */ const Vps_VpsFlowvue_type_script_lang_js_ = (VpsFlowvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/Rafle/Vps/VpsFlow.vue\n\n\n\n\n\n/* normalize component */\n;\nvar VpsFlow_component = normalizeComponent(\n  Vps_VpsFlowvue_type_script_lang_js_,\n  VpsFlowvue_type_template_id_388637d9_render,\n  VpsFlowvue_type_template_id_388637d9_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const VpsFlow = (VpsFlow_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/SelectRegion.vue?vue&type=template&id=9f496704&\nvar SelectRegionvue_type_template_id_9f496704_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"kvm-region\",class:{'select--disabled': _vm.tmp_cart.items.length}},[_c('h3',{staticClass:\"kvm-region__title text-capitalize\"},[_vm._v(\"Pilih Lokasi Data Center Anda: \")]),_vm._v(\" \"),_c('div',{staticClass:\"select-region\"},[_c('div',{ref:\"select-region\",staticClass:\"select-region__item\",class:{'select-region--show-option':_vm.show_options},on:{\"click\":function($event){_vm.show_options = !_vm.show_options}}},[_c('div',[_c('span',[_c('strong',[_vm._v(_vm._s(_vm.default_kvm_region.region))]),_vm._v(\", \"+_vm._s(_vm.default_kvm_region.country))])])]),_vm._v(\" \"),_c('transition',[(_vm.show_options)?_c('div',{staticClass:\"select-region__wrapper\"},[_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-region'], handler: 'onClose'}),expression:\"{exclude: ['select-region'], handler: 'onClose'}\"}],staticClass:\"select-region__option\"},_vm._l((_vm.kvm_region.lists),function(item,key){return _c('li',{key:key,on:{\"click\":function($event){return _vm.chooseRegion(key)}}},[_c('span',[_c('strong',[_vm._v(_vm._s(item.region))]),_vm._v(\", \"+_vm._s(item.country))])])}),0)]):_vm._e()])],1),_vm._v(\" \"),_c('p',{staticClass:\"kvm-region__info\"},[_vm._v(\"Data center yang akan Anda pilih tidak dapat diubah setelah transaksi selesai\")])])}\nvar SelectRegionvue_type_template_id_9f496704_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowVps/SelectRegion.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const SelectRegionvue_type_script_lang_js_ = ({\n  name: \"selectRegion\",\n  props: [\"kvm_region\", \"tmp_cart\"],\n  data: function () {\n    return {\n      show_options: false,\n      default_kvm_region: {\n        region: \"\",\n        country: \"\"\n      }\n    };\n  },\n  methods: {\n    chooseRegion(id) {\n      this.kvm_region.selected = id;\n      this.show_options = false;\n      this.setRegionName();\n    },\n\n    setRegionName() {\n      let selectedRegion = this.kvm_region.lists[this.kvm_region.selected];\n      this.default_kvm_region.region = selectedRegion.region;\n      this.default_kvm_region.country = selectedRegion.country;\n    },\n\n    onClose() {\n      this.show_options = false;\n    }\n\n  },\n\n  mounted() {\n    this.setRegionName();\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/SelectRegion.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowVps_SelectRegionvue_type_script_lang_js_ = (SelectRegionvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowVps/SelectRegion.vue\n\n\n\n\n\n/* normalize component */\n;\nvar SelectRegion_component = normalizeComponent(\n  OrderFlowVps_SelectRegionvue_type_script_lang_js_,\n  SelectRegionvue_type_template_id_9f496704_render,\n  SelectRegionvue_type_template_id_9f496704_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const SelectRegion = (SelectRegion_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/EazyLink/UsernameBox.vue?vue&type=template&id=3dbd622d&\nvar UsernameBoxvue_type_template_id_3dbd622d_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hosting-package mt-lg-0 mt-5\"},[_c('div',[_vm._v(\"\\n    Username Niagahoster EazyLink\\n  \")]),_vm._v(\" \"),_c('div',{staticClass:\"mt-5\"},[_c('div',{staticClass:\"input-group la-inner-addon la-inner-addon__right\"},[_vm._m(0),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.username),expression:\"username\"}],ref:\"inputUsername\",staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"username\",\"aria-describedby\":\"basic-addon1\",\"readonly\":_vm.readOnlyUsername},domProps:{\"value\":(_vm.username)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.username=$event.target.value},_vm.resetInfo]}}),_vm._v(\" \"),(_vm.usernameChecked && _vm.canSetUsername)?_c('i',{staticClass:\"icon niaga-icon icon-ic-check text-success font-size-18\"}):_vm._e(),_vm._v(\" \"),(_vm.usernameChecked && !_vm.canSetUsername)?_c('span',{staticClass:\"icon fa fa-times-circle text-danger\"}):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"mt-4\"},[_c('span',{class:_vm.info.classes},[_vm._v(\"\\n      • \"+_vm._s(_vm.info.message)+\"\\n    \")]),_vm._v(\" \"),(!_vm.info.classes)?_c('div',[_vm._v(\"\\n      • Username yang sudah Anda dipilih, tidak dapat diubah kembali.\\n    \")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"mt-5\"},[(_vm.has_order && _vm.showJumpToDashboard)?_c('button',{staticClass:\"rounded-pill la-btn la-btn__orange\",on:{\"click\":_vm.jumpDashboard}},[_vm._v(\"\\n      Ke Dashboard\\n    \")]):(!_vm.canSetUsername)?_c('button',{class:(\"rounded-pill la-btn-outline \" + (_vm.canCheckUsername ? 'la-btn-outline__orange' : 'disabled')),attrs:{\"disabled\":!_vm.canCheckUsername},on:{\"click\":_vm.checkUsername}},[_vm._v(\"\\n      Cek Username\\n    \")]):_c('div',[_c('button',{staticClass:\"rounded-pill la-btn la-btn__orange\",on:{\"click\":_vm.saveUsername}},[_vm._v(\"Lanjutkan\")]),_vm._v(\" \"),_c('button',{staticClass:\"rounded-pill la-btn-outline la-btn-outline__orange\",on:{\"click\":_vm.changeUsername}},[_vm._v(\"Ubah Username\")])])])])}\nvar UsernameBoxvue_type_template_id_3dbd622d_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\",attrs:{\"id\":\"basic-addon1\"}},[_c('i',{staticClass:\"niaga-icon icon-ic-link position-absolute font-size-20 mt-n1\"}),_vm._v(\" \"),_c('span',{staticClass:\"ml-5\"},[_vm._v(\"nh.co.id/\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/EazyLink/UsernameBox.vue?vue&type=template&id=3dbd622d&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/EazyLink/UsernameBox.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const UsernameBoxvue_type_script_lang_js_ = ({\n  name: \"UsernameBox\",\n  props: ['id', 'brand', 'has_order'],\n  emits: ['show-spinner'],\n  data: () => {\n    return {\n      info: {\n        classes: null,\n        message: null\n      },\n      username: '',\n      readOnlyUsername: false,\n      canCheckUsername: false,\n      canSetUsername: false,\n      usernameChecked: false,\n      showJumpToDashboard: false\n    };\n  },\n\n  mounted() {\n    this.username = this.brand;\n    this.checkLogin();\n    this.resetInfo();\n    this.inputValidation();\n  },\n\n  methods: {\n    inputValidation() {\n      this.$refs.inputUsername.addEventListener('keydown', e => {\n        if (e.key == 'Enter' && this.canCheckUsername) {\n          this.checkUsername();\n          this.$refs.inputUsername.blur();\n        }\n\n        if (!e.key.match(/(^([a-zA-Z0-9\\-]+)?$)/u)) {\n          e.preventDefault();\n          this.username = this.username.trim().replace('.', '');\n        }\n      });\n    },\n\n    checkLogin() {\n      window.addEventListener('message', msg => {\n        if (msg.data.task == 'not_login') {\n          window.location.href = CommonVar.bb_url + '/login?next=' + window.location.href;\n        }\n      });\n    },\n\n    resetInfo() {\n      this.info = {\n        classes: '',\n        message: 'Username ini akan menjadi nama link yang dapat diakses oleh calon customer Anda.'\n      };\n      this.canCheckUsername = !!(this.username && !this.username.trim().includes(' '));\n      this.usernameChecked = false;\n    },\n\n    checkUsername() {\n      this.$emit('show-spinner', true);\n      axios.post('/api/v2/eazylink/check', {\n        username: this.username\n      }).then(response => {\n        if (response.data.is_valid) {\n          this.setUsernameError(false);\n        } else {\n          this.setUsernameError(true);\n        }\n      }).catch(err => {\n        this.setUsernameError(true);\n\n        if (err.response.data.error) {\n          this.info.message = err.response.data.error;\n\n          if (this.has_order == 'true') {\n            this.showJumpToDashboard = true;\n          }\n        }\n      });\n    },\n\n    setUsernameError(status = true) {\n      this.$emit('show-spinner', false);\n      this.usernameChecked = true;\n\n      if (status) {\n        this.info.classes = 'text-danger';\n        this.info.message = 'Mohon maaf, username tidak tersedia. Silahkan coba kombinasi lain.';\n        this.canCheckUsername = false;\n        this.canSetUsername = false;\n        this.readOnlyUsername = false;\n      } else {\n        this.info.classes = 'text-success';\n        this.info.message = 'Username tersedia';\n        this.canSetUsername = true;\n        this.readOnlyUsername = true;\n      }\n    },\n\n    changeUsername() {\n      this.resetInfo();\n      this.canSetUsername = false;\n      this.readOnlyUsername = false;\n      this.$refs.inputUsername.focus();\n    },\n\n    saveUsername() {\n      this.$emit('show-spinner', true);\n      axios.post('/api/guest/add_to_cart', {\n        item: {\n          id: this.id,\n          username: this.username\n        }\n      }).then(response => {\n        if (!response.data.error) {\n          this.checkout();\n        } else {\n          this.$emit('show-spinner', false);\n        }\n      }).catch(error => {\n        this.$emit('show-spinner', false);\n      });\n    },\n\n    checkout() {\n      axios.post('/api/guest/front_checkout', {\n        order_flow: 'new_link_aggregator',\n        '_ga': js_CommonMethods/* default.getCookie */.Z.getCookie('_ga')\n      }).then(response => {\n        if (!response.data.error) {\n          window.location.href = '/order/eazylink/thank-you';\n        } else {\n          this.$emit('show-spinner', false);\n        }\n      }).catch(error => {\n        this.$emit('show-spinner', false);\n      });\n    },\n\n    jumpDashboard() {\n      window.location.href = CommonVar.bb_url + '/eazylink/login';\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/EazyLink/UsernameBox.vue?vue&type=script&lang=js&\n /* harmony default export */ const EazyLink_UsernameBoxvue_type_script_lang_js_ = (UsernameBoxvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/EazyLink/UsernameBox.vue\n\n\n\n\n\n/* normalize component */\n;\nvar UsernameBox_component = normalizeComponent(\n  EazyLink_UsernameBoxvue_type_script_lang_js_,\n  UsernameBoxvue_type_template_id_3dbd622d_render,\n  UsernameBoxvue_type_template_id_3dbd622d_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const UsernameBox = (UsernameBox_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Toast.vue?vue&type=template&id=63e152e2&\nvar Toastvue_type_template_id_63e152e2_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.showed)?_c('div',{staticClass:\"orderflow-toast\"},[_c('p',[_vm._v(\"\\n        \"+_vm._s(_vm.message)+\"\\n      \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-link\",on:{\"click\":function($event){return _vm.hideToast(true)}}},[_vm._v(_vm._s(_vm.actionButton.title))])]):_vm._e()])}\nvar Toastvue_type_template_id_63e152e2_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/Toast.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const Toastvue_type_script_lang_js_ = ({\n  name: 'Toast',\n\n  data() {\n    return {\n      default: {\n        message: 'Domain Anda berhasil ditambahkan ke Cart',\n        actionTitle: 'Batalkan',\n        autoHide: 5000\n      },\n      message: 'Domain Anda berhasil ditambahkan ke Cart',\n      actionButton: {\n        title: 'Batalkan',\n        callbackFn: null\n      },\n      actionTitle: 'Batalkan',\n      actionCallback: null,\n      showed: false\n    };\n  },\n\n  methods: {\n    showToast: function (message, actionTitle, actionCallback, autoHide) {\n      let hideTimeout = autoHide || this.default.autoHide;\n      this.message = message || this.default.message;\n      this.actionButton.title = actionTitle || this.default.actionTitle;\n\n      if (typeof actionCallback == 'function') {\n        this.actionButton.callbackFn = actionCallback;\n      }\n\n      this.showed = true;\n\n      if (autoHide > 0) {\n        setTimeout(() => {\n          this.hideToast();\n        }, hideTimeout);\n      }\n    },\n    hideToast: function (withCallback) {\n      this.showed = false;\n\n      if (withCallback === true && typeof this.actionButton.callbackFn == 'function') {\n        this.actionButton.callbackFn();\n      }\n    }\n  },\n\n  mounted() {\n    setTimeout(() => {\n      bus.$on('show-toast', (message, actionTitle, actionCallback, autoHide) => {\n        this.showToast(message, actionTitle, actionCallback, autoHide);\n      });\n    }, 100);\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/Toast.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_Toastvue_type_script_lang_js_ = (Toastvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/Toast.vue\n\n\n\n\n\n/* normalize component */\n;\nvar Toast_component = normalizeComponent(\n  components_Toastvue_type_script_lang_js_,\n  Toastvue_type_template_id_63e152e2_render,\n  Toastvue_type_template_id_63e152e2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const Toast = (Toast_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/v2/HostingPlan.vue?vue&type=template&id=891c24ae&\nvar HostingPlanvue_type_template_id_891c24ae_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"hosting-product\"},[_c('h3',{staticClass:\"hosting-product__title\"},[_vm._v(\"1. Pilih Paket Hosting\")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-product__subtitle\"},[_vm._v(\"Silakan pilih salah satu paket hosting sesuai kebutuhan Anda\")]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-container hosting-product__swiper-container\",class:{'select--disabled': _vm.tmp_cart.items.length || _vm.is_loading}},[_c('div',{staticClass:\"swiper-wrapper align-items-end\"},_vm._l((_vm.hosting.plans),function(plan){return _c('div',{key:plan.id,staticClass:\"swiper-slide\",on:{\"click\":function($event){return _vm.chooseHostingPlan(plan)}}},[_c('div',{staticClass:\"as-card-base as-card-base--full-width as-card-base--border as-card-base--no-boxshadow\",class:{'as-card-base--label':plan.id == 26, 'as-card-base--selected':_vm.hosting.selected.product_id == plan.id}},[(plan.id == 26)?_c('p',{staticClass:\"as-card-base__label as-card-base__label--blue\"},[_vm._v(\"Paling Laris\")]):_vm._e(),_vm._v(\" \"),_c('h3',{staticClass:\"as-card-base__title text-capitalize\"},[_vm._v(_vm._s(plan.title))]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),(plan.id == 24)?_c('ul',{staticClass:\"as-card-icon__list\"},[_c('li',{staticClass:\"as-card-icon__list-item\"},[_vm._v(\"Tanpa Gratis Domain\")]),_vm._v(\" \"),_vm._m(0,true),_vm._v(\" \"),_vm._m(1,true),_vm._v(\" \"),_vm._m(2,true),_vm._v(\" \"),_c('li',{staticClass:\"as-card-icon__list-item\"},[_vm._v(\"1 Email Account\")]),_vm._v(\" \"),_c('li',{staticClass:\"as-card-icon__list-item\"},[_vm._v(\"1 Domain\")])]):(plan.id == 25)?_c('ul',{staticClass:\"as-card-icon__list\"},[_vm._m(3,true),_vm._v(\" \"),_vm._m(4,true),_vm._v(\" \"),_vm._m(5,true),_vm._v(\" \"),_vm._m(6,true),_vm._v(\" \"),_vm._m(7,true),_vm._v(\" \"),_vm._m(8,true)]):(plan.id == 26)?_c('ul',{staticClass:\"as-card-icon__list\"},[_vm._m(9,true),_vm._v(\" \"),_vm._m(10,true),_vm._v(\" \"),_vm._m(11,true),_vm._v(\" \"),_vm._m(12,true),_vm._v(\" \"),_vm._m(13,true),_vm._v(\" \"),_vm._m(14,true)]):_c('ul',{staticClass:\"as-card-icon__list\"},[_c('li',{staticClass:\"as-card-icon__list-item\"},[_vm._v(\"Tanpa Gratis Domain\")]),_vm._v(\" \"),_vm._m(15,true),_vm._v(\" \"),_vm._m(16,true),_vm._v(\" \"),_vm._m(17,true),_vm._v(\" \"),_vm._m(18,true),_vm._v(\" \"),_vm._m(19,true)])])])}),0),_vm._v(\" \"),_vm._m(20)]),_vm._v(\" \"),_c('h3',{staticClass:\"hosting-product__title\"},[_vm._v(\"2. Pilih Durasi Paket\")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-product__subtitle\"},[_vm._v(\"Silahkan pilih durasi paket sesuai kebutuhan Anda\")]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-container hosting-period mt-5\",class:{'select--disabled': _vm.tmp_cart.items.length || _vm.is_loading}},[_c('div',{staticClass:\"swiper-wrapper align-items-end\"},_vm._l((_vm.hosting.plan_period),function(periodPrice,x){return (periodPrice.enabled == 1)?_c('div',{key:x,staticClass:\"swiper-slide hosting-period__item\",attrs:{\"data-product\":_vm.hosting.selected.plan.title,\"data-period\":x},on:{\"click\":function($event){return _vm.chooseHostingPeriod(x)}}},[_c('div',{staticClass:\"as-card-base as-card-base--full-width as-card-base--border as-card-base--no-boxshadow mb-3\",class:{'as-card-base--label':periodPrice.discount_enabled == 1, 'as-card-base--selected':_vm.hosting.selected.period == x}},[(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"as-card-base__label as-card-base__label--blue\"},[_vm._v(\"\\n                        Diskon \"+_vm._s(_vm.discountPrice(periodPrice.discount_price, periodPrice.price))+\"%\\n                    \")]):_vm._e(),_vm._v(\" \"),_c('p',{staticClass:\"hosting-period__duration\"},[_vm._v(_vm._s(_vm.period[x].text))]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-period__price-month as-mt-3\"},[_vm._v(\"\\n                        \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price / _vm.period[x].num_of_month))+\"\\n                    \")]):_c('p',{staticClass:\"hosting-period__price-month as-mt-3\"},[_vm._v(\"\\n                        \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price / _vm.period[x].num_of_month))+\"\\n                    \")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-period__desc as-mt-3\"},[_vm._v(\"Total\")]),_vm._v(\" \"),(periodPrice.discount_enabled == 1)?_c('p',{staticClass:\"hosting-period__price-year\"},[_vm._v(\"\\n                        \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.discount_price))+\"\\n                    \")]):_c('p',{staticClass:\"hosting-period__price-year\"},[_vm._v(\"\\n                        \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price))+\"\\n                    \")]),_vm._v(\" \"),_c('p',{staticClass:\"hosting-period__price-strikethrough\"},[(periodPrice.discount_enabled == 1)?_c('s',[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(periodPrice.price)))]):_c('span',[_vm._v(\" \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"hosting-period__price-renewal\",class:{'invisible': _vm.hosting.selected.period != x}},[_vm._v(\"\\n                    Paket akan diperpanjang pada \"+_vm._s(_vm._f(\"nextRenewalDate\")(_vm.period[x].num_of_month))+\" dengan harga \"),_c('strong',[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")((periodPrice.price / _vm.period[x].num_of_month)))+\" per bln\")])])]):_vm._e()}),0),_vm._v(\" \"),_vm._m(21)])])}\nvar HostingPlanvue_type_template_id_891c24ae_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"15.000\")]),_vm._v(\" pengunjung/bulan\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"500 MB\")]),_vm._v(\" SSD Disk Space\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Bandwidth & Database\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Free domain\")]),_vm._v(\" 1 Tahun\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"60.000\")]),_vm._v(\" pengunjung/bulan\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" SSD Disk Space\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Bandwidth & Database\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Email Account\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"10 Addon Domain\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Free domain\")]),_vm._v(\" 1 Tahun\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"135.000\")]),_vm._v(\" pengunjung/bulan \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" SSD Disk Space\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Bandwidth & Database\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Email Account\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Addon Domain\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"180.000\")]),_vm._v(\" pengunjung/bulan\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" SSD Disk Space\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Bandwidth & Database\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Email Account\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"as-card-icon__list-item\"},[_c('strong',[_vm._v(\"Unlimited\")]),_vm._v(\" Addon Domain\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hosting-product__swiper-buttons\"},[_c('div',{staticClass:\"swiper-button-prev\"},[_c('span')]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination hosting-product__dot\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next\"},[_c('span')])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hosting-product__swiper-buttons mb-0\"},[_c('div',{staticClass:\"swiper-button-prev\"},[_c('span')]),_vm._v(\" \"),_c('div',{staticClass:\"swiper-pagination hosting-product__dot\"}),_vm._v(\" \"),_c('div',{staticClass:\"swiper-button-next\"},[_c('span')])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/v2/HostingPlan.vue?vue&type=template&id=891c24ae&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/v2/HostingPlan.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const v2_HostingPlanvue_type_script_lang_js_ = ({\n  name: 'HostingPlan',\n  props: ['hosting', 'flow', 'tmp_cart', 'is_loading'],\n  data: function () {\n    return {\n      period: CommonVar.period\n    };\n  },\n  computed: {},\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    },\n\n    nextRenewalDate(monthPeriod) {\n      let dateNow = new Date();\n      let dateNextRenewal = new Date(dateNow.setMonth(dateNow.getMonth() + monthPeriod));\n      return dateNextRenewal.toLocaleDateString('id-id', {\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\"\n      });\n    }\n\n  },\n  methods: {\n    chooseHostingPlan(plan) {\n      this.hosting.plan_period = plan.pricing.recurrent;\n      this.hosting.selected.product_id = plan.id;\n      this.hosting.selected.plan = plan;\n      this.hosting.selected.period = '1Y';\n      this.$emit('update-hosting-plan', this.hosting);\n      Gtm.trackingClickCTA('Click CTA', 'OrderHosting_ChooseHosting_' + plan.title);\n    },\n\n    chooseHostingPeriod(period) {\n      this.hosting.selected.period = period;\n      this.$emit('update-hosting-plan', this.hosting);\n      Gtm.trackingClickCTA('Click CTA', 'OrderHosting_ChooseHostingPeriod_' + period);\n    },\n\n    setHostingPlanByPath() {\n      let path = window.location.pathname;\n\n      if (path.includes(\"v2\")) {\n        path = path.slice(1);\n      }\n\n      path = path.split(\"/\");\n\n      if (path.length == 3) {\n        let productId = path[2];\n        this.hosting.plans.forEach(plan => {\n          if (plan.id == productId) {\n            this.chooseHostingPlan(plan);\n            this.show_hosting_plan_select_option = false;\n            setTimeout(() => {\n              bus.$emit('virtual-page-view', 'package-selection');\n            }, 500);\n            return;\n          }\n        });\n        const urlParams = new URLSearchParams(window.location.search);\n        let period = urlParams.get('period') ? urlParams.get('period') : \"1Y\";\n        this.chooseHostingPeriod(period);\n      }\n    },\n\n    discountPrice(discount, price) {\n      let discountPrice;\n      discountPrice = Math.round((1 - discount / price) * 100);\n      return discountPrice;\n    }\n\n  },\n  mounted: function () {\n    this.setHostingPlanByPath();\n  },\n  watch: {}\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/v2/HostingPlan.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowHosting_v2_HostingPlanvue_type_script_lang_js_ = (v2_HostingPlanvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/v2/HostingPlan.vue\n\n\n\n\n\n/* normalize component */\n;\nvar v2_HostingPlan_component = normalizeComponent(\n  OrderFlowHosting_v2_HostingPlanvue_type_script_lang_js_,\n  HostingPlanvue_type_template_id_891c24ae_render,\n  HostingPlanvue_type_template_id_891c24ae_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const v2_HostingPlan = (v2_HostingPlan_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/v2/DomainSuggestion.vue?vue&type=template&id=237d9f69&\nvar DomainSuggestionvue_type_template_id_237d9f69_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"orderflow-domain__result orderflow-domain__result--border-top orderflow-domain__result--border-bottom-none\"},[_c('p',{staticClass:\"orderflow-domain__suggestion-title\"},[_vm._v(\"Pilihan Nama Domain Lainnya\")]),_vm._v(\" \"),_c('div',{staticClass:\"orderflow-domain__suggestion pr-2\"},_vm._l((_vm.domain_suggestion),function(ds){return _c('div',{key:ds.name},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(ds.availability)?_c('div',[_c('div',{staticClass:\"row align-items-top mb-4\",class:{'select--disabled': ds.is_added_to_cart || _vm.is_loading}},[_c('div',{staticClass:\"col-md-5 col-sm-12\"},[_c('input',{staticClass:\"orderflow-custom-checkbox gtmDomainSuggestion\",class:{\n                                'orderflow-custom-checkbox--checked': ds.is_added_to_cart,\n                                'orderflow-custom-checkbox--suggestion': _vm.flow == 'orderdomain',\n                                'orderflow-custom-checkbox--regular': _vm.flow != 'orderdomain'\n                            },attrs:{\"id\":_vm._f(\"formatDomain\")(ds.name,'_'),\"data-sld\":ds.sld,\"data-tld\":ds.tld,\"type\":\"checkbox\"},domProps:{\"checked\":_vm.selected_domain_suggestion.includes(ds.name) || ds.is_added_to_cart}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":_vm._f(\"formatDomain\")(ds.name,'_')},on:{\"click\":[function($event){return _vm.addDomainSuggestionToCart(ds)},function($event){$event.preventDefault();_vm.is_loading == true}]}},[_vm._v(_vm._s(ds.name.toLowerCase()))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4 col-sm-12\"},[_c('div',{staticClass:\"orderflow-domain__suggestion--period\",class:{'orderflow-domain__suggestion--period-bold':_vm.flow == 'orderdomain'}},[_c('span',[_vm._v(\"Durasi: \")]),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(ds.pricing.min_years),expression:\"ds.pricing.min_years\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(ds.pricing, \"min_years\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"1 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"2 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"3 Tahun\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3 col-sm-12 orderflow-domain__suggestion-price-wrapper\"},[_c('div',{staticClass:\"orderflow-domain__suggestion-price\"},[(ds.pricing.allow_one_year_registration == 1)?_c('p',{staticClass:\" mb-0\"},[_vm._v(\"\\n                                    Rp \"+_vm._s(_vm.formatPrice( _vm.customPrice(ds.pricing.price_registration, ds.pricing.min_years, ds.pricing.first_year_registration) ))+\"\\n                                \")]):_c('p',{staticClass:\"mb-0\"},[_vm._v(\"\\n                                    Rp \"+_vm._s(_vm.formatPrice(ds.pricing.price_registration * ds.pricing.min_years))+\"\\n                                \")]),_vm._v(\" \"),(ds.pricing.allow_one_year_registration == 1)?_c('s',[_vm._v(\"\\n                                    Rp \"+_vm._s(_vm.formatPrice(ds.pricing.price_registration * ds.pricing.min_years))+\"\\n                                \")]):_vm._e()])])])]):_vm._e()])],1)}),0)])}\nvar DomainSuggestionvue_type_template_id_237d9f69_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/v2/DomainSuggestion.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const v2_DomainSuggestionvue_type_script_lang_js_ = ({\n  name: \"DomainSuggestion\",\n  props: [\"flow\", \"domain_suggestion\", \"domain\", \"tmp_additional\", \"tmp_domain_suggestion\", \"is_loading\"],\n  data: function () {\n    return {\n      selected_domain_suggestion: [],\n      period: CommonVar.period\n    };\n  },\n  computed: {\n    tmpDomainSuggestion() {\n      return this.tmp_domain_suggestion.items.filter(item => {\n        return item.id == 1;\n      });\n    }\n\n  },\n  filters: {\n    formatDomain(domain, sparator) {\n      return js_CommonMethods/* default.formatDomain */.Z.formatDomain(domain, sparator);\n    }\n\n  },\n  methods: {\n    customPrice(reg, years, first) {\n      let customDiscountPrice;\n      customDiscountPrice = reg * years - (reg - first);\n      return customDiscountPrice;\n    },\n\n    addDomainSuggestionToCart(ds) {\n      bus.$emit('add-domain-suggestion', ds);\n\n      if (this.selected_domain_suggestion.includes(ds.name)) {\n        this.selected_domain_suggestion = this.selected_domain_suggestion.filter(item => {\n          return item !== ds.name;\n        });\n      } else {\n        this.selected_domain_suggestion.push(ds.name);\n      }\n    },\n\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/v2/DomainSuggestion.vue?vue&type=script&lang=js&\n /* harmony default export */ const OrderFlowHosting_v2_DomainSuggestionvue_type_script_lang_js_ = (v2_DomainSuggestionvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/v2/DomainSuggestion.vue\n\n\n\n\n\n/* normalize component */\n;\nvar v2_DomainSuggestion_component = normalizeComponent(\n  OrderFlowHosting_v2_DomainSuggestionvue_type_script_lang_js_,\n  DomainSuggestionvue_type_template_id_237d9f69_render,\n  DomainSuggestionvue_type_template_id_237d9f69_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const v2_DomainSuggestion = (v2_DomainSuggestion_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/v2/DomainSuggestionV3.vue?vue&type=template&id=2554ac3d&\nvar DomainSuggestionV3vue_type_template_id_2554ac3d_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"orderflow-domain__result orderflow-domain__result--border-top orderflow-domain__result--border-bottom-none\"},[_c('p',{staticClass:\"orderflow-domain__title color-007aff\",attrs:{\"role\":\"button\"},on:{\"click\":function($event){_vm.show = !_vm.show}}},[_c('u',{attrs:{\"role\":\"button\"}},[_vm._v(\"Lihat Nama Domain Lainnya\")])]),_vm._v(\" \"),(_vm.show)?_c('div',{staticClass:\"orderflow-domain__suggestion pr-2\"},_vm._l((_vm.domain_suggestion),function(ds){return _c('div',{key:ds.name},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(ds.availability)?_c('div',[_c('div',{staticClass:\"row align-items-center mb-4\",class:{'select--disabled': ds.is_added_to_cart}},[_c('div',{staticClass:\"col-md-5\"},[_c('input',{staticClass:\"orderflow-custom-checkbox gtmDomainSuggestion\",class:{\n                    'orderflow-custom-checkbox--checked': ds.is_added_to_cart,\n                    'orderflow-custom-checkbox--suggestion': _vm.flow == 'orderdomain',\n                    'orderflow-custom-checkbox--regular': _vm.flow != 'orderdomain'\n                  },attrs:{\"id\":_vm._f(\"formatDomain\")(ds.name,'_'),\"data-sld\":ds.sld,\"data-tld\":ds.tld,\"type\":\"checkbox\"},domProps:{\"checked\":ds.is_added_to_cart},on:{\"change\":function($event){return _vm.onCheckDomain(ds.is_added_to_cart)}}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":_vm._f(\"formatDomain\")(ds.name,'_')},on:{\"click\":function($event){return _vm.addDomainSuggestionToCart(ds)}}},[_vm._v(_vm._s(ds.name.toLowerCase())+\" \"),_c('i',{staticClass:\"fas fa-check\",attrs:{\"aria-hidden\":\"true\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"},[_c('div',{staticClass:\"orderflow-domain__suggestion--period\",class:{'orderflow-domain__suggestion--period-bold':_vm.flow == 'orderdomain'}},[_c('span',[_vm._v(\"Durasi: \")]),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(ds.pricing.min_years),expression:\"ds.pricing.min_years\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(ds.pricing, \"min_years\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"1 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"2 Tahun\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"3 Tahun\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(ds.pricing.allow_one_year_registration == 1)?_c('p',{staticClass:\"orderflow-domain__suggestion--price mb-0\",class:{'nunito--bold':_vm.flow == 'orderdomain'}},[_vm._v(\"\\n                  Rp. \"+_vm._s(_vm.formatPrice( _vm.customPrice(ds.pricing.price_registration, ds.pricing.min_years, ds.pricing.first_year_registration) ))+\"\\n              \")]):_c('p',{staticClass:\"orderflow-domain__suggestion--price mb-0\",class:{'nunito--bold':_vm.flow == 'orderdomain'}},[_vm._v(\"Rp. \"+_vm._s(_vm.formatPrice( ds.pricing.price_registration * ds.pricing.min_years)))])])])]):_vm._e()])],1)}),0):_vm._e()])}\nvar DomainSuggestionV3vue_type_template_id_2554ac3d_staticRenderFns = []\n\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowHosting/v2/DomainSuggestionV3.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const DomainSuggestionV3vue_type_script_lang_js_ = ({\n  name: \"DomainSuggestion\",\n  props: [\"flow\", \"domain_suggestion\", \"domain\", \"tmp_additional\", \"tmp_domain_suggestion\"],\n  data: function () {\n    return {\n      show: false,\n      period: CommonVar.period\n    };\n  },\n  computed: {\n    inArray() {\n      return (needle, haystack) => js_CommonMethods/* default.inArray */.Z.inArray(needle, haystack);\n    },\n\n    tmpDomainSuggestion() {\n      return this.tmp_domain_suggestion.items.filter(item => {\n        return item.id == 1;\n      });\n    }\n\n  },\n  filters: {\n    formatDomain(domain, sparator) {\n      return js_CommonMethods/* default.formatDomain */.Z.formatDomain(domain, sparator);\n    }\n\n  },\n  methods: {\n    customPrice(reg, years, first) {\n      let customDiscountPrice;\n      customDiscountPrice = reg * years - (reg - first);\n      return customDiscountPrice;\n    },\n\n    addDomainSuggestionToCart(ds) {\n      bus.$emit('add-domain-suggestion', ds);\n    },\n\n    formatPrice(value) {\n      value = Math.round(value);\n      let val = (value / 1).toFixed(2).replace('.', ',');\n      return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    },\n\n    onCheckDomain(v) {\n      bus.$emit('show-add-to-chart', true);\n    }\n\n  },\n  watch: {\n    show: function (val) {\n      bus.$emit('show-add-to-chart', val);\n    }\n  }\n});\n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/v2/DomainSuggestionV3.vue?vue&type=script&lang=js&\n /* harmony default export */ const v2_DomainSuggestionV3vue_type_script_lang_js_ = (DomainSuggestionV3vue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/OrderFlowHosting/v2/DomainSuggestionV3.vue\n\n\n\n\n\n/* normalize component */\n;\nvar DomainSuggestionV3_component = normalizeComponent(\n  v2_DomainSuggestionV3vue_type_script_lang_js_,\n  DomainSuggestionV3vue_type_template_id_2554ac3d_render,\n  DomainSuggestionV3vue_type_template_id_2554ac3d_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ const DomainSuggestionV3 = (DomainSuggestionV3_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/v2/SectionSummary.vue?vue&type=template&id=071ba183&scoped=true&\nvar SectionSummaryvue_type_template_id_071ba183_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{attrs:{\"id\":\"summary-cart-wrapper\"}},[_c('div',{staticClass:\"as-card-base as-card-base--full-width summary-cart\"},[_c('div',{staticClass:\"order-step\"},[(_vm.flow !== 'hosting')?_c('ul',[_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 1, 'order-step__item--complete':_vm.orderflow_step > 1}},[(_vm.flow === 'vps' && _vm.plan_type === 'cpanel')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih VPS cPanel\")]):(_vm.flow === 'vps')?_c('div',{staticClass:\"ribbon\"},[_vm._v(\"1. Pilih Cloud VPS\")]):_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Pilih Hosting & Domain\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 2, 'order-step__item--complete':_vm.orderflow_step > 2}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Tambah Fitur\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 3, 'order-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Metode Pembayaran\")])])]):_c('ul',[_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step <= 2, 'order-step__item--complete':_vm.orderflow_step > 2}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Tambah Paket\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 3, 'order-step__item--complete':_vm.orderflow_step > 3}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Metode Pembayaran\")])]),_vm._v(\" \"),_c('li',{staticClass:\"order-step__item\",class:{'order-step__item--active':_vm.orderflow_step == 4, 'order-step__item--complete':_vm.orderflow_step > 4}},[_c('div',{staticClass:\"ribbon\"},[_vm._v(\"Selesai\")])])])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"summary-cart__item\",attrs:{\"id\":\"summary-cart__item\"}},[_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.tmpCart.length)?_c('div',_vm._l((_vm.tmpCart),function(item){return _c('div',{key:item.id},[(item.action != 'owndomain')?_c('div',[_c('div',{staticClass:\"row mb-2\"},[_c('div',{staticClass:\"col-10\"},[_c('div',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"\\n                                            \"+_vm._s(_vm.itemType(item))+\"\\n                                            \"),_c('div',{staticClass:\"as-card-base__feature--icon as-card-base__feature--icon-exclamation as-tooltip\"},[_c('p',{staticClass:\"as-tooltip__info as-tooltip__info--bottom\",class:{'as-tooltip__domain':item.type == 'domain'}},[_vm._v(\"Besar biaya perpanjangan Anda adalah Rp \"+_vm._s(_vm._f(\"formatPrice\")(item.full_price)))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item, 'vps')}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-6\"},[(item.type == 'domain' && !item.cart_type && item.cart_type == 'tmp_domain')?_c('div',{staticClass:\"summary-cart__item-title\"},[_vm._v(\"\\n                                            \"+_vm._s(item.register_sld + item.register_tld)+\"\\n                                        \")]):_vm._e(),_vm._v(\" \"),(item.type == 'hosting' && _vm.flow === 'website')?_c('div',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.period_text))]):_c('div',{staticClass:\"summary-cart__item-title\"},[(item.type == 'hosting' && item.discount_enabled == 1)?_c('div',[_vm._v(\"\\n                                                Diskon \"+_vm._s(_vm.discountPrice(item.total, item.full_price))+\"%\\n                                            \")]):_vm._e(),_vm._v(\" \"),(item.type == 'domain')?_c('span',[_vm._v(\"Gratis for \")]):(item.type == 'hosting')?_c('span',[_vm._v(\"Hosting \")]):_vm._e(),_vm._v(\"\\n                                            \"+_vm._s(item.title)+\"\\n                                        \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-6\"},[_c('div',{staticClass:\"summary-cart__item-price text-right\",attrs:{\"id\":\"hosting-package-price\"}},[_c('div',[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(item.total)))]),_vm._v(\" \"),(item.discount_enabled == 1 || item.total == 0)?_c('s',{staticClass:\"summary-cart__normal-price\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(item.full_price)))]):_vm._e()]),_vm._v(\" \"),(_vm.plan_type === 'cpanel' && item.type === 'cpanel_license')?_c('div',{staticClass:\"summary-cart__item-price\"},[_c('s',[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(item.discount_price)))])]):_vm._e()])]),_vm._v(\" \"),_c('hr')]):_vm._e()])}),0):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.tmpAdditionalItems.length && (_vm.orderflow_step == 2 || _vm.flow == 'orderdomain'))?_c('div',_vm._l((_vm.tmpAdditionalItems),function(item){return _c('div',{key:item.id},[_c('div',{staticClass:\"row mb-2\"},[_c('div',{staticClass:\"col-10\"},[(_vm.flow === 'vps')?_c('p',{staticClass:\"text-capitalize summary-cart__item-type\"},[_vm._v(\"\\n                                        \"+_vm._s(item.title.includes('Backup') ? 'Backup Cloud VPS' : item.title.includes('Backup') == false ? 'Control Panel Cloud VPS' : item.type)+\" \"+_vm._s(_vm.period[_vm.tmp_addon_period].text)+\"\\n                                    \")]):_c('p',{staticClass:\"summary-cart__item-type\",class:item.type == 'domainprivacy' ? 'text-capitalize' : 'text-uppercase'},[_vm._v(\"\\n                                        \"+_vm._s(item.type == 'domainprivacy' ? 'Domain Privacy' : item.type)+\"\\n                                    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('p',{staticClass:\"font-size-18 text-right\"},[_c('span',{staticClass:\"fa fa-times remove-item\",on:{\"click\":function($event){return _vm.removeFromCart(item, 'addon')}}})])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-6\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(item.title))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-6\"},[(_vm.flow === 'vps' || item.product_id == 76)?_c('p',{staticClass:\"summary-cart__item-price text-right\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(item.total)))]):_c('p',{staticClass:\"summary-cart__item-price text-right\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(item.price)))])])]),_vm._v(\" \"),_c('hr')])}),0):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.orderflow_step == 1 &&\n                        !_vm.tmp_cart.items.length &&\n                        !_vm.tmp_domain_suggestion.items.length &&\n                        _vm.flow != 'orderdomain')?_c('div',[_c('div',{staticClass:\"row justify-content-left\"},[_c('div',{staticClass:\"col-8\"},[(_vm.flow === 'website')?_c('div',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Website \"+_vm._s(_vm.templateName))]):(_vm.flow === 'mailhosting')?_c('div',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Mail Hosting \"+_vm._s(_vm.period[_vm.hosting.selected.period].text))]):(_vm.flow === 'vps' && _vm.plan_type === 'cpanel')?_c('div',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"VPS cPanel \"+_vm._s(_vm.period[_vm.vps.selected.period].text))]):(_vm.flow === 'vps')?_c('div',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Cloud VPS \"+_vm._s(_vm.period[_vm.vps.selected.period].text))]):(_vm.flow === 'vps_kvm')?_c('div',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"VPS KVM \"+_vm._s(_vm.period[_vm.vps_kvm.selected.period].text))]):_c('div',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"\\n                                    Hosting \"+_vm._s(_vm.period[_vm.hosting.selected.period].text)+\" \\n                                    \"),_c('div',{staticClass:\"as-card-base__feature--icon as-card-base__feature--icon-exclamation as-tooltip\"},[_c('p',{staticClass:\"as-tooltip__info as-tooltip__info--bottom\"},[_vm._v(\"Besar biaya perpanjangan Anda adalah Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].price)))])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-6\"},[(_vm.flow === 'website')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.period[_vm.hosting.selected.period].text))]):(_vm.flow === 'vps')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.vps.selected.plan.title))]):(_vm.flow === 'vps_kvm')?_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.vps_kvm.selected.plan.title))]):_c('div',{staticClass:\"summary-cart__item-title\"},[(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_enabled == 1)?_c('div',[_vm._v(\"\\n                                        Diskon \"+_vm._s(_vm.discountPrice(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_price, _vm.hosting.plan_period[_vm.hosting.selected.period].price))+\"%\\n                                    \")]):_vm._e(),_vm._v(\" \"),_c('div',[_vm._v(\"Hosting \"+_vm._s(_vm.hosting.selected.plan.title))])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-6\"},[(_vm.flow != 'vps' && _vm.flow != 'vps_kvm')?_c('div',[(_vm.flow === 'website' && _vm.hosting.plan_period[_vm.hosting.selected.period].discount_enabled == 1)?_c('div',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_price)))]):(_vm.flow === 'website')?_c('div',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].price)))]):(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_enabled == 1)?_c('div',{staticClass:\"summary-cart__item-price\"},[_c('div',[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].discount_price)))]),_vm._v(\" \"),_c('s',{staticClass:\"summary-cart__normal-price\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].price)))])]):_c('div',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.hosting.plan_period[_vm.hosting.selected.period].price)))])]):(_vm.flow === 'vps_kvm')?_c('div',[(_vm.vps_kvm.plan_period[_vm.vps_kvm.selected.period].discount_enabled == 1)?_c('p',{staticClass:\"summary-cart__item-price\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps_kvm.plan_period[_vm.vps_kvm.selected.period].discount_price)))]):_c('p',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps_kvm.plan_period[_vm.vps_kvm.selected.period].price)))])]):_c('div',[(_vm.vps.plan_period[_vm.vps.selected.period].discount_enabled == 1)?_c('p',{staticClass:\"summary-cart__item-price\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps.plan_period[_vm.vps.selected.period].discount_price)))]):_c('p',{staticClass:\"summary-cart__item-price\",attrs:{\"id\":\"hosting-package-price\"}},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(_vm.vps.plan_period[_vm.vps.selected.period].price)))])])])]),_vm._v(\" \"),_c('hr')]):_vm._e()]),_vm._v(\" \"),_c('p',{staticClass:\"summary-cart__item-type\"},[_vm._v(\"Pajak & Biaya Tambahan\")]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-7\"},[_c('p',{staticClass:\"summary-cart__item-title\"},[_vm._v(_vm._s(_vm.taxName))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-5\"},[_c('p',{staticClass:\"summary-cart__item-price text-right\"},[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")((Number(_vm.tmp_cart.total) + Number(_vm.tmp_domain_suggestion.total) + Number(_vm.tmp_additional.total)) * _vm.taxRate)))])])])],1),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),(_vm.coupon_code)?_c('div',{staticClass:\"row as-mb-8\"},[_c('div',{staticClass:\"col-10\"},[_c('div',{staticClass:\"summary-cart__item-coupon\"},[_c('div',[_vm._v(\"Kupon \"),_c('span',[_vm._v(_vm._s(_vm.coupon_code))]),_vm._v(\" telah diterapkan.\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('p',{staticClass:\"font-size-18 text-right\",on:{\"click\":function($event){return _vm.removeCoupon()}}},[_c('span',{staticClass:\"fa fa-times remove-item\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.tmpDiscount != 0)?_c('div',{staticClass:\"row as-mb-10\"},[_c('div',{staticClass:\"col-12\"},[_c('div',{staticClass:\"summary-cart__item-save\"},[_c('div',[_vm._v(\"Selamat! Anda berhasil berhemat \"),_c('span',[_vm._v(\"Rp \"+_vm._s(_vm._f(\"formatPrice\")(Number(_vm.tmpDiscount))))]),_vm._v(\".\")])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"summary-cart__total\"},[_c('div',{staticClass:\"row align-items-center\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-9\"},[_c('p',{staticClass:\"summary-cart__total-price\"},[_vm._v(\"\\n                            Rp \"+_vm._s(_vm._f(\"formatPrice\")((Number(_vm.tmp_cart.total) + Number(_vm.tmp_domain_suggestion.total) + Number(_vm.tmp_additional.total)) + ((Number(_vm.tmp_cart.total) + Number(_vm.tmp_domain_suggestion.total) + Number(_vm.tmp_additional.total)) * _vm.taxRate)))+\" \\n                        \")])])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"d-none d-lg-block\",staticStyle:{\"height\":\"48px\"}},[_c('div',{attrs:{\"id\":\"checkout-button\"}},[(_vm.nextStep)?_c('a',{staticClass:\"button-default button-block nunito-bold font-size-16\",class:_vm.btnNextDisabled ? 'button-disabled' : 'button-white-orange',attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":[_vm.nextOrderflowStep,function($event){$event.preventDefault();return _vm.btnNextDisabled.apply(null, arguments)}]}},[_vm._v(\"Lanjutkan\")]):_c('a',{staticClass:\"button-default button-block nunito-bold font-size-16 button-disabled\",class:{'as-tooltip' : (_vm.flow === 'hosting' && _vm.orderflow_step == 1)},attrs:{\"disabled\":\"disabled\"}},[_vm._v(\"\\n                Lanjutkan\\n                \"),(_vm.flow === 'hosting' && _vm.orderflow_step == 1)?_c('p',{staticClass:\"as-tooltip__info as-tooltip__info--bottom\"},[_vm._v(\"Silahkan pilih nama Domain Anda.\")]):_vm._e()])])])])}\nvar SectionSummaryvue_type_template_id_071ba183_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-3\"},[_c('p',{staticClass:\"summary-cart__total-title\"},[_vm._v(\"TOTAL\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/v2/SectionSummary.vue?vue&type=template&id=071ba183&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/v2/SectionSummary.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const v2_SectionSummaryvue_type_script_lang_js_ = ({\n  name: \"SectionSummary\",\n  props: ['tmp_cart', 'tmp_domain_suggestion', 'orderflow_step', 'hosting', 'vps', 'vps_kvm', 'hostname', 'tmp_additional', 'flow', 'is_hosting_selected', 'is_only_domain', 'coupon_code', 'cart', 'plan_type', 'is_loading'],\n  data: function () {\n    return {\n      period: CommonVar.period,\n      show_summary_cart: false,\n      templateName: localStorage.getItem('website-template-name'),\n      templatePrice: localStorage.getItem('website-template-price'),\n      tmp_addon_period: '',\n      btn_next_disabled: false,\n      taxRate: 0,\n      taxName: ''\n    };\n  },\n  computed: {\n    tmpCart() {\n      let items = this.tmp_cart.items.concat(this.tmp_domain_suggestion.items);\n      return items.filter(item => {\n        return item.id != 1;\n      });\n    },\n\n    tmpDiscount() {\n      let discount = 0;\n\n      for (let i = 0; i < this.tmp_cart.items.length; i++) {\n        if (this.tmp_cart.items[i].total == 0 || this.tmp_cart.items[i].discount_enabled == 1) {\n          discount = discount + (this.tmp_cart.items[i].full_price - this.tmp_cart.items[i].total);\n        }\n      }\n\n      return discount;\n    },\n\n    tmpAdditionalItems() {\n      let additionalItems = this.tmp_additional.items.filter(item => {\n        return item.id != undefined;\n      });\n\n      if (this.checkFreeSslInCart()) {\n        additionalItems.push(this.checkFreeSslInCart());\n      }\n\n      return additionalItems;\n    },\n\n    nextStep() {\n      let step = false;\n\n      if (this.orderflow_step != 3 && this.flow != 'orderdomain' && this.tmp_cart.items.length || this.orderflow_step == 1 && this.flow == 'orderdomain' && this.is_hosting_selected && (this.tmp_cart.items.length || this.tmp_domain_suggestion.items.length) || this.orderflow_step != 1 && this.orderflow_step != 3 && (this.tmp_cart.items.length || this.tmp_domain_suggestion.items.length) || this.orderflow_step == 1 && this.flow == 'vps' && this.tmp_cart.items.length && this.hostname.length || this.orderflow_step == 1 && this.flow == 'vps_kvm' && this.tmp_cart.items.length) {\n        step = true;\n      }\n\n      return step;\n    },\n\n    btnNextDisabled() {\n      return this.btn_next_disabled || this.is_loading;\n    }\n\n  },\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  methods: {\n    itemType(item) {\n      let itemType = 'Domain';\n\n      if (item.type === 'hosting' && (this.flow === 'hosting' || this.flow === 'cloudhosting' || this.flow === 'orderdomain')) {\n        itemType = 'Hosting ' + item.period_text;\n      } else if (item.type === 'hosting' && this.flow === 'website') {\n        itemType = item.title;\n      } else if (item.type === 'hosting' && this.flow === 'mailhosting') {\n        itemType = 'Mail Hosting ' + item.period_text;\n      } else if (item.type === 'domain' && item.action === 'transfer') {\n        itemType = 'Transfer Domain';\n      } else if (this.flow === 'vps' && this.plan_type === 'cpanel') {\n        if (item.type === 'cpanel_license') {\n          itemType = `Control Panel ${item.period_text}`;\n        } else {\n          itemType = 'VPS cPanel ' + item.period_text;\n        }\n      } else if (this.flow === 'vps') {\n        itemType = 'Cloud VPS ' + item.period_text;\n      } else if (this.flow === 'vps_kvm') {\n        itemType = 'VPS KVM ' + item.period_text;\n      }\n\n      return itemType;\n    },\n\n    nextOrderflowStep() {\n      if (!this.btn_next_disabled) {\n        if (this.flow == 'orderdomain' && this.orderflow_step == 1 && !this.is_only_domain) {\n          bus.$emit('add-hosting-to-cart');\n        } else {\n          bus.$emit('next-orderflow-step');\n        }\n      }\n    },\n\n    checkUrlPath(path) {\n      let urlPath;\n      urlPath = window.location.pathname.split('/');\n      return urlPath.includes(path);\n    },\n\n    removeFromCart(item, productType) {\n      bus.$emit('show-spinner', true);\n\n      if (this.flow == 'vps' || this.flow == 'vps_kvm') {\n        const key = productType === 'vps' ? 'tmp_cart' : 'tmp_additional';\n        bus.$emit('remove-from-cart', key, item.id);\n        bus.$emit('show-spinner', false);\n\n        if (key === 'tmp_additional' && item.title.includes('cPanel')) {\n          bus.$emit('reset-plan-upgrade');\n          sessionStorage.setItem('os_template', null);\n        }\n\n        return false;\n      }\n\n      axios.post('/api/guest/remove_from_cart', {\n        id: item.id\n      }).then(res => {\n        if (this.flow === 'website') {\n          if (item.type === 'domain') {\n            window.location.href = CommonVar.niaga_url + 'order/website-instant/84';\n          } else if (item.type === 'hosting') {\n            window.location.href = CommonVar.niaga_url + 'membuat-website';\n          }\n        } else if (this.flow === 'vps') {\n          window.location.href = CommonVar.niaga_url + 'ordervps';\n        } else if (this.flow === 'vps_kvm') {\n          window.location.href = CommonVar.niaga_url + 'ordervps-kvm';\n        } else {\n          if (item.cart_type == 'tmp_hosting') {\n            sessionStorage.removeItem('tmp_cart_hosting');\n            sessionStorage.removeItem('tmp_cart_domain');\n          }\n\n          if (item.cart_type == 'tmp_domain') {\n            sessionStorage.removeItem('tmp_cart_domain');\n          }\n\n          if (sessionStorage.getItem('tmp_domain_suggestion_' + item.id)) {\n            sessionStorage.removeItem('tmp_domain_suggestion_' + item.id);\n          }\n\n          if (this.flow == 'orderdomain' && (item.type == 'domain' || item.type == 'hosting')) {\n            bus.$emit('remove-from-sesssion-storage', 'additional_feature_domainprivacy_');\n          }\n\n          if (item.type == 'domainprivacy') {\n            let domainPrivacyKey = this.orderflow_step == 1 ? js_CommonMethods/* default.formatDomain */.Z.formatDomain(item.sld + item.tld, '_') : item.id;\n            sessionStorage.removeItem('additional_feature_domainprivacy_' + domainPrivacyKey);\n          }\n          /* It will uncheck additional feature checkbox, the listener is on AdditionalFeature.vue */\n\n\n          bus.$emit('remove-item', item);\n          bus.$emit('refresh-cart');\n          let action;\n          let tld;\n\n          if (item.type === 'domain') {\n            action = item.action;\n            tld = item[action + '_tld'];\n          } else {\n            action = item.domain.action;\n            tld = item.domain[action + '_tld'];\n          }\n\n          if (CommonVar.allow_mkt_script == true) {\n            Gtm.gtmRemoveFromCart(item.type, item.title, tld);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        bus.$emit('show-spinner', false);\n\n        if (!this.tmp_cart.items.length && !this.tmp_domain_suggestion.items.length) {\n          window.location.reload();\n        }\n      });\n    },\n\n    toUpperCase(str) {\n      return str.toUpperCase();\n    },\n\n    adjustResize() {\n      let cartWrapper = document.getElementById(\"summary-cart-wrapper\");\n      let cartElement = document.getElementById(\"summary-cart\");\n      let itemElement = document.getElementById(\"summary-cart__item\");\n\n      if (screen.width > 991) {\n        /*For Desktop*/\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n\n        if (screen.height < 768) {\n          itemElement.classList.add(\"summary-cart__item--max-height\");\n        } else {\n          itemElement.classList.remove(\"summary-cart__item--max-height\");\n        }\n      } else {\n        /*For Mobile*/\n        cartElement.classList.remove('sticky-cart');\n        cartElement.style.width = cartWrapper.offsetWidth + \"px\";\n        itemElement.classList.remove(\"summary-cart__item--max-height\");\n      }\n    },\n\n    removeCoupon() {\n      this.$root.$emit('remove-coupon');\n    },\n\n    checkFreeSslInCart() {\n      let ssl;\n\n      if (this.cart) {\n        this.cart.items.forEach(item => {\n          if (item.product_id == 76 && item.free_ssl_hosting === true) {\n            ssl = item;\n          }\n        });\n      }\n\n      return ssl;\n    },\n\n    getTaxRate() {\n      bus.$emit('show-spinner', true);\n      axios.get('/api/v2/get-tax').then(res => {\n        this.taxRate = res.data.result['taxRate'];\n        this.taxName = res.data.result['taxName'];\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        bus.$emit('show-spinner', false);\n      });\n    },\n\n    discountPrice(discount, price) {\n      let discountPrice;\n      discountPrice = Math.round((1 - discount / price) * 100);\n      return discountPrice;\n    }\n\n  },\n  mounted: function () {\n    setTimeout(() => {\n      bus.$on('set-next-btn', val => {\n        this.btn_next_disabled = val;\n      });\n    }, 100);\n  },\n\n  created() {\n    this.getTaxRate();\n\n    if (this.flow == 'vps' && this.orderflow_step == 2) {\n      if (sessionStorage.getItem('tmp_additional')) {\n        this.tmp_additional = JSON.parse(sessionStorage.getItem('tmp_additional'));\n      } else {\n        this.tmp_additional = {\n          items: [],\n          total: 0\n        };\n      }\n\n      let vps_plan = JSON.parse(sessionStorage.getItem('vps_plan'));\n      this.tmp_addon_period = vps_plan.period;\n    }\n\n    window.addEventListener('resize', () => {\n      this.adjustResize();\n    });\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/v2/SectionSummary.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_v2_SectionSummaryvue_type_script_lang_js_ = (v2_SectionSummaryvue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/v2/SectionSummary.vue\n\n\n\n\n\n/* normalize component */\n;\nvar v2_SectionSummary_component = normalizeComponent(\n  components_v2_SectionSummaryvue_type_script_lang_js_,\n  SectionSummaryvue_type_template_id_071ba183_scoped_true_render,\n  SectionSummaryvue_type_template_id_071ba183_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"071ba183\",\n  null\n  \n)\n\n/* harmony default export */ const v2_SectionSummary = (v2_SectionSummary_component.exports);\n;// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/v2/AdditionalFeature.vue?vue&type=template&id=02df6985&scoped=true&\nvar AdditionalFeaturevue_type_template_id_02df6985_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"additional-feature\",attrs:{\"id\":\"additional-feature-wrapper\"}},[_vm._m(0),_vm._v(\" \"),_c('p',{staticClass:\"orderflow-domain__subtitle\"},[_vm._v(\"Buat website makin handal dengan fitur pendukung. Untuk menambahkan fitur pendukung, silakan tambahkan domain terlebih dahulu.\")]),_vm._v(\" \"),_c('div',{staticClass:\"additional-feature__container\"},[_c('h3',{staticClass:\"additional-feature__title\"},[_vm._v(\"Pilihan Fitur Pendukung\")]),_vm._v(\" \"),(_vm.flow !== 'vps')?_c('div',{staticClass:\"additional-feature__addon\"},[(_vm.flow !== 'mailhosting')?_c('div',[(! this.isWordpressHosting())?_c('div',{staticClass:\"row mb-5 align-items-center\"},[_c('div',{staticClass:\"d-none d-lg-block col-lg-2\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/icons-wordpress.svg',\"alt\":\"Auto Install WordPress\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Auto Install Website Wordpress\")]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_c('div',{staticClass:\"col-md-7 col-sm-12\"},[_c('p',{staticClass:\"additional-feature__addon-description\"},[_vm._v(\"\\n                                    Install WordPress tanpa repot, hanya dengan satu kali klik! Proses instalasi akan berlangsung secara otomatis dan website akan siap dijalankan dalam beberapa menit.\\n                                \")]),_vm._v(\" \"),(_vm.additional_feature.wordpress.price > 0)?_c('p',{staticClass:\"additional-feature__addon-price\"},[_vm._v(\"\\n                                    Rp \"),_c('span',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(_vm.additional_feature.wordpress.price)))]),_vm._v(\"/tahun\\n                                \")]):_c('p',{staticClass:\"additional-feature__addon-price\"},[_c('span',[_vm._v(\"GRATIS\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5 col-sm-12\"},[_c('button',{staticClass:\"button-default button-white-orange additional-feature__addon-button gtmAddon mt-5\",class:{'select--disabled': _vm.additional_feature.wordpress.selected == true },attrs:{\"data-addon\":\"Auto Install Website Wordpress\"},on:{\"click\":[function($event){return _vm.autoInstallWebsite($event.target)},function($event){$event.preventDefault();_vm.is_loading == true}]}},[_vm._v(\"\\n                                    Tambah ke Cart\\n                                \")])])])])]):_vm._e(),_vm._v(\" \"),(_vm.checkFreeSslInCart() === false)?_c('div',[_c('hr'),_vm._v(\" \"),_c('div',{staticClass:\"row mt-5 mb-5 align-items-center\"},[_c('div',{staticClass:\"col-lg-2 d-none d-lg-block\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/gratis-ssl.svg',\"alt\":\"Auto Install WordPress\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"\\n                                Premium Commodo SSL\\n                            \")]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_c('div',{staticClass:\"col-md-7 col-sm-12\"},[_c('p',{staticClass:\"additional-feature__addon-description\"},[_vm._v(\"\\n                                        Transfer data terenkripsi, keamanan transaksi terjamin, performa SEO handal, serta kepercayaan pelanggan meningkat dengan perlindungan dari sertifikat SSL Premium Commodo terbaik.\\n                                    \")]),_vm._v(\" \"),(_vm.ssl_plans > 1)?_c('div',[_c('div',{ref:\"select-plan\",staticClass:\"additional-feature__select\",class:{'additional-feature__select--show': _vm.show_ssl_plan, 'select--disabled': _vm.additional_feature.ssl.selected},on:{\"click\":function($event){_vm.show_ssl_plan = !_vm.show_ssl_plan}}},[_c('p',{staticClass:\"additional-feature__select-title\"},[_vm._v(_vm._s(_vm.additional_feature.ssl.title)+\" \"),(_vm.additional_feature.ssl.price)?_c('span',{staticClass:\"float-right pr-lg-5 d-none d-lg-block\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")(_vm.additional_feature.ssl.price))+\"/Tahun\")]):_vm._e()])]),_vm._v(\" \"),(_vm.show_ssl_plan)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({exclude: ['select-plan'], handler: 'onClose'}),expression:\"{exclude: ['select-plan'], handler: 'onClose'}\"}],staticClass:\"additional-feature__ssl-options\"},_vm._l((_vm.ssl_plans),function(ssl){return _c('li',{key:ssl.id,staticClass:\"text-capitalize\",on:{\"click\":function($event){return _vm.chooseSslPlan(ssl.id, ssl.title, ssl.pricing.recurrent[_vm.additional_feature.ssl.period].price)}}},[_vm._v(_vm._s(ssl.title)+\" \"),_c('span',{staticClass:\"float-right d-none d-lg-block\"},[_vm._v(_vm._s(_vm._f(\"formatPrice\")(ssl.pricing.recurrent[_vm.additional_feature.ssl.period].price))+\"/Tahun\")])])}),0):_vm._e()]):(_vm.additional_feature.ssl.price > 0)?_c('p',{staticClass:\"additional-feature__addon-price\"},[_vm._v(\"\\n                                        Rp \"),_c('span',[_vm._v(_vm._s(_vm._f(\"formatPrice\")(_vm.additional_feature.ssl.price)))]),_vm._v(\"/tahun\\n                                    \")]):_c('p',{staticClass:\"additional-feature__addon-price\"},[_c('span',[_vm._v(\"GRATIS\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5 col-sm-12\"},[_c('button',{staticClass:\"button-default button-white-orange additional-feature__addon-button gtmAddon mt-5\",class:{'select--disabled': _vm.additional_feature.ssl.selected == true },attrs:{\"data-addon\":\"Keamanan SSL Certificate (HTTPS)\"},on:{\"click\":[function($event){return _vm.addRemoveSSLToCart($event.target)},function($event){$event.preventDefault();_vm.is_loading == true}]}},[_vm._v(\"\\n                                        Tambah ke Cart\\n                                    \")])])])])])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.tmp_domain.action == 'register' && _vm.flow != 'orderdomain' && _vm.inArray(_vm.tmp_domain.register_tld, _vm.additional_feature.domainprivacy.valid_domain))?_c('div',{staticClass:\"d-none invisible\"},[_c('hr'),_vm._v(\" \"),_c('div',{staticClass:\"row mt-5 mb-5\"},[_c('div',{staticClass:\"col-lg-2 d-none d-lg-block\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/Proteksi-whois.svg',\"alt\":\"Perlindungan Privasi WHOIS\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_vm._m(2),_vm._v(\" \"),_c('div',{staticClass:\"col-4 col-lg-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{'additional-feature__addon-cart--selected': _vm.additional_feature.domainprivacy.selected == true },attrs:{\"data-addon\":\"Perlindungan Privasi WHOIS\"},on:{\"click\":_vm.addRemovePrivacyProtectionToCart}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.additional_feature.domainprivacy.selected),expression:\"additional_feature.domainprivacy.selected\"}],attrs:{\"type\":\"hidden\",\"name\":\"privacy_protection\",\"value\":\"1\"},domProps:{\"value\":(_vm.additional_feature.domainprivacy.selected)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.additional_feature.domainprivacy, \"selected\", $event.target.value)}}})])])])])])]):_vm._e()]):_c('div',[(this.plan_type !== 'cyberpanel' && this.plan_type !== 'cpanel')?_c('div',{staticClass:\"row mb-5\"},[_c('div',{staticClass:\"d-none d-lg-block col-lg-2\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/additional-cloud-vps.png',\"alt\":\"Control Panel CLoud VPS\",\"loading\":\"lazy\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Control Panel Cloud VPS\")]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_c('div',{staticClass:\"col-10\"},[_c('div',{ref:\"select-plan\",staticClass:\"additional-feature__select\",class:{\n                                    'additional-feature__select--show': _vm.show_addons,\n                                    'select--disabled': _vm.additional_feature.vps.selected,\n                                },on:{\"click\":function($event){_vm.show_addons = !_vm.show_addons}}},[_c('p',{staticClass:\"additional-feature__select-title\"},[_c('strong',[_vm._v(\"\\n                                        \"+_vm._s(_vm.additional_feature.vps.title)+\"\\n                                        \"),(_vm.additional_feature.vps.price)?_c('span',{staticClass:\"float-right pr-lg-5 d-none d-lg-block\"},[_vm._v(\"\\n                                            \"+_vm._s(_vm.pricePerPeriod(_vm.additional_feature.vps.price, _vm.additional_feature.vps.period))+\"\\n                                        \")]):_vm._e()])])]),_vm._v(\" \"),(_vm.show_addons && !_vm.additional_feature.vps.selected)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({ exclude: ['select-plan'], handler: 'onClose' }),expression:\"{ exclude: ['select-plan'], handler: 'onClose' }\"}],staticClass:\"additional-feature__vps-options\"},[_c('li',{on:{\"click\":_vm.resetVpsPlan}},[_c('strong',[_vm._v(\"Tanpa Control Panel (Saya Install Sendiri)\")])]),_vm._v(\" \"),_vm._l((_vm.vps_addons),function(addon){return _c('li',{key:addon.id,staticClass:\"text-capitalize\",on:{\"click\":function($event){_vm.chooseVpsPlan(\n                                addon.id,\n                                addon.title,\n                                _vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.vps.period])\n                                )}}},[_c('strong',[_vm._v(\"\\n                                    \"+_vm._s(addon.title)+\"\\n                                    \"),_c('span',{staticClass:\"float-right d-none d-lg-block\",staticStyle:{\"font-size\":\"1.4rem\"}},[_vm._v(\"\\n                                    \"+_vm._s(_vm.pricePerPeriod(_vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.vps.period]), _vm.additional_feature.vps.period))+\"\\n                                    \")])])])})],2):_vm._e(),_vm._v(\" \"),(_vm.additional_feature.vps.product_id > 0)?_c('div',{staticClass:\"mt-4 additional-feature__addon\"},[_vm._v(\"\\n                            Termasuk instalasi otomatis\\n                            \"),(_vm.additional_feature.vps.product_id != 0)?_c('span',[_vm._v(\"control panel &\")]):_vm._e(),_vm._v(\"\\n                            sistem operasi\\n                            \"),_c('i',{staticClass:\"fa fa-question-circle float-right\",attrs:{\"aria-hidden\":\"true\"},on:{\"mouseover\":function($event){_vm.additional_feature.tooltip_message.show = true},\"mouseleave\":function($event){_vm.additional_feature.tooltip_message.show = false}}}),_vm._v(\" \"),(_vm.additional_feature.tooltip_message.show)?_c('div',{staticClass:\"additional-feature__addon-ribbon\"},[_vm._v(\"\\n                                \"+_vm._s(_vm.getTooltipsMessage)+\"\\n                            \")]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{'additional-feature__addon-cart--selected': (_vm.additional_feature.vps.selected || _vm.additional_feature.vps.product_id == 0) },attrs:{\"data-addon\":\"Control Panel Cloud VPS\",\"data-toggle\":_vm.upgradePopupShow ? 'modal' : false,\"data-target\":_vm.upgradePopupShow ? '#upgradeConfirm' : false},on:{\"click\":_vm.addVpsAddon}})])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row mb-5\"},[_c('div',{staticClass:\"d-none d-lg-block col-lg-2\"},[_c('img',{attrs:{\"src\":'/assets/images/orderflow/vps-daily-backup.png',\"alt\":\"Backup Cloud VPS\",\"loading\":\"lazy\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-lg-10\"},[(_vm.plan_type === 'cpanel')?_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Backup VPS cPanel\")]):_c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"Backup Cloud VPS\")]),_vm._v(\" \"),_c('div',{staticClass:\"row align-items-start\"},[_c('div',{staticClass:\"col-10\"},[_c('div',{ref:\"select-plan\",staticClass:\"additional-feature__select\",class:{\n                                'additional-feature__select--show': _vm.show_daily_backup,\n                                'select--disabled': _vm.additional_feature.daily_backup_vps.selected,\n                                },on:{\"click\":function($event){_vm.show_daily_backup = !_vm.show_daily_backup}}},[_c('p',{staticClass:\"additional-feature__select-title\"},[_c('strong',[_vm._v(\"\\n                                    \"+_vm._s(_vm.additional_feature.daily_backup_vps.title)+\"\\n                                    \"),(_vm.additional_feature.daily_backup_vps.price)?_c('span',{staticClass:\"float-right pr-lg-4 d-none d-lg-block\"},[_vm._v(\"\\n                                    \"+_vm._s(_vm.pricePerPeriod(_vm.additional_feature.daily_backup_vps.price, _vm.additional_feature.daily_backup_vps.period))+\"\\n                                    \")]):_vm._e()])])]),_vm._v(\" \"),(_vm.show_daily_backup && !_vm.additional_feature.daily_backup_vps.selected)?_c('ul',{directives:[{name:\"closable\",rawName:\"v-closable\",value:({ exclude: ['select-plan'], handler: 'onClose' }),expression:\"{ exclude: ['select-plan'], handler: 'onClose' }\"}],staticClass:\"additional-feature__vps-options\"},[_c('li',{on:{\"click\":_vm.resetDailyBackupPlan}},[(_vm.plan_type === 'cpanel')?_c('strong',[_vm._v(\"Tanpa Backup VPS cPanel\")]):_c('strong',[_vm._v(\"Tanpa Backup Cloud VPS\")])]),_vm._v(\" \"),_vm._l((_vm.daily_backup_addons),function(addon){return _c('li',{key:addon.id,staticClass:\"text-capitalize\",on:{\"click\":function($event){_vm.chooseDailyBackupVpsPlan(\n                                    addon.id,\n                                    addon.title,\n                                    _vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.daily_backup_vps.period])\n                                    )}}},[_c('strong',[_vm._v(\"\\n                                        \"+_vm._s(addon.title)+\"\\n                                        \"),_c('span',{staticClass:\"float-right d-none d-lg-block\",staticStyle:{\"font-size\":\"1.4rem\"}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.pricePerPeriod(\n                                            _vm.totalAfterDiscount(addon.pricing.recurrent[_vm.additional_feature.daily_backup_vps.period]),\n                                            _vm.additional_feature.daily_backup_vps.period\n                                            ))+\"\\n                                        \")])])])})],2):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"additional-feature__addon-cart gtmAddon\",class:{\n                                'additional-feature__addon-cart--selected':\n                                    _vm.additional_feature.daily_backup_vps.selected ||\n                                    _vm.additional_feature.daily_backup_vps.product_id == 0,\n                                },attrs:{\"data-addon\":\"Backup Cloud VPS\"},on:{\"click\":_vm.addDailyBackupVpsAddon}})])])])])])]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[(_vm.toastPopupShow)?_c('div',{staticClass:\"popup-upgrade__toast\"},[_c('div',{staticClass:\"popup-upgrade__toast-left\"},[_c('img',{attrs:{\"src\":\"/assets/icons/icon-success-popup.svg\",\"id\":\"toast-success-icon\",\"alt\":\"icon-success\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"popup-upgrade__toast-right\",attrs:{\"id\":\"toast-text\"}},[_vm._v(_vm._s(this.toast.message))])]):_vm._e()])],1)}\nvar AdditionalFeaturevue_type_template_id_02df6985_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{staticClass:\"orderflow-domain__title\"},[_vm._v(\"4. Rekomendasi Fitur Pendukung \"),_c('span',{staticClass:\"badge-orange\"},[_vm._v(\"Opsional\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"additional-feature__addon-title\"},[_vm._v(\"\\n                            Perlindungan Privasi WHOIS\\n                            \"),_c('span',{staticClass:\"additional-feature__addon-title--sub\"},[_vm._v(\"Rp 45rb/domain per tahun\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-8 col-lg-10\"},[_c('p',{staticClass:\"additional-feature__addon-description\"},[_vm._v(\"Cegah pembajakan dan spam ke domain\\n                                    Anda dengan melindungi nama, alamat, dan identitas Anda\")])])}]\n\n\n;// CONCATENATED MODULE: ./resources/js/components/v2/AdditionalFeature.vue?vue&type=template&id=02df6985&scoped=true&\n\n;// CONCATENATED MODULE: ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/v2/AdditionalFeature.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ const v2_AdditionalFeaturevue_type_script_lang_js_ = ({\n  name: \"NewAdditionalFeature\",\n  props: [\"ssl_plans\", \"flow\", \"plan_type\", \"cart\", \"is_loading\"],\n\n  data() {\n    return {\n      period: CommonVar.period,\n      tmp_domain: [],\n      upgrade_popup: {\n        show: false,\n        status: false\n      },\n      toast: {\n        show: false,\n        message: ''\n      },\n      additional_feature: {\n        tooltip_message: {\n          show: false,\n          message: 'sistem operasi Centos 7 siap digunakan ketika akun VPS Anda aktif'\n        },\n        vps: {\n          selected: false,\n          product_id: 0,\n          period: \"1Y\",\n          cart_product_id: \"\",\n          title: \"Tanpa Control Panel (Saya Install Sendiri)\",\n          price: 0\n        },\n        daily_backup_vps: {\n          selected: false,\n          product_id: 0,\n          period: \"1Y\",\n          cart_product_id: \"\",\n          title: \"Tanpa Backup Cloud VPS\",\n          price: 0\n        },\n        wordpress: {\n          selected: false,\n          product_id: 69,\n          period: \"1Y\",\n          cart_product_id: \"\"\n        },\n        install_wp_accelerator: {\n          selected: false\n        },\n        ssl: {\n          selected: false,\n          product_id: \"\",\n          period: \"1Y\",\n          cart_product_id: \"\",\n          title: \"\",\n          price: \"\"\n        },\n        domainprivacy: {\n          selected: false,\n          product_id: 33,\n          period: \"1Y\",\n          cart_product_id: \"\",\n          valid_domain: [\".com\", \".net\", \".org\", \".info\"]\n        }\n      },\n      plan_id: false,\n      show_ssl_plan: false,\n      daily_backup_addons: [],\n      vps_addons: [],\n      show_addons: false,\n      show_daily_backup: false,\n      button_loading: {\n        target: null,\n        defaultInnerHtml: ''\n      }\n    };\n  },\n\n  filters: {\n    formatPrice(value) {\n      return js_CommonMethods/* default.formatPrice */.Z.formatPrice(value);\n    }\n\n  },\n  computed: {\n    getTooltipsMessage() {\n      let message = '';\n\n      if (this.additional_feature.vps.product_id != 0) {\n        message += this.additional_feature.vps.title;\n        message += ' dan ';\n      }\n\n      message += this.additional_feature.tooltip_message.message;\n      return message;\n    },\n\n    upgradePopupShow() {\n      return this.upgrade_popup.show;\n    },\n\n    toastPopupShow() {\n      return this.toast.show;\n    }\n\n  },\n  methods: {\n    chooseSslPlan(id, title, price) {\n      this.additional_feature.ssl.product_id = id;\n      this.additional_feature.ssl.title = title;\n      this.additional_feature.ssl.price = price;\n      this.show_ssl_plan = false;\n    },\n\n    resetVpsPlan() {\n      this.additional_feature.vps.product_id = 0;\n      this.additional_feature.vps.title = 'Tanpa Control Panel (Saya Install Sendiri)';\n      this.additional_feature.vps.price = 0;\n      this.additional_feature.vps.selected = false;\n      this.show_addons = false;\n      this.emitNextBtn('reset');\n      this.upgrade_popup.show = false;\n      sessionStorage.setItem('upgrade_popup_status', 'disabled');\n    },\n\n    resetDailyBackupPlan() {\n      this.additional_feature.daily_backup_vps.product_id = 0;\n      this.additional_feature.daily_backup_vps.title = 'Tanpa Backup Cloud VPS';\n      this.additional_feature.daily_backup_vps.price = 0;\n      this.additional_feature.daily_backup_vps.selected = false;\n      this.show_daily_backup = false;\n      this.emitNextBtn('reset');\n    },\n\n    chooseVpsPlan(id, title, price) {\n      this.additional_feature.vps.product_id = id;\n      this.additional_feature.vps.title = title;\n      this.additional_feature.vps.price = price;\n      this.show_addons = false;\n      let tmp_cart = JSON.parse(sessionStorage.getItem('tmp_cart'));\n\n      if (this.additional_feature.vps.title.toLowerCase().indexOf('cpanel') !== -1 && tmp_cart.id == 2) {\n        this.upgrade_popup.show = true;\n      }\n\n      this.emitNextBtn('choose');\n    },\n\n    chooseDailyBackupVpsPlan(id, title, price) {\n      this.additional_feature.daily_backup_vps.product_id = id;\n      this.additional_feature.daily_backup_vps.title = title;\n      this.additional_feature.daily_backup_vps.price = price;\n      this.show_daily_backup = false;\n      this.emitNextBtn('choose');\n    },\n\n    addVpsAddon() {\n      if (!this.upgrade_popup.show) {\n        if (!this.additional_feature.vps.selected) {\n          bus.$emit('add-addon', this.additional_feature.vps.product_id);\n          bus.$emit('set-addon-template', this.additional_feature.vps.title);\n        }\n\n        if (this.additional_feature.vps.product_id != 0) {\n          this.additional_feature.vps.selected = true;\n        }\n\n        this.emitNextBtn('add', this.additional_feature.daily_backup_vps);\n      }\n    },\n\n    addDailyBackupVpsAddon() {\n      let product_id = this.additional_feature.daily_backup_vps.product_id;\n\n      if (!this.additional_feature.daily_backup_vps.selected) {\n        bus.$emit('add-addon', product_id);\n      }\n\n      if (product_id != 0) {\n        this.additional_feature.daily_backup_vps.selected = true;\n      }\n\n      this.emitNextBtn('add', this.additional_feature.vps);\n    },\n\n    emitNextBtn(type, addons = null) {\n      let status = false;\n\n      if (type == 'reset') {\n        status = false;\n      } else if (type == 'choose') {\n        status = true;\n      } else if (type == 'add' && addons != null) {\n        status = !(addons.selected || addons.product_id == 0);\n      }\n\n      bus.$emit('set-next-btn', status);\n    },\n\n    getTmpVpsAddons() {\n      const vps_plan = JSON.parse(sessionStorage.getItem('vps_plan'));\n      this.additional_feature.vps.period = vps_plan.period;\n      this.additional_feature.daily_backup_vps.period = vps_plan.period;\n      this.plan_id = vps_plan.product_id;\n      this.daily_backup_addons = this.filterAddon(vps_plan.plan.addons, false);\n      this.vps_addons = this.filterAddon(vps_plan.plan.addons);\n\n      if (sessionStorage.getItem('tmp_additional')) {\n        const addon = JSON.parse(sessionStorage.getItem('tmp_additional'));\n\n        if (!addon && !addon.items.length) {\n          return;\n        }\n\n        addon.items.map(item => {\n          if (item.title.toLowerCase().indexOf('backups') == -1) {\n            this.chooseVpsPlan(item.id, item.title, item.total);\n            this.additional_feature.vps.selected = true;\n          } else {\n            this.chooseDailyBackupVpsPlan(item.id, item.title, item.total);\n            this.additional_feature.daily_backup_vps.selected = true;\n          }\n        });\n      }\n\n      if (!sessionStorage.getItem('upgrade_popup_status')) {\n        sessionStorage.setItem('upgrade_popup_status', 'disabled');\n      }\n    },\n\n    filterAddon(addons, show_daily_backup = true) {\n      return addons.filter(addon => {\n        if (show_daily_backup) {\n          return addon.title.toLowerCase().indexOf(\"backups\") == -1;\n        }\n\n        return addon.title.toLowerCase().indexOf(\"backups\") != -1;\n      });\n    },\n\n    setPlanUpgrade() {\n      this.additional_feature.vps.selected = true;\n      this.upgrade_popup.show = false;\n      sessionStorage.setItem('upgrade_popup_status', 'enabled');\n      this.setBackupAddons();\n    },\n\n    resetPlanUpgrade() {\n      const upgrade_status = sessionStorage.getItem('upgrade_popup_status');\n\n      if (upgrade_status === 'enabled') {\n        bus.$emit('upgrade-nano', 'reset');\n        sessionStorage.setItem('upgrade_popup_status', 'disabled');\n      }\n    },\n\n    setBackupAddons() {\n      this.resetDailyBackupPlan();\n      let tmp_addons = JSON.parse(sessionStorage.getItem('tmp_additional'));\n      let removedAddon = tmp_addons.items.filter(el => el.title.includes('Backup'));\n      const vps_plan = JSON.parse(sessionStorage.getItem('vps_plan'));\n      this.daily_backup_addons = this.filterAddon(vps_plan.plan.addons, false);\n\n      if (removedAddon.length) {\n        bus.$emit('remove-from-cart', 'tmp_additional', removedAddon[0].id);\n      }\n    },\n\n    showToastPopup(message) {\n      this.toast.show = true;\n      this.toast.message = message;\n      setTimeout(() => {\n        this.toast.show = false;\n        this.toast.message = '';\n      }, 4000);\n    },\n\n    totalAfterDiscount(plan_period) {\n      return plan_period.discount_enabled == 1 ? plan_period.discount_price : plan_period.price;\n    },\n\n    /* ADD ADDITIONAL FEATURE TO CART */\n    autoInstallWebsite(triggeredButton) {\n      if (triggeredButton) {\n        this.button_loading.target = triggeredButton;\n        this.button_loading.defaultInnerHtml = this.button_loading.target.innerHTML;\n        this.button_loading.target.innerHTML = `<em class=\"fas fa-sync fa-spin mr-3\"></em> Tambah ke Cart`;\n      }\n\n      bus.$emit(\"loading-state\", true);\n      this.additional_feature.wordpress.selected = !this.additional_feature.wordpress.selected;\n      axios.post(\"/api/guest/add_remove_auto_install_website\", {\n        is_add: this.additional_feature.wordpress.selected\n      }).then(res => {\n        if (this.additional_feature.wordpress.selected) {\n          let wordpress = {\n            id: '',\n            type: 'wordpress',\n            title: '',\n            total: 0,\n            price: 0\n          };\n          sessionStorage.setItem('additional_feature_wordpress', JSON.stringify(wordpress));\n        } else {\n          sessionStorage.removeItem('additional_feature_wordpress');\n        }\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        bus.$emit(\"loading-state\", false);\n        this.installWpAccelerator();\n      });\n    },\n\n    installWpAccelerator() {\n      bus.$emit(\"loading-state\", true);\n      this.additional_feature.install_wp_accelerator.selected = !this.additional_feature.install_wp_accelerator.selected;\n      axios.post(\"/api/guest/add_remove_install_wp_accelerator\", {\n        is_add: this.additional_feature.install_wp_accelerator.selected\n      }).then(res => {\n        bus.$emit(\"refresh-cart\");\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        bus.$emit(\"loading-state\", false);\n        this.resetLoadingButton();\n      });\n    },\n\n    addRemoveSSLToCart(triggeredButton) {\n      if (triggeredButton) {\n        this.button_loading.target = triggeredButton;\n        this.button_loading.defaultInnerHtml = this.button_loading.target.innerHTML;\n        this.button_loading.target.innerHTML = `<em class=\"fas fa-sync fa-spin mr-3\"></em> Tambah ke Cart`;\n      }\n\n      if (this.additional_feature.ssl.product_id) {\n        this.additional_feature.ssl.selected = !this.additional_feature.ssl.selected;\n\n        if (this.additional_feature.ssl.selected) {\n          this.addAdditionalFeatureToCart(\"ssl\", this.additional_feature.ssl.product_id, this.additional_feature.ssl.period);\n        } else {\n          this.removeFromCart(this.additional_feature.ssl.cart_product_id, \"ssl\");\n        }\n      } else {\n        bus.$emit(\"show-notification-message\", \"Silakan pilih SSL\", true);\n      }\n    },\n\n    initSslPlan() {\n      this.ssl_plans.forEach(item => {\n        if (item.id == 76) {\n          this.additional_feature.ssl.product_id = item.id;\n          this.additional_feature.ssl.title = item.title;\n          this.additional_feature.ssl.price = item.pricing.recurrent[this.additional_feature.ssl.period].price;\n        }\n      });\n    },\n\n    addRemovePrivacyProtectionToCart() {\n      this.additional_feature.domainprivacy.selected = !this.additional_feature.domainprivacy.selected;\n\n      if (this.additional_feature.domainprivacy.selected) {\n        this.addAdditionalFeatureToCart(\"domainprivacy\", this.additional_feature.domainprivacy.product_id, this.additional_feature.domainprivacy.period);\n      } else {\n        this.removeFromCart(this.additional_feature.domainprivacy.cart_product_id, \"domainprivacy\");\n      }\n    },\n\n    addAdditionalFeatureToCart(type, product_id, period) {\n      bus.$emit(\"loading-state\", true);\n      axios.post(\"/api/guest/add_additional_feature_to_cart\", {\n        type: type,\n        product_id: product_id,\n        period: period\n      }).then(res => {\n        let result = res.data.result;\n        this.additional_feature[result.type].cart_product_id = result.id;\n        sessionStorage.setItem('additional_feature_' + result.type, JSON.stringify(result));\n        bus.$emit(\"refresh-cart\");\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        bus.$emit(\"loading-state\", false);\n        this.resetLoadingButton();\n      });\n    },\n\n    removeFromCart(cart_product_id, type) {\n      bus.$emit(\"loading-state\", true);\n      axios.post(\"/api/guest/remove_from_cart\", {\n        id: cart_product_id\n      }).then(res => {\n        bus.$emit(\"refresh-cart\");\n\n        if (type == 'wordpress' && this.additional_feature.wordpress.selected) {\n          this.autoInstallWebsite();\n        } else {\n          sessionStorage.removeItem('additional_feature_' + type);\n          this.additional_feature[type].selected = false;\n        }\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        bus.$emit(\"loading-state\", false);\n        this.resetLoadingButton();\n      });\n    },\n\n    sslPrice() {\n      this.ssl_plans.forEach(item => {\n        this.additional_feature.ssl.price = price;\n      });\n    },\n\n    sslPriceStartingFrom() {\n      let price;\n      this.ssl_plans.forEach(item => {\n        price = (item.price_starting_from - item.price_starting_from % 1000) / 1000;\n      });\n      return price;\n    },\n\n    getTmpDomain() {\n      if (sessionStorage.getItem('tmp_cart_domain')) {\n        this.tmp_domain = JSON.parse(sessionStorage.getItem('tmp_cart_domain'));\n      }\n    },\n\n    inArray(needle, haystack) {\n      return js_CommonMethods/* default.inArray */.Z.inArray(needle, haystack);\n    },\n\n    isWordpressHosting() {\n      if (sessionStorage.getItem('wordpress_hosting') || sessionStorage.getItem('managed_wordpress')) {\n        return true;\n      }\n\n      return false;\n    },\n\n    pricePerPeriod(price, period) {\n      const symbol = period.replace(/[0-9]/g, '');\n      const text_period = this.period[period].text.replace(/[ 0-9]/g, '');\n      let num_of_period = this.period[period].num_of_month;\n\n      if (symbol == 'Y') {\n        num_of_period = num_of_period / 12;\n      }\n\n      return this.$options.filters.formatPrice(Math.round(Number(price) / num_of_period)) + '/' + text_period;\n    },\n\n    checkFreeSslInCart() {\n      let status = false;\n      this.cart.items.forEach(item => {\n        if (item.product_id == 76 && item.free_ssl_hosting === true) {\n          status = true;\n        }\n      });\n      return status;\n    },\n\n    resetLoadingButton() {\n      if (this.button_loading.target) {\n        this.button_loading.target.innerHTML = this.button_loading.defaultInnerHtml;\n        this.button_loading.target = null;\n        this.button_loading.defaultInnerHtml = '';\n      }\n    }\n\n  },\n  mounted: function () {\n    this.getTmpDomain();\n    setTimeout(() => {\n      bus.$on(\"remove-item\", item => {\n        if (item.type && this.additional_feature[item.type] && this.additional_feature[item.type].cart_product_id === item.id) {\n          this.removeFromCart(item.id, item.type);\n        }\n      });\n      bus.$on(\"set-upgrade\", () => {\n        this.showToastPopup('Paket berhasil diubah menjadi Paket Cloud VPS Mikro');\n        this.setPlanUpgrade();\n      });\n      bus.$on(\"reset-plan-upgrade\", () => {\n        this.resetPlanUpgrade();\n      });\n      bus.$on(\"reset-selected-addon\", () => {\n        this.resetVpsPlan();\n      });\n    }, 100);\n  },\n\n  created() {\n    if (this.flow !== 'vps') {\n      this.initSslPlan();\n    } else {\n      this.getTmpVpsAddons();\n    }\n  }\n\n});\n;// CONCATENATED MODULE: ./resources/js/components/v2/AdditionalFeature.vue?vue&type=script&lang=js&\n /* harmony default export */ const components_v2_AdditionalFeaturevue_type_script_lang_js_ = (v2_AdditionalFeaturevue_type_script_lang_js_); \n;// CONCATENATED MODULE: ./resources/js/components/v2/AdditionalFeature.vue\n\n\n\n\n\n/* normalize component */\n;\nvar v2_AdditionalFeature_component = normalizeComponent(\n  components_v2_AdditionalFeaturevue_type_script_lang_js_,\n  AdditionalFeaturevue_type_template_id_02df6985_scoped_true_render,\n  AdditionalFeaturevue_type_template_id_02df6985_scoped_true_staticRenderFns,\n  false,\n  null,\n  \"02df6985\",\n  null\n  \n)\n\n/* harmony default export */ const v2_AdditionalFeature = (v2_AdditionalFeature_component.exports);\n;// CONCATENATED MODULE: ./resources/js/main.js\n\n\n\n__webpack_require__.e(/* import() */ 484).then(__webpack_require__.bind(__webpack_require__, \"./resources/js/vue-filter/filter.js\"));\n__webpack_require__.e(/* import() */ 550).then(__webpack_require__.bind(__webpack_require__, \"./resources/js/vendor-orderflow.js\"));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Orderflow V2 Components\n\n\n\n\n\n\nvue_esm/* default.component */.Z.component('v-select', (vue_select_default())); // Enable this for development only\n// Vue.config.devtools = true\n\nwindow.axios = (axios_default());\nwindow.Vue = vue_esm/* default */.Z;\nvue_esm/* default.options.delimiters */.Z.options.delimiters = ['${', '}'];\nvue_esm/* default.component */.Z.component('foobar', FooBar);\nvue_esm/* default.component */.Z.component('section-summary', SectionSummary);\nvue_esm/* default.component */.Z.component('hosting-plan', HostingPlan);\nvue_esm/* default.component */.Z.component('payment-method', PaymentMethod);\nvue_esm/* default.component */.Z.component('client-information', ClientInformation);\nvue_esm/* default.component */.Z.component('section-cart', SectionCart);\nvue_esm/* default.component */.Z.component('additional-feature', AdditionalFeature);\nvue_esm/* default.component */.Z.component('orderflow-domain-verisign', OrderFlowDomainVerisign);\nvue_esm/* default.component */.Z.component('custom-notification', CustomNotification);\nvue_esm/* default.component */.Z.component('new-hosting-plan', OrderFlowHosting_HostingPlan);\nvue_esm/* default.component */.Z.component('new-payment-method', NewPaymentMethod);\nvue_esm/* default.component */.Z.component('new-payment-method-v2', NewPaymentMethodV2);\nvue_esm/* default.component */.Z.component('new-client-information', NewClientInformation);\nvue_esm/* default.component */.Z.component('new-additional-feature', NewAdditionalFeature);\nvue_esm/* default.component */.Z.component('domain-suggestion', DomainSuggestion);\nvue_esm/* default.component */.Z.component('thank-you', ThankYou);\nvue_esm/* default.component */.Z.component('summary-cart', SummaryCart);\nvue_esm/* default.component */.Z.component('new-section-summary', NewSectionSummary);\nvue_esm/* default.component */.Z.component('domain-hosting-plan', OrderFlowDomain_HostingPlan);\nvue_esm/* default.component */.Z.component('new-website-plan', WebsitePlan);\nvue_esm/* default.component */.Z.component('new-website-diy-list', WebsiteDiyList);\nvue_esm/* default.component */.Z.component('website-diy-list-second', WebsiteDiyListSecond);\nvue_esm/* default.component */.Z.component('website-diy-list-third', WebsiteDiyListThird);\nvue_esm/* default.component */.Z.component('website-diy-list-fourth', WebsiteDiyListFourth);\nvue_esm/* default.component */.Z.component('new-preview-diy-modal', PreviewDiyModal);\nvue_esm/* default.component */.Z.component('preview-diy-modal-second', PreviewDiyModalSecond);\nvue_esm/* default.component */.Z.component('preview-diy-modal-third', PreviewDiyModalThird);\nvue_esm/* default.component */.Z.component('preview-diy-demo', PreviewDiyDemo);\nvue_esm/* default.component */.Z.component('new-preview-diy-navigation', PreviewDiyNavigation);\nvue_esm/* default.component */.Z.component('new-order-diy-modal', OrderDiyModal);\nvue_esm/* default.component */.Z.component('order-diy-modal-second', OrderDiyModalSecond);\nvue_esm/* default.component */.Z.component('new-filter-diy-list', FilterDiyList);\nvue_esm/* default.component */.Z.component('filter-diy-list-second', FilterDiyListSecond);\nvue_esm/* default.component */.Z.component('filter-diy-list-tag-group', FilterDiyListTagGroup);\nvue_esm/* default.component */.Z.component('new-pagination-diy-list', PaginationDiyList);\nvue_esm/* default.component */.Z.component('pagination-diy-list-second', PaginationDiyListSecond);\nvue_esm/* default.component */.Z.component('new-order-difm-modal', OrderDifmModal);\nvue_esm/* default.component */.Z.component('summary-cart-v2', SummaryCartV2);\nvue_esm/* default.component */.Z.component('modal-complete-user-profile', ModalCompleteUserProfile);\nvue_esm/* default.component */.Z.component('modal-sosmed-2fa', ModalSosmed2Fa);\nvue_esm/* default.component */.Z.component('vps-plan', VpsPlan);\nvue_esm/* default.component */.Z.component('vps-kvm-plan', VpsKvmPlan);\nvue_esm/* default.component */.Z.component('select-images', SelectImages);\nvue_esm/* default.component */.Z.component('modal-select-os', ModalSelectOs);\nvue_esm/* default.component */.Z.component('modal-upgrade-vps-nano', ModalUpgradeVpsNano);\nvue_esm/* default.component */.Z.component('item-cart', ItemCart);\nvue_esm/* default.component */.Z.component('question-box', QuestionBox);\nvue_esm/* default.component */.Z.component('jasa-website-section-summary', OrderFlowJasaWebsite_SectionSummary);\nvue_esm/* default.component */.Z.component('rafle-vps-flow', VpsFlow);\nvue_esm/* default.component */.Z.component('select-region', SelectRegion);\nvue_esm/* default.component */.Z.component('username-box', UsernameBox);\nvue_esm/* default.component */.Z.component('toast', Toast); // Orderflow V2 Components\n\nvue_esm/* default.component */.Z.component('hosting-plan-v2', v2_HostingPlan);\nvue_esm/* default.component */.Z.component('domain-suggestion-v2', v2_DomainSuggestion);\nvue_esm/* default.component */.Z.component('domain-suggestion-v3', DomainSuggestionV3);\nvue_esm/* default.component */.Z.component('section-summary-v2', v2_SectionSummary);\nvue_esm/* default.component */.Z.component('new-additional-feature-v2', v2_AdditionalFeature);\nwindow.bus = new vue_esm/* default */.Z({\n  el: '#vue-wrapper',\n  mounted: function () {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/main.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/CustomNotification.vue?vue&type=style&index=0&id=dbf5f200&scoped=true&lang=css&":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".custom-notif[data-v-dbf5f200]{display:inline-block;position:fixed;top:50%;left:50%;transform:translate(-50%, -50%);max-width:600px;height:auto;padding:20px;background:#fff;box-shadow:0 5px 40px rgba(0,0,0,.5);z-index:5;font-family:NunitoSans-Regular;color:#1a242f;border-radius:5px}.custom-notif p[data-v-dbf5f200]{margin:0}.custom-notif .close-btn[data-v-dbf5f200]{position:absolute;top:-13px;right:-12px;font-size:18px;font-weight:900;color:#1a242f;background:#fff;border-radius:50%;box-shadow:0px 0px 10px rgba(0,0,0,.5);width:25px;height:25px;text-align:center;padding:2px}.custom-notif .close-btn[data-v-dbf5f200]:hover{text-decoration:none;background-color:#ccc}.show-custom-notif[data-v-dbf5f200]{visibility:visible !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/components/CustomNotification.vue\"],\"names\":[],\"mappings\":\"AAuBA,+BACI,oBAAA,CACA,cAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CACA,eAAA,CACA,WAAA,CACA,YAAA,CACA,eAAA,CACA,oCAAA,CACA,SAAA,CACA,8BAAA,CACA,aAAA,CACA,iBAAA,CAGJ,iCACI,QAAA,CAGJ,0CACI,iBAAA,CACA,SAAA,CACA,WAAA,CACA,cAAA,CACA,eAAA,CACA,aAAA,CACA,eAAA,CACA,iBAAA,CACA,sCAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,WAAA,CAGJ,gDACI,oBAAA,CACA,qBAAA,CAGJ,oCACI,6BAAA\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.custom-notif {\\n    display: inline-block;\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    max-width: 600px;\\n    height: auto;\\n    padding: 20px;\\n    background: #ffffff;\\n    box-shadow: 0 5px 40px rgba(0,0,0,.5);\\n    z-index: 5;\\n    font-family: NunitoSans-Regular;\\n    color: #1a242f;\\n    border-radius: 5px;\\n}\\n\\n.custom-notif p {\\n    margin: 0;\\n}\\n\\n.custom-notif .close-btn {\\n    position: absolute;\\n    top: -13px;\\n    right: -12px;\\n    font-size: 18px;\\n    font-weight: 900;\\n    color: #1a242f;\\n    background: #ffffff;\\n    border-radius: 50%;\\n    box-shadow: 0px 0px 10px rgba(0,0,0,.5);\\n    width: 25px;\\n    height: 25px;\\n    text-align: center;\\n    padding: 2px;\\n}\\n\\n.custom-notif .close-btn:hover {\\n    text-decoration: none;\\n    background-color: #cccccc;\\n}\\n\\n.show-custom-notif {\\n    visibility: visible !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/Y2xvbmVkUnVsZVNldC0yWzBdLnJ1bGVzWzBdLnVzZVsxXSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvQ3VzdG9tTm90aWZpY2F0aW9uLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWRiZjVmMjAwJnNjb3BlZD10cnVlJmxhbmc9Y3NzJi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9DdXN0b21Ob3RpZmljYXRpb24udnVlP2VjYTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuY3VzdG9tLW5vdGlmW2RhdGEtdi1kYmY1ZjIwMF17ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246Zml4ZWQ7dG9wOjUwJTtsZWZ0OjUwJTt0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsIC01MCUpO21heC13aWR0aDo2MDBweDtoZWlnaHQ6YXV0bztwYWRkaW5nOjIwcHg7YmFja2dyb3VuZDojZmZmO2JveC1zaGFkb3c6MCA1cHggNDBweCByZ2JhKDAsMCwwLC41KTt6LWluZGV4OjU7Zm9udC1mYW1pbHk6TnVuaXRvU2Fucy1SZWd1bGFyO2NvbG9yOiMxYTI0MmY7Ym9yZGVyLXJhZGl1czo1cHh9LmN1c3RvbS1ub3RpZiBwW2RhdGEtdi1kYmY1ZjIwMF17bWFyZ2luOjB9LmN1c3RvbS1ub3RpZiAuY2xvc2UtYnRuW2RhdGEtdi1kYmY1ZjIwMF17cG9zaXRpb246YWJzb2x1dGU7dG9wOi0xM3B4O3JpZ2h0Oi0xMnB4O2ZvbnQtc2l6ZToxOHB4O2ZvbnQtd2VpZ2h0OjkwMDtjb2xvcjojMWEyNDJmO2JhY2tncm91bmQ6I2ZmZjtib3JkZXItcmFkaXVzOjUwJTtib3gtc2hhZG93OjBweCAwcHggMTBweCByZ2JhKDAsMCwwLC41KTt3aWR0aDoyNXB4O2hlaWdodDoyNXB4O3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmc6MnB4fS5jdXN0b20tbm90aWYgLmNsb3NlLWJ0bltkYXRhLXYtZGJmNWYyMDBdOmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6I2NjY30uc2hvdy1jdXN0b20tbm90aWZbZGF0YS12LWRiZjVmMjAwXXt2aXNpYmlsaXR5OnZpc2libGUgIWltcG9ydGFudH1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9DdXN0b21Ob3RpZmljYXRpb24udnVlXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQXVCQSwrQkFDSSxvQkFBQSxDQUNBLGNBQUEsQ0FDQSxPQUFBLENBQ0EsUUFBQSxDQUNBLCtCQUFBLENBQ0EsZUFBQSxDQUNBLFdBQUEsQ0FDQSxZQUFBLENBQ0EsZUFBQSxDQUNBLG9DQUFBLENBQ0EsU0FBQSxDQUNBLDhCQUFBLENBQ0EsYUFBQSxDQUNBLGlCQUFBLENBR0osaUNBQ0ksUUFBQSxDQUdKLDBDQUNJLGlCQUFBLENBQ0EsU0FBQSxDQUNBLFdBQUEsQ0FDQSxjQUFBLENBQ0EsZUFBQSxDQUNBLGFBQUEsQ0FDQSxlQUFBLENBQ0EsaUJBQUEsQ0FDQSxzQ0FBQSxDQUNBLFVBQUEsQ0FDQSxXQUFBLENBQ0EsaUJBQUEsQ0FDQSxXQUFBLENBR0osZ0RBQ0ksb0JBQUEsQ0FDQSxxQkFBQSxDQUdKLG9DQUNJLDZCQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcbi5jdXN0b20tbm90aWYge1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgdG9wOiA1MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICAgIG1heC13aWR0aDogNjAwcHg7XFxuICAgIGhlaWdodDogYXV0bztcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gICAgYm94LXNoYWRvdzogMCA1cHggNDBweCByZ2JhKDAsMCwwLC41KTtcXG4gICAgei1pbmRleDogNTtcXG4gICAgZm9udC1mYW1pbHk6IE51bml0b1NhbnMtUmVndWxhcjtcXG4gICAgY29sb3I6ICMxYTI0MmY7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLmN1c3RvbS1ub3RpZiBwIHtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uY3VzdG9tLW5vdGlmIC5jbG9zZS1idG4ge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogLTEzcHg7XFxuICAgIHJpZ2h0OiAtMTJweDtcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBjb2xvcjogIzFhMjQyZjtcXG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggcmdiYSgwLDAsMCwuNSk7XFxuICAgIHdpZHRoOiAyNXB4O1xcbiAgICBoZWlnaHQ6IDI1cHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMnB4O1xcbn1cXG5cXG4uY3VzdG9tLW5vdGlmIC5jbG9zZS1idG46aG92ZXIge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XFxufVxcblxcbi5zaG93LWN1c3RvbS1ub3RpZiB7XFxuICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/CustomNotification.vue?vue&type=style&index=0&id=dbf5f200&scoped=true&lang=css&\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/FooBar.vue?vue&type=style&index=0&id=04c8d0b3&scoped=true&lang=css&":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".example h1[data-v-04c8d0b3]{color:red;font-size:24px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/components/FooBar.vue\"],\"names\":[],\"mappings\":\"AAaA,6BACI,SAAA,CACA,cAAA\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.example h1 {\\n    color: red;\\n    font-size: 24px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/Y2xvbmVkUnVsZVNldC0yWzBdLnJ1bGVzWzBdLnVzZVsxXSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvRm9vQmFyLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTA0YzhkMGIzJnNjb3BlZD10cnVlJmxhbmc9Y3NzJi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9Gb29CYXIudnVlPzc2NTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZXhhbXBsZSBoMVtkYXRhLXYtMDRjOGQwYjNde2NvbG9yOnJlZDtmb250LXNpemU6MjRweH1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9yZXNvdXJjZXMvanMvY29tcG9uZW50cy9Gb29CYXIudnVlXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQWFBLDZCQUNJLFNBQUEsQ0FDQSxjQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIlxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcblxcbi5leGFtcGxlIGgxIHtcXG4gICAgY29sb3I6IHJlZDtcXG4gICAgZm9udC1zaXplOiAyNHB4O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/FooBar.vue?vue&type=style&index=0&id=04c8d0b3&scoped=true&lang=css&\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=style&index=0&id=207cad02&scoped=true&lang=css&":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".custom-size[data-v-207cad02]{font-size:30px;font-weight:900;margin-bottom:50px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/components/OrderFlowWebsite/WebsitePlan.vue\"],\"names\":[],\"mappings\":\"AA0GA,8BACI,cAAA,CACA,eAAA,CACA,kBAAA\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.custom-size {\\n    font-size: 30px;\\n    font-weight: 900;\\n    margin-bottom: 50px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/Y2xvbmVkUnVsZVNldC0yWzBdLnJ1bGVzWzBdLnVzZVsxXSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvT3JkZXJGbG93V2Vic2l0ZS9XZWJzaXRlUGxhbi52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0yMDdjYWQwMiZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cGNrLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvT3JkZXJGbG93V2Vic2l0ZS9XZWJzaXRlUGxhbi52dWU/MDUxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5jdXN0b20tc2l6ZVtkYXRhLXYtMjA3Y2FkMDJde2ZvbnQtc2l6ZTozMHB4O2ZvbnQtd2VpZ2h0OjkwMDttYXJnaW4tYm90dG9tOjUwcHh9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vcmVzb3VyY2VzL2pzL2NvbXBvbmVudHMvT3JkZXJGbG93V2Vic2l0ZS9XZWJzaXRlUGxhbi52dWVcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBMEdBLDhCQUNJLGNBQUEsQ0FDQSxlQUFBLENBQ0Esa0JBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuLmN1c3RvbS1zaXplIHtcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcbiAgICBmb250LXdlaWdodDogOTAwO1xcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??clonedRuleSet-2[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/OrderFlowWebsite/WebsitePlan.vue?vue&type=style&index=0&id=207cad02&scoped=true&lang=css&\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/sourceMaps.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzP2IyMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertBySelector.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanM/ZGU2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertStyleElement.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3Bjay8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcz9kZGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleDomAPI.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwY2svLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleTagTransform.js\n");

/***/ }),

/***/ "./node_modules/vue-select/dist/vue-select.js":
/***/ (function(module) {

eval("!function(t,e){ true?module.exports=e():0}(\"undefined\"!=typeof self?self:this,(function(){return(()=>{var t={646:t=>{t.exports=function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}},713:t=>{t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},860:t=>{t.exports=function(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}},206:t=>{t.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}},319:(t,e,n)=>{var o=n(646),i=n(860),s=n(206);t.exports=function(t){return o(t)||i(t)||s()}},8:t=>{function e(n){return\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?t.exports=e=function(t){return typeof t}:t.exports=e=function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},e(n)}t.exports=e}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var s=e[o]={exports:{}};return t[o](s,s.exports,n),s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var o={};return(()=>{\"use strict\";n.r(o),n.d(o,{VueSelect:()=>m,default:()=>O,mixins:()=>_});var t=n(319),e=n.n(t),i=n(8),s=n.n(i),r=n(713),a=n.n(r);const l={props:{autoscroll:{type:Boolean,default:!0}},watch:{typeAheadPointer:function(){this.autoscroll&&this.maybeAdjustScroll()},open:function(t){var e=this;this.autoscroll&&t&&this.$nextTick((function(){return e.maybeAdjustScroll()}))}},methods:{maybeAdjustScroll:function(){var t,e=(null===(t=this.$refs.dropdownMenu)||void 0===t?void 0:t.children[this.typeAheadPointer])||!1;if(e){var n=this.getDropdownViewport(),o=e.getBoundingClientRect(),i=o.top,s=o.bottom,r=o.height;if(i<n.top)return this.$refs.dropdownMenu.scrollTop=e.offsetTop;if(s>n.bottom)return this.$refs.dropdownMenu.scrollTop=e.offsetTop-(n.height-r)}},getDropdownViewport:function(){return this.$refs.dropdownMenu?this.$refs.dropdownMenu.getBoundingClientRect():{height:0,top:0,bottom:0}}}},c={data:function(){return{typeAheadPointer:-1}},watch:{filteredOptions:function(){for(var t=0;t<this.filteredOptions.length;t++)if(this.selectable(this.filteredOptions[t])){this.typeAheadPointer=t;break}},open:function(t){t&&this.typeAheadToLastSelected()},selectedValue:function(){this.open&&this.typeAheadToLastSelected()}},methods:{typeAheadUp:function(){for(var t=this.typeAheadPointer-1;t>=0;t--)if(this.selectable(this.filteredOptions[t])){this.typeAheadPointer=t;break}},typeAheadDown:function(){for(var t=this.typeAheadPointer+1;t<this.filteredOptions.length;t++)if(this.selectable(this.filteredOptions[t])){this.typeAheadPointer=t;break}},typeAheadSelect:function(){var t=this.filteredOptions[this.typeAheadPointer];t&&this.selectable(t)&&this.select(t)},typeAheadToLastSelected:function(){this.typeAheadPointer=0!==this.selectedValue.length?this.filteredOptions.indexOf(this.selectedValue[this.selectedValue.length-1]):-1}}},u={props:{loading:{type:Boolean,default:!1}},data:function(){return{mutableLoading:!1}},watch:{search:function(){this.$emit(\"search\",this.search,this.toggleLoading)},loading:function(t){this.mutableLoading=t}},methods:{toggleLoading:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return this.mutableLoading=null==t?!this.mutableLoading:t}}};function p(t,e,n,o,i,s,r,a){var l,c=\"function\"==typeof t?t.options:t;if(e&&(c.render=e,c.staticRenderFns=n,c._compiled=!0),o&&(c.functional=!0),s&&(c._scopeId=\"data-v-\"+s),r?(l=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),i&&i.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(r)},c._ssrRegister=l):i&&(l=a?function(){i.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(t,e){return l.call(e),u(t,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:t,options:c}}const h={Deselect:p({},(function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",width:\"10\",height:\"10\"}},[e(\"path\",{attrs:{d:\"M6.895455 5l2.842897-2.842898c.348864-.348863.348864-.914488 0-1.263636L9.106534.261648c-.348864-.348864-.914489-.348864-1.263636 0L5 3.104545 2.157102.261648c-.348863-.348864-.914488-.348864-1.263636 0L.261648.893466c-.348864.348864-.348864.914489 0 1.263636L3.104545 5 .261648 7.842898c-.348864.348863-.348864.914488 0 1.263636l.631818.631818c.348864.348864.914773.348864 1.263636 0L5 6.895455l2.842898 2.842897c.348863.348864.914772.348864 1.263636 0l.631818-.631818c.348864-.348864.348864-.914489 0-1.263636L6.895455 5z\"}})])}),[],!1,null,null,null).exports,OpenIndicator:p({},(function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",width:\"14\",height:\"10\"}},[e(\"path\",{attrs:{d:\"M9.211364 7.59931l4.48338-4.867229c.407008-.441854.407008-1.158247 0-1.60046l-.73712-.80023c-.407008-.441854-1.066904-.441854-1.474243 0L7 5.198617 2.51662.33139c-.407008-.441853-1.066904-.441853-1.474243 0l-.737121.80023c-.407008.441854-.407008 1.158248 0 1.600461l4.48338 4.867228L7 10l2.211364-2.40069z\"}})])}),[],!1,null,null,null).exports},d={inserted:function(t,e,n){var o=n.context;if(o.appendToBody){var i=o.$refs.toggle.getBoundingClientRect(),s=i.height,r=i.top,a=i.left,l=i.width,c=window.scrollX||window.pageXOffset,u=window.scrollY||window.pageYOffset;t.unbindPosition=o.calculatePosition(t,o,{width:l+\"px\",left:c+a+\"px\",top:u+r+s+\"px\"}),document.body.appendChild(t)}},unbind:function(t,e,n){n.context.appendToBody&&(t.unbindPosition&&\"function\"==typeof t.unbindPosition&&t.unbindPosition(),t.parentNode&&t.parentNode.removeChild(t))}};const f=function(t){var e={};return Object.keys(t).sort().forEach((function(n){e[n]=t[n]})),JSON.stringify(e)};var y=0;const b=function(){return++y};function g(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function v(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(Object(n),!0).forEach((function(e){a()(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}const m=p({components:v({},h),directives:{appendToBody:d},mixins:[l,c,u],props:{value:{},components:{type:Object,default:function(){return{}}},options:{type:Array,default:function(){return[]}},disabled:{type:Boolean,default:!1},clearable:{type:Boolean,default:!0},deselectFromDropdown:{type:Boolean,default:!1},searchable:{type:Boolean,default:!0},multiple:{type:Boolean,default:!1},placeholder:{type:String,default:\"\"},transition:{type:String,default:\"vs__fade\"},clearSearchOnSelect:{type:Boolean,default:!0},closeOnSelect:{type:Boolean,default:!0},label:{type:String,default:\"label\"},autocomplete:{type:String,default:\"off\"},reduce:{type:Function,default:function(t){return t}},selectable:{type:Function,default:function(t){return!0}},getOptionLabel:{type:Function,default:function(t){return\"object\"===s()(t)?t.hasOwnProperty(this.label)?t[this.label]:console.warn('[vue-select warn]: Label key \"option.'.concat(this.label,'\" does not')+\" exist in options object \".concat(JSON.stringify(t),\".\\n\")+\"https://vue-select.org/api/props.html#getoptionlabel\"):t}},getOptionKey:{type:Function,default:function(t){if(\"object\"!==s()(t))return t;try{return t.hasOwnProperty(\"id\")?t.id:f(t)}catch(e){return console.warn(\"[vue-select warn]: Could not stringify this option to generate unique key. Please provide'getOptionKey' prop to return a unique key for each option.\\nhttps://vue-select.org/api/props.html#getoptionkey\",t,e)}}},onTab:{type:Function,default:function(){this.selectOnTab&&!this.isComposing&&this.typeAheadSelect()}},taggable:{type:Boolean,default:!1},tabindex:{type:Number,default:null},pushTags:{type:Boolean,default:!1},filterable:{type:Boolean,default:!0},filterBy:{type:Function,default:function(t,e,n){return(e||\"\").toLocaleLowerCase().indexOf(n.toLocaleLowerCase())>-1}},filter:{type:Function,default:function(t,e){var n=this;return t.filter((function(t){var o=n.getOptionLabel(t);return\"number\"==typeof o&&(o=o.toString()),n.filterBy(t,o,e)}))}},createOption:{type:Function,default:function(t){return\"object\"===s()(this.optionList[0])?a()({},this.label,t):t}},resetOnOptionsChange:{default:!1,validator:function(t){return[\"function\",\"boolean\"].includes(s()(t))}},clearSearchOnBlur:{type:Function,default:function(t){var e=t.clearSearchOnSelect,n=t.multiple;return e&&!n}},noDrop:{type:Boolean,default:!1},inputId:{type:String},dir:{type:String,default:\"auto\"},selectOnTab:{type:Boolean,default:!1},selectOnKeyCodes:{type:Array,default:function(){return[13]}},searchInputQuerySelector:{type:String,default:\"[type=search]\"},mapKeydown:{type:Function,default:function(t,e){return t}},appendToBody:{type:Boolean,default:!1},calculatePosition:{type:Function,default:function(t,e,n){var o=n.width,i=n.top,s=n.left;t.style.top=i,t.style.left=s,t.style.width=o}},dropdownShouldOpen:{type:Function,default:function(t){var e=t.noDrop,n=t.open,o=t.mutableLoading;return!e&&(n&&!o)}},uid:{type:[String,Number],default:function(){return b()}}},data:function(){return{search:\"\",open:!1,isComposing:!1,pushedTags:[],_value:[]}},computed:{isTrackingValues:function(){return void 0===this.value||this.$options.propsData.hasOwnProperty(\"reduce\")},selectedValue:function(){var t=this.value;return this.isTrackingValues&&(t=this.$data._value),null!=t&&\"\"!==t?[].concat(t):[]},optionList:function(){return this.options.concat(this.pushTags?this.pushedTags:[])},searchEl:function(){return this.$scopedSlots.search?this.$refs.selectedOptions.querySelector(this.searchInputQuerySelector):this.$refs.search},scope:function(){var t=this,e={search:this.search,loading:this.loading,searching:this.searching,filteredOptions:this.filteredOptions};return{search:{attributes:v({disabled:this.disabled,placeholder:this.searchPlaceholder,tabindex:this.tabindex,readonly:!this.searchable,id:this.inputId,\"aria-autocomplete\":\"list\",\"aria-labelledby\":\"vs\".concat(this.uid,\"__combobox\"),\"aria-controls\":\"vs\".concat(this.uid,\"__listbox\"),ref:\"search\",type:\"search\",autocomplete:this.autocomplete,value:this.search},this.dropdownOpen&&this.filteredOptions[this.typeAheadPointer]?{\"aria-activedescendant\":\"vs\".concat(this.uid,\"__option-\").concat(this.typeAheadPointer)}:{}),events:{compositionstart:function(){return t.isComposing=!0},compositionend:function(){return t.isComposing=!1},keydown:this.onSearchKeyDown,blur:this.onSearchBlur,focus:this.onSearchFocus,input:function(e){return t.search=e.target.value}}},spinner:{loading:this.mutableLoading},noOptions:{search:this.search,loading:this.mutableLoading,searching:this.searching},openIndicator:{attributes:{ref:\"openIndicator\",role:\"presentation\",class:\"vs__open-indicator\"}},listHeader:e,listFooter:e,header:v({},e,{deselect:this.deselect}),footer:v({},e,{deselect:this.deselect})}},childComponents:function(){return v({},h,{},this.components)},stateClasses:function(){return{\"vs--open\":this.dropdownOpen,\"vs--single\":!this.multiple,\"vs--multiple\":this.multiple,\"vs--searching\":this.searching&&!this.noDrop,\"vs--searchable\":this.searchable&&!this.noDrop,\"vs--unsearchable\":!this.searchable,\"vs--loading\":this.mutableLoading,\"vs--disabled\":this.disabled}},searching:function(){return!!this.search},dropdownOpen:function(){return this.dropdownShouldOpen(this)},searchPlaceholder:function(){return this.isValueEmpty&&this.placeholder?this.placeholder:void 0},filteredOptions:function(){var t=[].concat(this.optionList);if(!this.filterable&&!this.taggable)return t;var e=this.search.length?this.filter(t,this.search,this):t;if(this.taggable&&this.search.length){var n=this.createOption(this.search);this.optionExists(n)||e.unshift(n)}return e},isValueEmpty:function(){return 0===this.selectedValue.length},showClearButton:function(){return!this.multiple&&this.clearable&&!this.open&&!this.isValueEmpty}},watch:{options:function(t,e){var n=this;!this.taggable&&(\"function\"==typeof n.resetOnOptionsChange?n.resetOnOptionsChange(t,e,n.selectedValue):n.resetOnOptionsChange)&&this.clearSelection(),this.value&&this.isTrackingValues&&this.setInternalValueFromOptions(this.value)},value:{immediate:!0,handler:function(t){this.isTrackingValues&&this.setInternalValueFromOptions(t)}},multiple:function(){this.clearSelection()},open:function(t){this.$emit(t?\"open\":\"close\")}},created:function(){this.mutableLoading=this.loading,this.$on(\"option:created\",this.pushTag)},methods:{setInternalValueFromOptions:function(t){var e=this;Array.isArray(t)?this.$data._value=t.map((function(t){return e.findOptionFromReducedValue(t)})):this.$data._value=this.findOptionFromReducedValue(t)},select:function(t){this.$emit(\"option:selecting\",t),this.isOptionSelected(t)?this.deselectFromDropdown&&(this.clearable||this.multiple&&this.selectedValue.length>1)&&this.deselect(t):(this.taggable&&!this.optionExists(t)&&this.$emit(\"option:created\",t),this.multiple&&(t=this.selectedValue.concat(t)),this.updateValue(t),this.$emit(\"option:selected\",t)),this.onAfterSelect(t)},deselect:function(t){var e=this;this.$emit(\"option:deselecting\",t),this.updateValue(this.selectedValue.filter((function(n){return!e.optionComparator(n,t)}))),this.$emit(\"option:deselected\",t)},clearSelection:function(){this.updateValue(this.multiple?[]:null)},onAfterSelect:function(t){this.closeOnSelect&&(this.open=!this.open,this.searchEl.blur()),this.clearSearchOnSelect&&(this.search=\"\")},updateValue:function(t){var e=this;void 0===this.value&&(this.$data._value=t),null!==t&&(t=Array.isArray(t)?t.map((function(t){return e.reduce(t)})):this.reduce(t)),this.$emit(\"input\",t)},toggleDropdown:function(t){var n=t.target!==this.searchEl;n&&t.preventDefault();var o=[].concat(e()(this.$refs.deselectButtons||[]),e()([this.$refs.clearButton]||0));void 0===this.searchEl||o.filter(Boolean).some((function(e){return e.contains(t.target)||e===t.target}))?t.preventDefault():this.open&&n?this.searchEl.blur():this.disabled||(this.open=!0,this.searchEl.focus())},isOptionSelected:function(t){var e=this;return this.selectedValue.some((function(n){return e.optionComparator(n,t)}))},isOptionDeselectable:function(t){return this.isOptionSelected(t)&&this.deselectFromDropdown},optionComparator:function(t,e){return this.getOptionKey(t)===this.getOptionKey(e)},findOptionFromReducedValue:function(t){var n=this,o=[].concat(e()(this.options),e()(this.pushedTags)).filter((function(e){return JSON.stringify(n.reduce(e))===JSON.stringify(t)}));return 1===o.length?o[0]:o.find((function(t){return n.optionComparator(t,n.$data._value)}))||t},closeSearchOptions:function(){this.open=!1,this.$emit(\"search:blur\")},maybeDeleteValue:function(){if(!this.searchEl.value.length&&this.selectedValue&&this.selectedValue.length&&this.clearable){var t=null;this.multiple&&(t=e()(this.selectedValue.slice(0,this.selectedValue.length-1))),this.updateValue(t)}},optionExists:function(t){var e=this;return this.optionList.some((function(n){return e.optionComparator(n,t)}))},normalizeOptionForSlot:function(t){return\"object\"===s()(t)?t:a()({},this.label,t)},pushTag:function(t){this.pushedTags.push(t)},onEscape:function(){this.search.length?this.search=\"\":this.searchEl.blur()},onSearchBlur:function(){if(!this.mousedown||this.searching){var t=this.clearSearchOnSelect,e=this.multiple;return this.clearSearchOnBlur({clearSearchOnSelect:t,multiple:e})&&(this.search=\"\"),void this.closeSearchOptions()}this.mousedown=!1,0!==this.search.length||0!==this.options.length||this.closeSearchOptions()},onSearchFocus:function(){this.open=!0,this.$emit(\"search:focus\")},onMousedown:function(){this.mousedown=!0},onMouseUp:function(){this.mousedown=!1},onSearchKeyDown:function(t){var e=this,n=function(t){return t.preventDefault(),!e.isComposing&&e.typeAheadSelect()},o={8:function(t){return e.maybeDeleteValue()},9:function(t){return e.onTab()},27:function(t){return e.onEscape()},38:function(t){return t.preventDefault(),e.typeAheadUp()},40:function(t){return t.preventDefault(),e.typeAheadDown()}};this.selectOnKeyCodes.forEach((function(t){return o[t]=n}));var i=this.mapKeydown(o,this);if(\"function\"==typeof i[t.keyCode])return i[t.keyCode](t)}}},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n(\"div\",{staticClass:\"v-select\",class:t.stateClasses,attrs:{dir:t.dir}},[t._t(\"header\",null,null,t.scope.header),t._v(\" \"),n(\"div\",{ref:\"toggle\",staticClass:\"vs__dropdown-toggle\",attrs:{id:\"vs\"+t.uid+\"__combobox\",role:\"combobox\",\"aria-expanded\":t.dropdownOpen.toString(),\"aria-owns\":\"vs\"+t.uid+\"__listbox\",\"aria-label\":\"Search for option\"},on:{mousedown:function(e){return t.toggleDropdown(e)}}},[n(\"div\",{ref:\"selectedOptions\",staticClass:\"vs__selected-options\"},[t._l(t.selectedValue,(function(e){return t._t(\"selected-option-container\",[n(\"span\",{key:t.getOptionKey(e),staticClass:\"vs__selected\"},[t._t(\"selected-option\",[t._v(\"\\n            \"+t._s(t.getOptionLabel(e))+\"\\n          \")],null,t.normalizeOptionForSlot(e)),t._v(\" \"),t.multiple?n(\"button\",{ref:\"deselectButtons\",refInFor:!0,staticClass:\"vs__deselect\",attrs:{disabled:t.disabled,type:\"button\",title:\"Deselect \"+t.getOptionLabel(e),\"aria-label\":\"Deselect \"+t.getOptionLabel(e)},on:{click:function(n){return t.deselect(e)}}},[n(t.childComponents.Deselect,{tag:\"component\"})],1):t._e()],2)],{option:t.normalizeOptionForSlot(e),deselect:t.deselect,multiple:t.multiple,disabled:t.disabled})})),t._v(\" \"),t._t(\"search\",[n(\"input\",t._g(t._b({staticClass:\"vs__search\"},\"input\",t.scope.search.attributes,!1),t.scope.search.events))],null,t.scope.search)],2),t._v(\" \"),n(\"div\",{ref:\"actions\",staticClass:\"vs__actions\"},[n(\"button\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.showClearButton,expression:\"showClearButton\"}],ref:\"clearButton\",staticClass:\"vs__clear\",attrs:{disabled:t.disabled,type:\"button\",title:\"Clear Selected\",\"aria-label\":\"Clear Selected\"},on:{click:t.clearSelection}},[n(t.childComponents.Deselect,{tag:\"component\"})],1),t._v(\" \"),t._t(\"open-indicator\",[t.noDrop?t._e():n(t.childComponents.OpenIndicator,t._b({tag:\"component\"},\"component\",t.scope.openIndicator.attributes,!1))],null,t.scope.openIndicator),t._v(\" \"),t._t(\"spinner\",[n(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.mutableLoading,expression:\"mutableLoading\"}],staticClass:\"vs__spinner\"},[t._v(\"Loading...\")])],null,t.scope.spinner)],2)]),t._v(\" \"),n(\"transition\",{attrs:{name:t.transition}},[t.dropdownOpen?n(\"ul\",{directives:[{name:\"append-to-body\",rawName:\"v-append-to-body\"}],key:\"vs\"+t.uid+\"__listbox\",ref:\"dropdownMenu\",staticClass:\"vs__dropdown-menu\",attrs:{id:\"vs\"+t.uid+\"__listbox\",role:\"listbox\",tabindex:\"-1\"},on:{mousedown:function(e){return e.preventDefault(),t.onMousedown(e)},mouseup:t.onMouseUp}},[t._t(\"list-header\",null,null,t.scope.listHeader),t._v(\" \"),t._l(t.filteredOptions,(function(e,o){return n(\"li\",{key:t.getOptionKey(e),staticClass:\"vs__dropdown-option\",class:{\"vs__dropdown-option--deselect\":t.isOptionDeselectable(e)&&o===t.typeAheadPointer,\"vs__dropdown-option--selected\":t.isOptionSelected(e),\"vs__dropdown-option--highlight\":o===t.typeAheadPointer,\"vs__dropdown-option--disabled\":!t.selectable(e)},attrs:{id:\"vs\"+t.uid+\"__option-\"+o,role:\"option\",\"aria-selected\":o===t.typeAheadPointer||null},on:{mouseover:function(n){t.selectable(e)&&(t.typeAheadPointer=o)},click:function(n){n.preventDefault(),n.stopPropagation(),t.selectable(e)&&t.select(e)}}},[t._t(\"option\",[t._v(\"\\n          \"+t._s(t.getOptionLabel(e))+\"\\n        \")],null,t.normalizeOptionForSlot(e))],2)})),t._v(\" \"),0===t.filteredOptions.length?n(\"li\",{staticClass:\"vs__no-options\"},[t._t(\"no-options\",[t._v(\"\\n          Sorry, no matching options.\\n        \")],null,t.scope.noOptions)],2):t._e(),t._v(\" \"),t._t(\"list-footer\",null,null,t.scope.listFooter)],2):n(\"ul\",{staticStyle:{display:\"none\",visibility:\"hidden\"},attrs:{id:\"vs\"+t.uid+\"__listbox\",role:\"listbox\"}})]),t._v(\" \"),t._t(\"footer\",null,null,t.scope.footer)],2)}),[],!1,null,null,null).exports,_={ajax:u,pointer:c,pointerScroll:l},O=m})(),o})()}));\n//# sourceMappingURL=vue-select.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-select/dist/vue-select.js\n");

/***/ }),

/***/ "./node_modules/vue/dist/vue.esm.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*!\n * Vue.js v2.6.14\n * (c) 2014-2021 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof __webpack_require__.g !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = __webpack_require__.g['process'] && __webpack_require__.g['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = (/* unused pure expression or super */ null && (noop));\nvar generateComponentTrace = ((/* unused pure expression or super */ null && (noop))); // work around flow check\nvar formatComponentName = ((/* unused pure expression or super */ null && (noop)));\n\nif (false) { var repeat, classify, classifyRE, hasConsole; }\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (false) {}\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {}\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (false\n  ) {}\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     false && 0;\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (false\n  ) {}\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     false && 0;\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       false && 0;\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n     false && 0;\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (false) {}\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"production\" !== 'production') {}\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {}\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (false) {}\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (false) {}\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {}\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {}\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    false\n  ) {}\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {}\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i], vm);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  var haveExpectedTypes = expectedTypes.some(function (t) { return t; });\n  if (!valid && haveExpectedTypes) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;\n\nfunction assertType (value, type, vm) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    try {\n      valid = value instanceof type;\n    } catch (e) {\n      warn('Invalid prop type: \"' + String(type) + '\" is not a constructor', vm);\n      valid = false;\n    }\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\nvar functionTypeCheckRE = /^\\s*function (\\w+)/;\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(functionTypeCheckRE);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  // check if we need to specify expected value\n  if (\n    expectedTypes.length === 1 &&\n    isExplicable(expectedType) &&\n    isExplicable(typeof value) &&\n    !isBoolean(expectedType, receivedType)\n  ) {\n    message += \" with value \" + (styleValue(value, expectedType));\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + (styleValue(value, receivedType)) + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nvar EXPLICABLE_TYPES = (/* unused pure expression or super */ null && (['string', 'number', 'boolean']));\nfunction isExplicable (value) {\n  return EXPLICABLE_TYPES.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (false) {}\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) { var perf; }\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) { var getHandler, hasHandler, isBuiltInModifier, hasProxy, warnReservedPrefix, warnNonPresent, allowedGlobals; }\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n       false && 0;\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) { var keyInLowerCase; }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {} else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (false) {}\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    var vnode = res && res[0];\n    return res && (\n      !vnode ||\n      (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode)) // #9658, #10391\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallbackRender,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) {\n    // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (false) {}\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes =\n      scopedSlotFn(props) ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  } else {\n    nodes =\n      this.$slots[name] ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n  return eventKeyCode === undefined\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n       false && 0;\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       false && 0;\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (false) {}\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (false) {}\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {}\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  // we know it's MountedComponentVNode but flow doesn't\n  vnode,\n  // activeInstance in lifecycle state\n  parent\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n     false && 0;\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {}\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (false) {}\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {} else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {} else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {}\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n       false && 0;\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (0)\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) { var lowerCaseEvent; }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {}\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {} else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {}\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||\n    (!newScopedSlots && vm.$scopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {}\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {}\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {}\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (false) {}\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? 0\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n       false && 0;\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        var info = \"callback for watcher \\\"\" + (this.expression) + \"\\\"\";\n        invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) { var hyphenatedKey; } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n     false && 0;\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {}\n    if (props && hasOwn(props, key)) {\n       false && 0;\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {}\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {}\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (false) {}\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {}\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {}\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      var info = \"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\";\n      pushTarget();\n      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);\n      popTarget();\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {}\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {} else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {}\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (false\n  ) {}\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {}\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {}\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var entry = cache[key];\n    if (entry) {\n      var name = entry.name;\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var entry = cache[key];\n  if (entry && (!current || entry.tag !== current.tag)) {\n    entry.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  methods: {\n    cacheVNode: function cacheVNode() {\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var vnodeToCache = ref.vnodeToCache;\n      var keyToCache = ref.keyToCache;\n      if (vnodeToCache) {\n        var tag = vnodeToCache.tag;\n        var componentInstance = vnodeToCache.componentInstance;\n        var componentOptions = vnodeToCache.componentOptions;\n        cache[keyToCache] = {\n          name: getComponentName(componentOptions),\n          tag: tag,\n          componentInstance: componentInstance,\n        };\n        keys.push(keyToCache);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n        this.vnodeToCache = null;\n      }\n    }\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.cacheVNode();\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  updated: function updated () {\n    this.cacheVNode();\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        // delay setting the cache until update\n        this.vnodeToCache = vnode;\n        this.keyToCache = key;\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {}\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.14';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n       false && 0;\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.asyncFactory === b.asyncFactory && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {}\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {}\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (false) {}\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (false) {}\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (false) {}\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (false) {}\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {}\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {}\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {}\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur, vnode.data.pre);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value, isInPre) {\n  if (isInPre || el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {}\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {}\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {}\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (false) { var binding, typeBinding, value$1; }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecessary `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {}\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {}\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n     false && 0;\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {}\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {}\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) { var name, opts; }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        false\n      ) {}\n    }\n    if (false\n    ) {}\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) { var res; }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) { var res; }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {}\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (false) {}\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {}\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:|^#/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /[ \\f\\t\\r\\n]+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!(\n    el.component ||\n    el.attrsMap[':is'] ||\n    el.attrsMap['v-bind:is'] ||\n    !(el.attrsMap.is ? isReservedTag(el.attrsMap.is) : isReservedTag(el.tag))\n  ); };\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (false) {}\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (false) {}\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (false) {}\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n         false && 0;\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (false) {}\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (false) {}\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (false) {}\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (false) {}\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anything as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (false) {}\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) { var parent, iterator; }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (false) {}\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {}\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {}\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (false) {}\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (false) {}\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (false) {}\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (false) {}\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (false) {}\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {}\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          false\n        ) {}\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (false) {}\n      }\n    } else {\n      // literal attribute\n      if (false) { var res; }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {}\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \".apply(null, arguments)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \").apply(null, arguments)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {}\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  // fix #11483, Root level <script> tags should not be rendered.\n  var code = ast ? (ast.tag === 'script' ? 'null' : genElement(ast, state)) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n       false && 0;\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {}\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {}\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",function(){return \" + children + \"}\") : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (name === 'v-slot' || name[0] === '#') {\n            checkFunctionParameterExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stripped = exp.replace(stripStringRE, '');\n  var keywordMatch = stripped.match(unaryOperatorsRE);\n  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\nfunction checkFunctionParameterExpression (exp, text, warn, range) {\n  try {\n    new Function(exp, '');\n  } catch (e) {\n    warn(\n      \"invalid function parameter expression: \" + (e.message) + \" in\\n\\n\" +\n      \"    \" + exp + \"\\n\\n\" +\n      \"  Raw expression: \" + (text.trim()) + \"\\n\",\n      range\n    );\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (false) {}\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {}\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {}\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (false) { var leadingSpaceLength; }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (false) {}\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n     false && 0;\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {}\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {}\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {}\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: \"production\" !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {}\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Vue);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue/dist/vue.esm.js\n");

/***/ }),

/***/ "./node_modules/axios/package.json":
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "js/bundle/main." + {"484":"0afb","550":"cc7a","737":"d178","827":"daa1"}[chunkId] + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "wpck:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl + "../../";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			179: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkwpck"] = self["webpackChunkwpck"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/main.js");
/******/ 	
/******/ })()
;